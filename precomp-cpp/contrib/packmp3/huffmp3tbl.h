/* -----------------------------------------------
	huffman tables according to mp3 standard
	----------------------------------------------- */


/* -----------------------------------------------
	small values table A
	----------------------------------------------- */
static huffman_code htabA_enc[ 16 ] = {
	{ 1, 0x01 }, // 0000 (1/1)
	{ 4, 0x05 }, // 0001 (4/0101)
	{ 4, 0x04 }, // 0010 (4/0100)
	{ 5, 0x05 }, // 0011 (5/00101)
	{ 4, 0x06 }, // 0100 (4/0110)
	{ 6, 0x05 }, // 0101 (6/000101)
	{ 5, 0x04 }, // 0110 (5/00100)
	{ 6, 0x04 }, // 0111 (6/000100)
	{ 4, 0x07 }, // 1000 (4/0111)
	{ 5, 0x03 }, // 1001 (5/00011)
	{ 5, 0x06 }, // 1010 (5/00110)
	{ 6, 0x00 }, // 1011 (6/000000)
	{ 5, 0x07 }, // 1100 (5/00111)
	{ 6, 0x02 }, // 1101 (6/000010)
	{ 6, 0x03 }, // 1110 (6/000011)
	{ 6, 0x01 }  // 1111 (6/000001)
};

/* -----------------------------------------------
	small values table B
	----------------------------------------------- */
static huffman_code htabB_enc[ 16 ] = {
	{ 4, 0x0F }, // 0000 (4/1111)
	{ 4, 0x0E }, // 0001 (4/1110)
	{ 4, 0x0D }, // 0010 (4/1101)
	{ 4, 0x0C }, // 0011 (4/1100)
	{ 4, 0x0B }, // 0100 (4/1011)
	{ 4, 0x0A }, // 0101 (4/1010)
	{ 4, 0x09 }, // 0110 (4/1001)
	{ 4, 0x08 }, // 0111 (4/1000)
	{ 4, 0x07 }, // 1000 (4/0111)
	{ 4, 0x06 }, // 1001 (4/0110)
	{ 4, 0x05 }, // 1010 (4/0101)
	{ 4, 0x04 }, // 1011 (4/0100)
	{ 4, 0x03 }, // 1100 (4/0011)
	{ 4, 0x02 }, // 1101 (4/0010)
	{ 4, 0x01 }, // 1110 (4/0001)
	{ 4, 0x00 }  // 1111 (4/0000)
};

/* -----------------------------------------------
	big values table 0 (max 0)
	----------------------------------------------- */
static huffman_code htab0_enc_raw[ 1 ] = {
	{  0, 0x0000 }  //  0/ 0 ( 0/0)
};
static huffman_code* htab0_enc[ 1 ] = {
	htab0_enc_raw + 0  // htab0 v0=0 pointer
};

/* -----------------------------------------------
	big values table 1 (max 1)
	----------------------------------------------- */
static huffman_code htab1_enc_raw[ 4 ] = {
	{  1, 0x0001 }, //  0/ 0 ( 1/1)
	{  3, 0x0001 }, //  0/ 1 ( 3/001)
	{  2, 0x0001 }, //  1/ 0 ( 2/01)
	{  3, 0x0000 }  //  1/ 1 ( 3/000)
};
static huffman_code* htab1_enc[ 2 ] = {
	htab1_enc_raw + 0, // htab1 v0=0 pointer
	htab1_enc_raw + 2  // htab1 v0=1 pointer
};

/* -----------------------------------------------
	big values table 2 (max 2)
	----------------------------------------------- */
static huffman_code htab2_enc_raw[ 9 ] = {
	{  1, 0x0001 }, //  0/ 0 ( 1/1)
	{  3, 0x0002 }, //  0/ 1 ( 3/010)
	{  6, 0x0001 }, //  0/ 2 ( 6/000001)
	{  3, 0x0003 }, //  1/ 0 ( 3/011)
	{  3, 0x0001 }, //  1/ 1 ( 3/001)
	{  5, 0x0001 }, //  1/ 2 ( 5/00001)
	{  5, 0x0003 }, //  2/ 0 ( 5/00011)
	{  5, 0x0002 }, //  2/ 1 ( 5/00010)
	{  6, 0x0000 }  //  2/ 2 ( 6/000000)
};
static huffman_code* htab2_enc[ 3 ] = {
	htab2_enc_raw + 0, // htab2 v0=0 pointer
	htab2_enc_raw + 3, // htab2 v0=1 pointer
	htab2_enc_raw + 6  // htab2 v0=2 pointer
};

/* -----------------------------------------------
	big values table 3 (max 2)
	----------------------------------------------- */
static huffman_code htab3_enc_raw[ 9 ] = {
	{  2, 0x0003 }, //  0/ 0 ( 2/11)
	{  2, 0x0002 }, //  0/ 1 ( 2/10)
	{  6, 0x0001 }, //  0/ 2 ( 6/000001)
	{  3, 0x0001 }, //  1/ 0 ( 3/001)
	{  2, 0x0001 }, //  1/ 1 ( 2/01)
	{  5, 0x0001 }, //  1/ 2 ( 5/00001)
	{  5, 0x0003 }, //  2/ 0 ( 5/00011)
	{  5, 0x0002 }, //  2/ 1 ( 5/00010)
	{  6, 0x0000 }  //  2/ 2 ( 6/000000)
};
static huffman_code* htab3_enc[ 3 ] = {
	htab3_enc_raw + 0, // htab3 v0=0 pointer
	htab3_enc_raw + 3, // htab3 v0=1 pointer
	htab3_enc_raw + 6  // htab3 v0=2 pointer
};

/* -----------------------------------------------
	big values table 5 (max 3)
	----------------------------------------------- */
static huffman_code htab5_enc_raw[ 16 ] = {
	{  1, 0x0001 }, //  0/ 0 ( 1/1)
	{  3, 0x0002 }, //  0/ 1 ( 3/010)
	{  6, 0x0006 }, //  0/ 2 ( 6/000110)
	{  7, 0x0005 }, //  0/ 3 ( 7/0000101)
	{  3, 0x0003 }, //  1/ 0 ( 3/011)
	{  3, 0x0001 }, //  1/ 1 ( 3/001)
	{  6, 0x0004 }, //  1/ 2 ( 6/000100)
	{  7, 0x0004 }, //  1/ 3 ( 7/0000100)
	{  6, 0x0007 }, //  2/ 0 ( 6/000111)
	{  6, 0x0005 }, //  2/ 1 ( 6/000101)
	{  7, 0x0007 }, //  2/ 2 ( 7/0000111)
	{  8, 0x0001 }, //  2/ 3 ( 8/00000001)
	{  7, 0x0006 }, //  3/ 0 ( 7/0000110)
	{  6, 0x0001 }, //  3/ 1 ( 6/000001)
	{  7, 0x0001 }, //  3/ 2 ( 7/0000001)
	{  8, 0x0000 }  //  3/ 3 ( 8/00000000)
};
static huffman_code* htab5_enc[ 4 ] = {
	htab5_enc_raw +  0, // htab5 v0=0 pointer
	htab5_enc_raw +  4, // htab5 v0=1 pointer
	htab5_enc_raw +  8, // htab5 v0=2 pointer
	htab5_enc_raw + 12  // htab5 v0=3 pointer
};

/* -----------------------------------------------
	big values table 6 (max 3)
	----------------------------------------------- */
static huffman_code htab6_enc_raw[ 16 ] = {
	{  3, 0x0007 }, //  0/ 0 ( 3/111)
	{  3, 0x0003 }, //  0/ 1 ( 3/011)
	{  5, 0x0005 }, //  0/ 2 ( 5/00101)
	{  7, 0x0001 }, //  0/ 3 ( 7/0000001)
	{  3, 0x0006 }, //  1/ 0 ( 3/110)
	{  2, 0x0002 }, //  1/ 1 ( 2/10)
	{  4, 0x0003 }, //  1/ 2 ( 4/0011)
	{  5, 0x0002 }, //  1/ 3 ( 5/00010)
	{  4, 0x0005 }, //  2/ 0 ( 4/0101)
	{  4, 0x0004 }, //  2/ 1 ( 4/0100)
	{  5, 0x0004 }, //  2/ 2 ( 5/00100)
	{  6, 0x0001 }, //  2/ 3 ( 6/000001)
	{  6, 0x0003 }, //  3/ 0 ( 6/000011)
	{  5, 0x0003 }, //  3/ 1 ( 5/00011)
	{  6, 0x0002 }, //  3/ 2 ( 6/000010)
	{  7, 0x0000 }  //  3/ 3 ( 7/0000000)
};
static huffman_code* htab6_enc[ 4 ] = {
	htab6_enc_raw +  0, // htab6 v0=0 pointer
	htab6_enc_raw +  4, // htab6 v0=1 pointer
	htab6_enc_raw +  8, // htab6 v0=2 pointer
	htab6_enc_raw + 12  // htab6 v0=3 pointer
};

/* -----------------------------------------------
	big values table 7 (max 5)
	----------------------------------------------- */
static huffman_code htab7_enc_raw[ 36 ] = {
	{  1, 0x0001 }, //  0/ 0 ( 1/1)
	{  3, 0x0002 }, //  0/ 1 ( 3/010)
	{  6, 0x000A }, //  0/ 2 ( 6/001010)
	{  8, 0x0013 }, //  0/ 3 ( 8/00010011)
	{  8, 0x0010 }, //  0/ 4 ( 8/00010000)
	{  9, 0x000A }, //  0/ 5 ( 9/000001010)
	{  3, 0x0003 }, //  1/ 0 ( 3/011)
	{  4, 0x0003 }, //  1/ 1 ( 4/0011)
	{  6, 0x0007 }, //  1/ 2 ( 6/000111)
	{  7, 0x000A }, //  1/ 3 ( 7/0001010)
	{  7, 0x0005 }, //  1/ 4 ( 7/0000101)
	{  8, 0x0003 }, //  1/ 5 ( 8/00000011)
	{  6, 0x000B }, //  2/ 0 ( 6/001011)
	{  5, 0x0004 }, //  2/ 1 ( 5/00100)
	{  7, 0x000D }, //  2/ 2 ( 7/0001101)
	{  8, 0x0011 }, //  2/ 3 ( 8/00010001)
	{  8, 0x0008 }, //  2/ 4 ( 8/00001000)
	{  9, 0x0004 }, //  2/ 5 ( 9/000000100)
	{  7, 0x000C }, //  3/ 0 ( 7/0001100)
	{  7, 0x000B }, //  3/ 1 ( 7/0001011)
	{  8, 0x0012 }, //  3/ 2 ( 8/00010010)
	{  9, 0x000F }, //  3/ 3 ( 9/000001111)
	{  9, 0x000B }, //  3/ 4 ( 9/000001011)
	{  9, 0x0002 }, //  3/ 5 ( 9/000000010)
	{  7, 0x0007 }, //  4/ 0 ( 7/0000111)
	{  7, 0x0006 }, //  4/ 1 ( 7/0000110)
	{  8, 0x0009 }, //  4/ 2 ( 8/00001001)
	{  9, 0x000E }, //  4/ 3 ( 9/000001110)
	{  9, 0x0003 }, //  4/ 4 ( 9/000000011)
	{ 10, 0x0001 }, //  4/ 5 (10/0000000001)
	{  8, 0x0006 }, //  5/ 0 ( 8/00000110)
	{  8, 0x0004 }, //  5/ 1 ( 8/00000100)
	{  9, 0x0005 }, //  5/ 2 ( 9/000000101)
	{ 10, 0x0003 }, //  5/ 3 (10/0000000011)
	{ 10, 0x0002 }, //  5/ 4 (10/0000000010)
	{ 10, 0x0000 }  //  5/ 5 (10/0000000000)
};
static huffman_code* htab7_enc[ 6 ] = {
	htab7_enc_raw +  0, // htab7 v0=0 pointer
	htab7_enc_raw +  6, // htab7 v0=1 pointer
	htab7_enc_raw + 12, // htab7 v0=2 pointer
	htab7_enc_raw + 18, // htab7 v0=3 pointer
	htab7_enc_raw + 24, // htab7 v0=4 pointer
	htab7_enc_raw + 30  // htab7 v0=5 pointer
};

/* -----------------------------------------------
	big values table 8 (max 5)
	----------------------------------------------- */
static huffman_code htab8_enc_raw[ 36 ] = {
	{  2, 0x0003 }, //  0/ 0 ( 2/11)
	{  3, 0x0004 }, //  0/ 1 ( 3/100)
	{  6, 0x0006 }, //  0/ 2 ( 6/000110)
	{  8, 0x0012 }, //  0/ 3 ( 8/00010010)
	{  8, 0x000C }, //  0/ 4 ( 8/00001100)
	{  9, 0x0005 }, //  0/ 5 ( 9/000000101)
	{  3, 0x0005 }, //  1/ 0 ( 3/101)
	{  2, 0x0001 }, //  1/ 1 ( 2/01)
	{  4, 0x0002 }, //  1/ 2 ( 4/0010)
	{  8, 0x0010 }, //  1/ 3 ( 8/00010000)
	{  8, 0x0009 }, //  1/ 4 ( 8/00001001)
	{  8, 0x0003 }, //  1/ 5 ( 8/00000011)
	{  6, 0x0007 }, //  2/ 0 ( 6/000111)
	{  4, 0x0003 }, //  2/ 1 ( 4/0011)
	{  6, 0x0005 }, //  2/ 2 ( 6/000101)
	{  8, 0x000E }, //  2/ 3 ( 8/00001110)
	{  8, 0x0007 }, //  2/ 4 ( 8/00000111)
	{  9, 0x0003 }, //  2/ 5 ( 9/000000011)
	{  8, 0x0013 }, //  3/ 0 ( 8/00010011)
	{  8, 0x0011 }, //  3/ 1 ( 8/00010001)
	{  8, 0x000F }, //  3/ 2 ( 8/00001111)
	{  9, 0x000D }, //  3/ 3 ( 9/000001101)
	{  9, 0x000A }, //  3/ 4 ( 9/000001010)
	{ 10, 0x0004 }, //  3/ 5 (10/0000000100)
	{  8, 0x000D }, //  4/ 0 ( 8/00001101)
	{  7, 0x0005 }, //  4/ 1 ( 7/0000101)
	{  8, 0x0008 }, //  4/ 2 ( 8/00001000)
	{  9, 0x000B }, //  4/ 3 ( 9/000001011)
	{ 10, 0x0005 }, //  4/ 4 (10/0000000101)
	{ 10, 0x0001 }, //  4/ 5 (10/0000000001)
	{  9, 0x000C }, //  5/ 0 ( 9/000001100)
	{  8, 0x0004 }, //  5/ 1 ( 8/00000100)
	{  9, 0x0004 }, //  5/ 2 ( 9/000000100)
	{  9, 0x0001 }, //  5/ 3 ( 9/000000001)
	{ 11, 0x0001 }, //  5/ 4 (11/00000000001)
	{ 11, 0x0000 }  //  5/ 5 (11/00000000000)
};
static huffman_code* htab8_enc[ 6 ] = {
	htab8_enc_raw +  0, // htab8 v0=0 pointer
	htab8_enc_raw +  6, // htab8 v0=1 pointer
	htab8_enc_raw + 12, // htab8 v0=2 pointer
	htab8_enc_raw + 18, // htab8 v0=3 pointer
	htab8_enc_raw + 24, // htab8 v0=4 pointer
	htab8_enc_raw + 30  // htab8 v0=5 pointer
};

/* -----------------------------------------------
	big values table 9 (max 5)
	----------------------------------------------- */
static huffman_code htab9_enc_raw[ 36 ] = {
	{  3, 0x0007 }, //  0/ 0 ( 3/111)
	{  3, 0x0005 }, //  0/ 1 ( 3/101)
	{  5, 0x0009 }, //  0/ 2 ( 5/01001)
	{  6, 0x000E }, //  0/ 3 ( 6/001110)
	{  8, 0x000F }, //  0/ 4 ( 8/00001111)
	{  9, 0x0007 }, //  0/ 5 ( 9/000000111)
	{  3, 0x0006 }, //  1/ 0 ( 3/110)
	{  3, 0x0004 }, //  1/ 1 ( 3/100)
	{  4, 0x0005 }, //  1/ 2 ( 4/0101)
	{  5, 0x0005 }, //  1/ 3 ( 5/00101)
	{  6, 0x0006 }, //  1/ 4 ( 6/000110)
	{  8, 0x0007 }, //  1/ 5 ( 8/00000111)
	{  4, 0x0007 }, //  2/ 0 ( 4/0111)
	{  4, 0x0006 }, //  2/ 1 ( 4/0110)
	{  5, 0x0008 }, //  2/ 2 ( 5/01000)
	{  6, 0x0008 }, //  2/ 3 ( 6/001000)
	{  7, 0x0008 }, //  2/ 4 ( 7/0001000)
	{  8, 0x0005 }, //  2/ 5 ( 8/00000101)
	{  6, 0x000F }, //  3/ 0 ( 6/001111)
	{  5, 0x0006 }, //  3/ 1 ( 5/00110)
	{  6, 0x0009 }, //  3/ 2 ( 6/001001)
	{  7, 0x000A }, //  3/ 3 ( 7/0001010)
	{  7, 0x0005 }, //  3/ 4 ( 7/0000101)
	{  8, 0x0001 }, //  3/ 5 ( 8/00000001)
	{  7, 0x000B }, //  4/ 0 ( 7/0001011)
	{  6, 0x0007 }, //  4/ 1 ( 6/000111)
	{  7, 0x0009 }, //  4/ 2 ( 7/0001001)
	{  7, 0x0006 }, //  4/ 3 ( 7/0000110)
	{  8, 0x0004 }, //  4/ 4 ( 8/00000100)
	{  9, 0x0001 }, //  4/ 5 ( 9/000000001)
	{  8, 0x000E }, //  5/ 0 ( 8/00001110)
	{  7, 0x0004 }, //  5/ 1 ( 7/0000100)
	{  8, 0x0006 }, //  5/ 2 ( 8/00000110)
	{  8, 0x0002 }, //  5/ 3 ( 8/00000010)
	{  9, 0x0006 }, //  5/ 4 ( 9/000000110)
	{  9, 0x0000 }  //  5/ 5 ( 9/000000000)
};
static huffman_code* htab9_enc[ 6 ] = {
	htab9_enc_raw +  0, // htab9 v0=0 pointer
	htab9_enc_raw +  6, // htab9 v0=1 pointer
	htab9_enc_raw + 12, // htab9 v0=2 pointer
	htab9_enc_raw + 18, // htab9 v0=3 pointer
	htab9_enc_raw + 24, // htab9 v0=4 pointer
	htab9_enc_raw + 30  // htab9 v0=5 pointer
};

/* -----------------------------------------------
	big values table 10 (max 7)
	----------------------------------------------- */
static huffman_code htab10_enc_raw[ 64 ] = {
	{  1, 0x0001 }, //  0/ 0 ( 1/1)
	{  3, 0x0002 }, //  0/ 1 ( 3/010)
	{  6, 0x000A }, //  0/ 2 ( 6/001010)
	{  8, 0x0017 }, //  0/ 3 ( 8/00010111)
	{  9, 0x0023 }, //  0/ 4 ( 9/000100011)
	{  9, 0x001E }, //  0/ 5 ( 9/000011110)
	{  9, 0x000C }, //  0/ 6 ( 9/000001100)
	{ 10, 0x0011 }, //  0/ 7 (10/0000010001)
	{  3, 0x0003 }, //  1/ 0 ( 3/011)
	{  4, 0x0003 }, //  1/ 1 ( 4/0011)
	{  6, 0x0008 }, //  1/ 2 ( 6/001000)
	{  7, 0x000C }, //  1/ 3 ( 7/0001100)
	{  8, 0x0012 }, //  1/ 4 ( 8/00010010)
	{  9, 0x0015 }, //  1/ 5 ( 9/000010101)
	{  8, 0x000C }, //  1/ 6 ( 8/00001100)
	{  8, 0x0007 }, //  1/ 7 ( 8/00000111)
	{  6, 0x000B }, //  2/ 0 ( 6/001011)
	{  6, 0x0009 }, //  2/ 1 ( 6/001001)
	{  7, 0x000F }, //  2/ 2 ( 7/0001111)
	{  8, 0x0015 }, //  2/ 3 ( 8/00010101)
	{  9, 0x0020 }, //  2/ 4 ( 9/000100000)
	{ 10, 0x0028 }, //  2/ 5 (10/0000101000)
	{  9, 0x0013 }, //  2/ 6 ( 9/000010011)
	{  9, 0x0006 }, //  2/ 7 ( 9/000000110)
	{  7, 0x000E }, //  3/ 0 ( 7/0001110)
	{  7, 0x000D }, //  3/ 1 ( 7/0001101)
	{  8, 0x0016 }, //  3/ 2 ( 8/00010110)
	{  9, 0x0022 }, //  3/ 3 ( 9/000100010)
	{ 10, 0x002E }, //  3/ 4 (10/0000101110)
	{ 10, 0x0017 }, //  3/ 5 (10/0000010111)
	{  9, 0x0012 }, //  3/ 6 ( 9/000010010)
	{ 10, 0x0007 }, //  3/ 7 (10/0000000111)
	{  8, 0x0014 }, //  4/ 0 ( 8/00010100)
	{  8, 0x0013 }, //  4/ 1 ( 8/00010011)
	{  9, 0x0021 }, //  4/ 2 ( 9/000100001)
	{ 10, 0x002F }, //  4/ 3 (10/0000101111)
	{ 10, 0x001B }, //  4/ 4 (10/0000011011)
	{ 10, 0x0016 }, //  4/ 5 (10/0000010110)
	{ 10, 0x0009 }, //  4/ 6 (10/0000001001)
	{ 10, 0x0003 }, //  4/ 7 (10/0000000011)
	{  9, 0x001F }, //  5/ 0 ( 9/000011111)
	{  9, 0x0016 }, //  5/ 1 ( 9/000010110)
	{ 10, 0x0029 }, //  5/ 2 (10/0000101001)
	{ 10, 0x001A }, //  5/ 3 (10/0000011010)
	{ 11, 0x0015 }, //  5/ 4 (11/00000010101)
	{ 11, 0x0014 }, //  5/ 5 (11/00000010100)
	{ 10, 0x0005 }, //  5/ 6 (10/0000000101)
	{ 11, 0x0003 }, //  5/ 7 (11/00000000011)
	{  8, 0x000E }, //  6/ 0 ( 8/00001110)
	{  8, 0x000D }, //  6/ 1 ( 8/00001101)
	{  9, 0x000A }, //  6/ 2 ( 9/000001010)
	{ 10, 0x000B }, //  6/ 3 (10/0000001011)
	{ 10, 0x0010 }, //  6/ 4 (10/0000010000)
	{ 10, 0x0006 }, //  6/ 5 (10/0000000110)
	{ 11, 0x0005 }, //  6/ 6 (11/00000000101)
	{ 11, 0x0001 }, //  6/ 7 (11/00000000001)
	{  9, 0x0009 }, //  7/ 0 ( 9/000001001)
	{  8, 0x0008 }, //  7/ 1 ( 8/00001000)
	{  9, 0x0007 }, //  7/ 2 ( 9/000000111)
	{ 10, 0x0008 }, //  7/ 3 (10/0000001000)
	{ 10, 0x0004 }, //  7/ 4 (10/0000000100)
	{ 11, 0x0004 }, //  7/ 5 (11/00000000100)
	{ 11, 0x0002 }, //  7/ 6 (11/00000000010)
	{ 11, 0x0000 }  //  7/ 7 (11/00000000000)
};
static huffman_code* htab10_enc[ 8 ] = {
	htab10_enc_raw +  0, // htab10 v0=0 pointer
	htab10_enc_raw +  8, // htab10 v0=1 pointer
	htab10_enc_raw + 16, // htab10 v0=2 pointer
	htab10_enc_raw + 24, // htab10 v0=3 pointer
	htab10_enc_raw + 32, // htab10 v0=4 pointer
	htab10_enc_raw + 40, // htab10 v0=5 pointer
	htab10_enc_raw + 48, // htab10 v0=6 pointer
	htab10_enc_raw + 56  // htab10 v0=7 pointer
};

/* -----------------------------------------------
	big values table 11 (max 7)
	----------------------------------------------- */
static huffman_code htab11_enc_raw[ 64 ] = {
	{  2, 0x0003 }, //  0/ 0 ( 2/11)
	{  3, 0x0004 }, //  0/ 1 ( 3/100)
	{  5, 0x000A }, //  0/ 2 ( 5/01010)
	{  7, 0x0018 }, //  0/ 3 ( 7/0011000)
	{  8, 0x0022 }, //  0/ 4 ( 8/00100010)
	{  9, 0x0021 }, //  0/ 5 ( 9/000100001)
	{  8, 0x0015 }, //  0/ 6 ( 8/00010101)
	{  9, 0x000F }, //  0/ 7 ( 9/000001111)
	{  3, 0x0005 }, //  1/ 0 ( 3/101)
	{  3, 0x0003 }, //  1/ 1 ( 3/011)
	{  4, 0x0004 }, //  1/ 2 ( 4/0100)
	{  6, 0x000A }, //  1/ 3 ( 6/001010)
	{  8, 0x0020 }, //  1/ 4 ( 8/00100000)
	{  8, 0x0011 }, //  1/ 5 ( 8/00010001)
	{  7, 0x000B }, //  1/ 6 ( 7/0001011)
	{  8, 0x000A }, //  1/ 7 ( 8/00001010)
	{  5, 0x000B }, //  2/ 0 ( 5/01011)
	{  5, 0x0007 }, //  2/ 1 ( 5/00111)
	{  6, 0x000D }, //  2/ 2 ( 6/001101)
	{  7, 0x0012 }, //  2/ 3 ( 7/0010010)
	{  8, 0x001E }, //  2/ 4 ( 8/00011110)
	{  9, 0x001F }, //  2/ 5 ( 9/000011111)
	{  8, 0x0014 }, //  2/ 6 ( 8/00010100)
	{  8, 0x0005 }, //  2/ 7 ( 8/00000101)
	{  7, 0x0019 }, //  3/ 0 ( 7/0011001)
	{  6, 0x000B }, //  3/ 1 ( 6/001011)
	{  7, 0x0013 }, //  3/ 2 ( 7/0010011)
	{  9, 0x003B }, //  3/ 3 ( 9/000111011)
	{  8, 0x001B }, //  3/ 4 ( 8/00011011)
	{ 10, 0x0012 }, //  3/ 5 (10/0000010010)
	{  8, 0x000C }, //  3/ 6 ( 8/00001100)
	{  9, 0x0005 }, //  3/ 7 ( 9/000000101)
	{  8, 0x0023 }, //  4/ 0 ( 8/00100011)
	{  8, 0x0021 }, //  4/ 1 ( 8/00100001)
	{  8, 0x001F }, //  4/ 2 ( 8/00011111)
	{  9, 0x003A }, //  4/ 3 ( 9/000111010)
	{  9, 0x001E }, //  4/ 4 ( 9/000011110)
	{ 10, 0x0010 }, //  4/ 5 (10/0000010000)
	{  9, 0x0007 }, //  4/ 6 ( 9/000000111)
	{ 10, 0x0005 }, //  4/ 7 (10/0000000101)
	{  8, 0x001C }, //  5/ 0 ( 8/00011100)
	{  8, 0x001A }, //  5/ 1 ( 8/00011010)
	{  9, 0x0020 }, //  5/ 2 ( 9/000100000)
	{ 10, 0x0013 }, //  5/ 3 (10/0000010011)
	{ 10, 0x0011 }, //  5/ 4 (10/0000010001)
	{ 11, 0x000F }, //  5/ 5 (11/00000001111)
	{ 10, 0x0008 }, //  5/ 6 (10/0000001000)
	{ 11, 0x000E }, //  5/ 7 (11/00000001110)
	{  8, 0x000E }, //  6/ 0 ( 8/00001110)
	{  7, 0x000C }, //  6/ 1 ( 7/0001100)
	{  7, 0x0009 }, //  6/ 2 ( 7/0001001)
	{  8, 0x000D }, //  6/ 3 ( 8/00001101)
	{  9, 0x000E }, //  6/ 4 ( 9/000001110)
	{ 10, 0x0009 }, //  6/ 5 (10/0000001001)
	{ 10, 0x0004 }, //  6/ 6 (10/0000000100)
	{ 10, 0x0001 }, //  6/ 7 (10/0000000001)
	{  8, 0x000B }, //  7/ 0 ( 8/00001011)
	{  7, 0x0004 }, //  7/ 1 ( 7/0000100)
	{  8, 0x0006 }, //  7/ 2 ( 8/00000110)
	{  9, 0x0006 }, //  7/ 3 ( 9/000000110)
	{ 10, 0x0006 }, //  7/ 4 (10/0000000110)
	{ 10, 0x0003 }, //  7/ 5 (10/0000000011)
	{ 10, 0x0002 }, //  7/ 6 (10/0000000010)
	{ 10, 0x0000 }  //  7/ 7 (10/0000000000)
};
static huffman_code* htab11_enc[ 8 ] = {
	htab11_enc_raw +  0, // htab11 v0=0 pointer
	htab11_enc_raw +  8, // htab11 v0=1 pointer
	htab11_enc_raw + 16, // htab11 v0=2 pointer
	htab11_enc_raw + 24, // htab11 v0=3 pointer
	htab11_enc_raw + 32, // htab11 v0=4 pointer
	htab11_enc_raw + 40, // htab11 v0=5 pointer
	htab11_enc_raw + 48, // htab11 v0=6 pointer
	htab11_enc_raw + 56  // htab11 v0=7 pointer
};

/* -----------------------------------------------
	big values table 12 (max 7)
	----------------------------------------------- */
static huffman_code htab12_enc_raw[ 64 ] = {
	{  4, 0x0009 }, //  0/ 0 ( 4/1001)
	{  3, 0x0006 }, //  0/ 1 ( 3/110)
	{  5, 0x0010 }, //  0/ 2 ( 5/10000)
	{  7, 0x0021 }, //  0/ 3 ( 7/0100001)
	{  8, 0x0029 }, //  0/ 4 ( 8/00101001)
	{  9, 0x0027 }, //  0/ 5 ( 9/000100111)
	{  9, 0x0026 }, //  0/ 6 ( 9/000100110)
	{  9, 0x001A }, //  0/ 7 ( 9/000011010)
	{  3, 0x0007 }, //  1/ 0 ( 3/111)
	{  3, 0x0005 }, //  1/ 1 ( 3/101)
	{  4, 0x0006 }, //  1/ 2 ( 4/0110)
	{  5, 0x0009 }, //  1/ 3 ( 5/01001)
	{  7, 0x0017 }, //  1/ 4 ( 7/0010111)
	{  7, 0x0010 }, //  1/ 5 ( 7/0010000)
	{  8, 0x001A }, //  1/ 6 ( 8/00011010)
	{  8, 0x000B }, //  1/ 7 ( 8/00001011)
	{  5, 0x0011 }, //  2/ 0 ( 5/10001)
	{  4, 0x0007 }, //  2/ 1 ( 4/0111)
	{  5, 0x000B }, //  2/ 2 ( 5/01011)
	{  6, 0x000E }, //  2/ 3 ( 6/001110)
	{  7, 0x0015 }, //  2/ 4 ( 7/0010101)
	{  8, 0x001E }, //  2/ 5 ( 8/00011110)
	{  7, 0x000A }, //  2/ 6 ( 7/0001010)
	{  8, 0x0007 }, //  2/ 7 ( 8/00000111)
	{  6, 0x0011 }, //  3/ 0 ( 6/010001)
	{  5, 0x000A }, //  3/ 1 ( 5/01010)
	{  6, 0x000F }, //  3/ 2 ( 6/001111)
	{  6, 0x000C }, //  3/ 3 ( 6/001100)
	{  7, 0x0012 }, //  3/ 4 ( 7/0010010)
	{  8, 0x001C }, //  3/ 5 ( 8/00011100)
	{  8, 0x000E }, //  3/ 6 ( 8/00001110)
	{  8, 0x0005 }, //  3/ 7 ( 8/00000101)
	{  7, 0x0020 }, //  4/ 0 ( 7/0100000)
	{  6, 0x000D }, //  4/ 1 ( 6/001101)
	{  7, 0x0016 }, //  4/ 2 ( 7/0010110)
	{  7, 0x0013 }, //  4/ 3 ( 7/0010011)
	{  8, 0x0012 }, //  4/ 4 ( 8/00010010)
	{  8, 0x0010 }, //  4/ 5 ( 8/00010000)
	{  8, 0x0009 }, //  4/ 6 ( 8/00001001)
	{  9, 0x0005 }, //  4/ 7 ( 9/000000101)
	{  8, 0x0028 }, //  5/ 0 ( 8/00101000)
	{  7, 0x0011 }, //  5/ 1 ( 7/0010001)
	{  8, 0x001F }, //  5/ 2 ( 8/00011111)
	{  8, 0x001D }, //  5/ 3 ( 8/00011101)
	{  8, 0x0011 }, //  5/ 4 ( 8/00010001)
	{  9, 0x000D }, //  5/ 5 ( 9/000001101)
	{  8, 0x0004 }, //  5/ 6 ( 8/00000100)
	{  9, 0x0002 }, //  5/ 7 ( 9/000000010)
	{  8, 0x001B }, //  6/ 0 ( 8/00011011)
	{  7, 0x000C }, //  6/ 1 ( 7/0001100)
	{  7, 0x000B }, //  6/ 2 ( 7/0001011)
	{  8, 0x000F }, //  6/ 3 ( 8/00001111)
	{  8, 0x000A }, //  6/ 4 ( 8/00001010)
	{  9, 0x0007 }, //  6/ 5 ( 9/000000111)
	{  9, 0x0004 }, //  6/ 6 ( 9/000000100)
	{ 10, 0x0001 }, //  6/ 7 (10/0000000001)
	{  9, 0x001B }, //  7/ 0 ( 9/000011011)
	{  8, 0x000C }, //  7/ 1 ( 8/00001100)
	{  8, 0x0008 }, //  7/ 2 ( 8/00001000)
	{  9, 0x000C }, //  7/ 3 ( 9/000001100)
	{  9, 0x0006 }, //  7/ 4 ( 9/000000110)
	{  9, 0x0003 }, //  7/ 5 ( 9/000000011)
	{  9, 0x0001 }, //  7/ 6 ( 9/000000001)
	{ 10, 0x0000 }  //  7/ 7 (10/0000000000)
};
static huffman_code* htab12_enc[ 8 ] = {
	htab12_enc_raw +  0, // htab12 v0=0 pointer
	htab12_enc_raw +  8, // htab12 v0=1 pointer
	htab12_enc_raw + 16, // htab12 v0=2 pointer
	htab12_enc_raw + 24, // htab12 v0=3 pointer
	htab12_enc_raw + 32, // htab12 v0=4 pointer
	htab12_enc_raw + 40, // htab12 v0=5 pointer
	htab12_enc_raw + 48, // htab12 v0=6 pointer
	htab12_enc_raw + 56  // htab12 v0=7 pointer
};

/* -----------------------------------------------
	big values table 13 (max 15)
	----------------------------------------------- */
static huffman_code htab13_enc_raw[ 256 ] = {
	{  1, 0x0001 }, //  0/ 0 ( 1/1)
	{  4, 0x0005 }, //  0/ 1 ( 4/0101)
	{  6, 0x000E }, //  0/ 2 ( 6/001110)
	{  7, 0x0015 }, //  0/ 3 ( 7/0010101)
	{  8, 0x0022 }, //  0/ 4 ( 8/00100010)
	{  9, 0x0033 }, //  0/ 5 ( 9/000110011)
	{  9, 0x002E }, //  0/ 6 ( 9/000101110)
	{ 10, 0x0047 }, //  0/ 7 (10/0001000111)
	{  9, 0x002A }, //  0/ 8 ( 9/000101010)
	{ 10, 0x0034 }, //  0/ 9 (10/0000110100)
	{ 11, 0x0044 }, //  0/10 (11/00001000100)
	{ 11, 0x0034 }, //  0/11 (11/00000110100)
	{ 12, 0x0043 }, //  0/12 (12/000001000011)
	{ 12, 0x002C }, //  0/13 (12/000000101100)
	{ 13, 0x002B }, //  0/14 (13/0000000101011)
	{ 13, 0x0013 }, //  0/15 (13/0000000010011)
	{  3, 0x0003 }, //  1/ 0 ( 3/011)
	{  4, 0x0004 }, //  1/ 1 ( 4/0100)
	{  6, 0x000C }, //  1/ 2 ( 6/001100)
	{  7, 0x0013 }, //  1/ 3 ( 7/0010011)
	{  8, 0x001F }, //  1/ 4 ( 8/00011111)
	{  8, 0x001A }, //  1/ 5 ( 8/00011010)
	{  9, 0x002C }, //  1/ 6 ( 9/000101100)
	{  9, 0x0021 }, //  1/ 7 ( 9/000100001)
	{  9, 0x001F }, //  1/ 8 ( 9/000011111)
	{  9, 0x0018 }, //  1/ 9 ( 9/000011000)
	{ 10, 0x0020 }, //  1/10 (10/0000100000)
	{ 10, 0x0018 }, //  1/11 (10/0000011000)
	{ 11, 0x001F }, //  1/12 (11/00000011111)
	{ 12, 0x0023 }, //  1/13 (12/000000100011)
	{ 12, 0x0016 }, //  1/14 (12/000000010110)
	{ 12, 0x000E }, //  1/15 (12/000000001110)
	{  6, 0x000F }, //  2/ 0 ( 6/001111)
	{  6, 0x000D }, //  2/ 1 ( 6/001101)
	{  7, 0x0017 }, //  2/ 2 ( 7/0010111)
	{  8, 0x0024 }, //  2/ 3 ( 8/00100100)
	{  9, 0x003B }, //  2/ 4 ( 9/000111011)
	{  9, 0x0031 }, //  2/ 5 ( 9/000110001)
	{ 10, 0x004D }, //  2/ 6 (10/0001001101)
	{ 10, 0x0041 }, //  2/ 7 (10/0001000001)
	{  9, 0x001D }, //  2/ 8 ( 9/000011101)
	{ 10, 0x0028 }, //  2/ 9 (10/0000101000)
	{ 10, 0x001E }, //  2/10 (10/0000011110)
	{ 11, 0x0028 }, //  2/11 (11/00000101000)
	{ 11, 0x001B }, //  2/12 (11/00000011011)
	{ 12, 0x0021 }, //  2/13 (12/000000100001)
	{ 13, 0x002A }, //  2/14 (13/0000000101010)
	{ 13, 0x0010 }, //  2/15 (13/0000000010000)
	{  7, 0x0016 }, //  3/ 0 ( 7/0010110)
	{  7, 0x0014 }, //  3/ 1 ( 7/0010100)
	{  8, 0x0025 }, //  3/ 2 ( 8/00100101)
	{  9, 0x003D }, //  3/ 3 ( 9/000111101)
	{  9, 0x0038 }, //  3/ 4 ( 9/000111000)
	{ 10, 0x004F }, //  3/ 5 (10/0001001111)
	{ 10, 0x0049 }, //  3/ 6 (10/0001001001)
	{ 10, 0x0040 }, //  3/ 7 (10/0001000000)
	{ 10, 0x002B }, //  3/ 8 (10/0000101011)
	{ 11, 0x004C }, //  3/ 9 (11/00001001100)
	{ 11, 0x0038 }, //  3/10 (11/00000111000)
	{ 11, 0x0025 }, //  3/11 (11/00000100101)
	{ 11, 0x001A }, //  3/12 (11/00000011010)
	{ 12, 0x001F }, //  3/13 (12/000000011111)
	{ 13, 0x0019 }, //  3/14 (13/0000000011001)
	{ 13, 0x000E }, //  3/15 (13/0000000001110)
	{  8, 0x0023 }, //  4/ 0 ( 8/00100011)
	{  7, 0x0010 }, //  4/ 1 ( 7/0010000)
	{  9, 0x003C }, //  4/ 2 ( 9/000111100)
	{  9, 0x0039 }, //  4/ 3 ( 9/000111001)
	{ 10, 0x0061 }, //  4/ 4 (10/0001100001)
	{ 10, 0x004B }, //  4/ 5 (10/0001001011)
	{ 11, 0x0072 }, //  4/ 6 (11/00001110010)
	{ 11, 0x005B }, //  4/ 7 (11/00001011011)
	{ 10, 0x0036 }, //  4/ 8 (10/0000110110)
	{ 11, 0x0049 }, //  4/ 9 (11/00001001001)
	{ 11, 0x0037 }, //  4/10 (11/00000110111)
	{ 12, 0x0029 }, //  4/11 (12/000000101001)
	{ 12, 0x0030 }, //  4/12 (12/000000110000)
	{ 13, 0x0035 }, //  4/13 (13/0000000110101)
	{ 13, 0x0017 }, //  4/14 (13/0000000010111)
	{ 14, 0x0018 }, //  4/15 (14/00000000011000)
	{  9, 0x003A }, //  5/ 0 ( 9/000111010)
	{  8, 0x001B }, //  5/ 1 ( 8/00011011)
	{  9, 0x0032 }, //  5/ 2 ( 9/000110010)
	{ 10, 0x0060 }, //  5/ 3 (10/0001100000)
	{ 10, 0x004C }, //  5/ 4 (10/0001001100)
	{ 10, 0x0046 }, //  5/ 5 (10/0001000110)
	{ 11, 0x005D }, //  5/ 6 (11/00001011101)
	{ 11, 0x0054 }, //  5/ 7 (11/00001010100)
	{ 11, 0x004D }, //  5/ 8 (11/00001001101)
	{ 11, 0x003A }, //  5/ 9 (11/00000111010)
	{ 12, 0x004F }, //  5/10 (12/000001001111)
	{ 11, 0x001D }, //  5/11 (11/00000011101)
	{ 13, 0x004A }, //  5/12 (13/0000001001010)
	{ 13, 0x0031 }, //  5/13 (13/0000000110001)
	{ 14, 0x0029 }, //  5/14 (14/00000000101001)
	{ 14, 0x0011 }, //  5/15 (14/00000000010001)
	{  9, 0x002F }, //  6/ 0 ( 9/000101111)
	{  9, 0x002D }, //  6/ 1 ( 9/000101101)
	{ 10, 0x004E }, //  6/ 2 (10/0001001110)
	{ 10, 0x004A }, //  6/ 3 (10/0001001010)
	{ 11, 0x0073 }, //  6/ 4 (11/00001110011)
	{ 11, 0x005E }, //  6/ 5 (11/00001011110)
	{ 11, 0x005A }, //  6/ 6 (11/00001011010)
	{ 11, 0x004F }, //  6/ 7 (11/00001001111)
	{ 11, 0x0045 }, //  6/ 8 (11/00001000101)
	{ 12, 0x0053 }, //  6/ 9 (12/000001010011)
	{ 12, 0x0047 }, //  6/10 (12/000001000111)
	{ 12, 0x0032 }, //  6/11 (12/000000110010)
	{ 13, 0x003B }, //  6/12 (13/0000000111011)
	{ 13, 0x0026 }, //  6/13 (13/0000000100110)
	{ 14, 0x0024 }, //  6/14 (14/00000000100100)
	{ 14, 0x000F }, //  6/15 (14/00000000001111)
	{ 10, 0x0048 }, //  7/ 0 (10/0001001000)
	{  9, 0x0022 }, //  7/ 1 ( 9/000100010)
	{ 10, 0x0038 }, //  7/ 2 (10/0000111000)
	{ 11, 0x005F }, //  7/ 3 (11/00001011111)
	{ 11, 0x005C }, //  7/ 4 (11/00001011100)
	{ 11, 0x0055 }, //  7/ 5 (11/00001010101)
	{ 12, 0x005B }, //  7/ 6 (12/000001011011)
	{ 12, 0x005A }, //  7/ 7 (12/000001011010)
	{ 12, 0x0056 }, //  7/ 8 (12/000001010110)
	{ 12, 0x0049 }, //  7/ 9 (12/000001001001)
	{ 13, 0x004D }, //  7/10 (13/0000001001101)
	{ 13, 0x0041 }, //  7/11 (13/0000001000001)
	{ 13, 0x0033 }, //  7/12 (13/0000000110011)
	{ 14, 0x002C }, //  7/13 (14/00000000101100)
	{ 16, 0x002B }, //  7/14 (16/0000000000101011)
	{ 16, 0x002A }, //  7/15 (16/0000000000101010)
	{  9, 0x002B }, //  8/ 0 ( 9/000101011)
	{  8, 0x0014 }, //  8/ 1 ( 8/00010100)
	{  9, 0x001E }, //  8/ 2 ( 9/000011110)
	{ 10, 0x002C }, //  8/ 3 (10/0000101100)
	{ 10, 0x0037 }, //  8/ 4 (10/0000110111)
	{ 11, 0x004E }, //  8/ 5 (11/00001001110)
	{ 11, 0x0048 }, //  8/ 6 (11/00001001000)
	{ 12, 0x0057 }, //  8/ 7 (12/000001010111)
	{ 12, 0x004E }, //  8/ 8 (12/000001001110)
	{ 12, 0x003D }, //  8/ 9 (12/000000111101)
	{ 12, 0x002E }, //  8/10 (12/000000101110)
	{ 13, 0x0036 }, //  8/11 (13/0000000110110)
	{ 13, 0x0025 }, //  8/12 (13/0000000100101)
	{ 14, 0x001E }, //  8/13 (14/00000000011110)
	{ 15, 0x0014 }, //  8/14 (15/000000000010100)
	{ 15, 0x0010 }, //  8/15 (15/000000000010000)
	{ 10, 0x0035 }, //  9/ 0 (10/0000110101)
	{  9, 0x0019 }, //  9/ 1 ( 9/000011001)
	{ 10, 0x0029 }, //  9/ 2 (10/0000101001)
	{ 10, 0x0025 }, //  9/ 3 (10/0000100101)
	{ 11, 0x002C }, //  9/ 4 (11/00000101100)
	{ 11, 0x003B }, //  9/ 5 (11/00000111011)
	{ 11, 0x0036 }, //  9/ 6 (11/00000110110)
	{ 13, 0x0051 }, //  9/ 7 (13/0000001010001)
	{ 12, 0x0042 }, //  9/ 8 (12/000001000010)
	{ 13, 0x004C }, //  9/ 9 (13/0000001001100)
	{ 13, 0x0039 }, //  9/10 (13/0000000111001)
	{ 14, 0x0036 }, //  9/11 (14/00000000110110)
	{ 14, 0x0025 }, //  9/12 (14/00000000100101)
	{ 14, 0x0012 }, //  9/13 (14/00000000010010)
	{ 16, 0x0027 }, //  9/14 (16/0000000000100111)
	{ 15, 0x000B }, //  9/15 (15/000000000001011)
	{ 10, 0x0023 }, // 10/ 0 (10/0000100011)
	{ 10, 0x0021 }, // 10/ 1 (10/0000100001)
	{ 10, 0x001F }, // 10/ 2 (10/0000011111)
	{ 11, 0x0039 }, // 10/ 3 (11/00000111001)
	{ 11, 0x002A }, // 10/ 4 (11/00000101010)
	{ 12, 0x0052 }, // 10/ 5 (12/000001010010)
	{ 12, 0x0048 }, // 10/ 6 (12/000001001000)
	{ 13, 0x0050 }, // 10/ 7 (13/0000001010000)
	{ 12, 0x002F }, // 10/ 8 (12/000000101111)
	{ 13, 0x003A }, // 10/ 9 (13/0000000111010)
	{ 14, 0x0037 }, // 10/10 (14/00000000110111)
	{ 13, 0x0015 }, // 10/11 (13/0000000010101)
	{ 14, 0x0016 }, // 10/12 (14/00000000010110)
	{ 15, 0x001A }, // 10/13 (15/000000000011010)
	{ 16, 0x0026 }, // 10/14 (16/0000000000100110)
	{ 17, 0x0016 }, // 10/15 (17/00000000000010110)
	{ 11, 0x0035 }, // 11/ 0 (11/00000110101)
	{ 10, 0x0019 }, // 11/ 1 (10/0000011001)
	{ 10, 0x0017 }, // 11/ 2 (10/0000010111)
	{ 11, 0x0026 }, // 11/ 3 (11/00000100110)
	{ 12, 0x0046 }, // 11/ 4 (12/000001000110)
	{ 12, 0x003C }, // 11/ 5 (12/000000111100)
	{ 12, 0x0033 }, // 11/ 6 (12/000000110011)
	{ 12, 0x0024 }, // 11/ 7 (12/000000100100)
	{ 13, 0x0037 }, // 11/ 8 (13/0000000110111)
	{ 13, 0x001A }, // 11/ 9 (13/0000000011010)
	{ 13, 0x0022 }, // 11/10 (13/0000000100010)
	{ 14, 0x0017 }, // 11/11 (14/00000000010111)
	{ 15, 0x001B }, // 11/12 (15/000000000011011)
	{ 15, 0x000E }, // 11/13 (15/000000000001110)
	{ 15, 0x0009 }, // 11/14 (15/000000000001001)
	{ 16, 0x0007 }, // 11/15 (16/0000000000000111)
	{ 11, 0x0022 }, // 12/ 0 (11/00000100010)
	{ 11, 0x0020 }, // 12/ 1 (11/00000100000)
	{ 11, 0x001C }, // 12/ 2 (11/00000011100)
	{ 12, 0x0027 }, // 12/ 3 (12/000000100111)
	{ 12, 0x0031 }, // 12/ 4 (12/000000110001)
	{ 13, 0x004B }, // 12/ 5 (13/0000001001011)
	{ 12, 0x001E }, // 12/ 6 (12/000000011110)
	{ 13, 0x0034 }, // 12/ 7 (13/0000000110100)
	{ 14, 0x0030 }, // 12/ 8 (14/00000000110000)
	{ 14, 0x0028 }, // 12/ 9 (14/00000000101000)
	{ 15, 0x0034 }, // 12/10 (15/000000000110100)
	{ 15, 0x001C }, // 12/11 (15/000000000011100)
	{ 15, 0x0012 }, // 12/12 (15/000000000010010)
	{ 16, 0x0011 }, // 12/13 (16/0000000000010001)
	{ 16, 0x0009 }, // 12/14 (16/0000000000001001)
	{ 16, 0x0005 }, // 12/15 (16/0000000000000101)
	{ 12, 0x002D }, // 13/ 0 (12/000000101101)
	{ 11, 0x0015 }, // 13/ 1 (11/00000010101)
	{ 12, 0x0022 }, // 13/ 2 (12/000000100010)
	{ 13, 0x0040 }, // 13/ 3 (13/0000001000000)
	{ 13, 0x0038 }, // 13/ 4 (13/0000000111000)
	{ 13, 0x0032 }, // 13/ 5 (13/0000000110010)
	{ 14, 0x0031 }, // 13/ 6 (14/00000000110001)
	{ 14, 0x002D }, // 13/ 7 (14/00000000101101)
	{ 14, 0x001F }, // 13/ 8 (14/00000000011111)
	{ 14, 0x0013 }, // 13/ 9 (14/00000000010011)
	{ 14, 0x000C }, // 13/10 (14/00000000001100)
	{ 15, 0x000F }, // 13/11 (15/000000000001111)
	{ 16, 0x000A }, // 13/12 (16/0000000000001010)
	{ 15, 0x0007 }, // 13/13 (15/000000000000111)
	{ 16, 0x0006 }, // 13/14 (16/0000000000000110)
	{ 16, 0x0003 }, // 13/15 (16/0000000000000011)
	{ 13, 0x0030 }, // 14/ 0 (13/0000000110000)
	{ 12, 0x0017 }, // 14/ 1 (12/000000010111)
	{ 12, 0x0014 }, // 14/ 2 (12/000000010100)
	{ 13, 0x0027 }, // 14/ 3 (13/0000000100111)
	{ 13, 0x0024 }, // 14/ 4 (13/0000000100100)
	{ 13, 0x0023 }, // 14/ 5 (13/0000000100011)
	{ 15, 0x0035 }, // 14/ 6 (15/000000000110101)
	{ 14, 0x0015 }, // 14/ 7 (14/00000000010101)
	{ 14, 0x0010 }, // 14/ 8 (14/00000000010000)
	{ 17, 0x0017 }, // 14/ 9 (17/00000000000010111)
	{ 15, 0x000D }, // 14/10 (15/000000000001101)
	{ 15, 0x000A }, // 14/11 (15/000000000001010)
	{ 15, 0x0006 }, // 14/12 (15/000000000000110)
	{ 17, 0x0001 }, // 14/13 (17/00000000000000001)
	{ 16, 0x0004 }, // 14/14 (16/0000000000000100)
	{ 16, 0x0002 }, // 14/15 (16/0000000000000010)
	{ 12, 0x0010 }, // 15/ 0 (12/000000010000)
	{ 12, 0x000F }, // 15/ 1 (12/000000001111)
	{ 13, 0x0011 }, // 15/ 2 (13/0000000010001)
	{ 14, 0x001B }, // 15/ 3 (14/00000000011011)
	{ 14, 0x0019 }, // 15/ 4 (14/00000000011001)
	{ 14, 0x0014 }, // 15/ 5 (14/00000000010100)
	{ 15, 0x001D }, // 15/ 6 (15/000000000011101)
	{ 14, 0x000B }, // 15/ 7 (14/00000000001011)
	{ 15, 0x0011 }, // 15/ 8 (15/000000000010001)
	{ 15, 0x000C }, // 15/ 9 (15/000000000001100)
	{ 16, 0x0010 }, // 15/10 (16/0000000000010000)
	{ 16, 0x0008 }, // 15/11 (16/0000000000001000)
	{ 19, 0x0001 }, // 15/12 (19/0000000000000000001)
	{ 18, 0x0001 }, // 15/13 (18/000000000000000001)
	{ 19, 0x0000 }, // 15/14 (19/0000000000000000000)
	{ 16, 0x0001 }  // 15/15 (16/0000000000000001)
};
static huffman_code* htab13_enc[ 16 ] = {
	htab13_enc_raw +   0, // htab13 v0=0 pointer
	htab13_enc_raw +  16, // htab13 v0=1 pointer
	htab13_enc_raw +  32, // htab13 v0=2 pointer
	htab13_enc_raw +  48, // htab13 v0=3 pointer
	htab13_enc_raw +  64, // htab13 v0=4 pointer
	htab13_enc_raw +  80, // htab13 v0=5 pointer
	htab13_enc_raw +  96, // htab13 v0=6 pointer
	htab13_enc_raw + 112, // htab13 v0=7 pointer
	htab13_enc_raw + 128, // htab13 v0=8 pointer
	htab13_enc_raw + 144, // htab13 v0=9 pointer
	htab13_enc_raw + 160, // htab13 v0=10 pointer
	htab13_enc_raw + 176, // htab13 v0=11 pointer
	htab13_enc_raw + 192, // htab13 v0=12 pointer
	htab13_enc_raw + 208, // htab13 v0=13 pointer
	htab13_enc_raw + 224, // htab13 v0=14 pointer
	htab13_enc_raw + 240  // htab13 v0=15 pointer
};

/* -----------------------------------------------
	big values table 15 (max 15)
	----------------------------------------------- */
static huffman_code htab15_enc_raw[ 256 ] = {
	{  3, 0x0007 }, //  0/ 0 ( 3/111)
	{  4, 0x000C }, //  0/ 1 ( 4/1100)
	{  5, 0x0012 }, //  0/ 2 ( 5/10010)
	{  7, 0x0035 }, //  0/ 3 ( 7/0110101)
	{  7, 0x002F }, //  0/ 4 ( 7/0101111)
	{  8, 0x004C }, //  0/ 5 ( 8/01001100)
	{  9, 0x007C }, //  0/ 6 ( 9/001111100)
	{  9, 0x006C }, //  0/ 7 ( 9/001101100)
	{  9, 0x0059 }, //  0/ 8 ( 9/001011001)
	{ 10, 0x007B }, //  0/ 9 (10/0001111011)
	{ 10, 0x006C }, //  0/10 (10/0001101100)
	{ 11, 0x0077 }, //  0/11 (11/00001110111)
	{ 11, 0x006B }, //  0/12 (11/00001101011)
	{ 11, 0x0051 }, //  0/13 (11/00001010001)
	{ 12, 0x007A }, //  0/14 (12/000001111010)
	{ 13, 0x003F }, //  0/15 (13/0000000111111)
	{  4, 0x000D }, //  1/ 0 ( 4/1101)
	{  3, 0x0005 }, //  1/ 1 ( 3/101)
	{  5, 0x0010 }, //  1/ 2 ( 5/10000)
	{  6, 0x001B }, //  1/ 3 ( 6/011011)
	{  7, 0x002E }, //  1/ 4 ( 7/0101110)
	{  7, 0x0024 }, //  1/ 5 ( 7/0100100)
	{  8, 0x003D }, //  1/ 6 ( 8/00111101)
	{  8, 0x0033 }, //  1/ 7 ( 8/00110011)
	{  8, 0x002A }, //  1/ 8 ( 8/00101010)
	{  9, 0x0046 }, //  1/ 9 ( 9/001000110)
	{  9, 0x0034 }, //  1/10 ( 9/000110100)
	{ 10, 0x0053 }, //  1/11 (10/0001010011)
	{ 10, 0x0041 }, //  1/12 (10/0001000001)
	{ 10, 0x0029 }, //  1/13 (10/0000101001)
	{ 11, 0x003B }, //  1/14 (11/00000111011)
	{ 11, 0x0024 }, //  1/15 (11/00000100100)
	{  5, 0x0013 }, //  2/ 0 ( 5/10011)
	{  5, 0x0011 }, //  2/ 1 ( 5/10001)
	{  5, 0x000F }, //  2/ 2 ( 5/01111)
	{  6, 0x0018 }, //  2/ 3 ( 6/011000)
	{  7, 0x0029 }, //  2/ 4 ( 7/0101001)
	{  7, 0x0022 }, //  2/ 5 ( 7/0100010)
	{  8, 0x003B }, //  2/ 6 ( 8/00111011)
	{  8, 0x0030 }, //  2/ 7 ( 8/00110000)
	{  8, 0x0028 }, //  2/ 8 ( 8/00101000)
	{  9, 0x0040 }, //  2/ 9 ( 9/001000000)
	{  9, 0x0032 }, //  2/10 ( 9/000110010)
	{ 10, 0x004E }, //  2/11 (10/0001001110)
	{ 10, 0x003E }, //  2/12 (10/0000111110)
	{ 11, 0x0050 }, //  2/13 (11/00001010000)
	{ 11, 0x0038 }, //  2/14 (11/00000111000)
	{ 11, 0x0021 }, //  2/15 (11/00000100001)
	{  6, 0x001D }, //  3/ 0 ( 6/011101)
	{  6, 0x001C }, //  3/ 1 ( 6/011100)
	{  6, 0x0019 }, //  3/ 2 ( 6/011001)
	{  7, 0x002B }, //  3/ 3 ( 7/0101011)
	{  7, 0x0027 }, //  3/ 4 ( 7/0100111)
	{  8, 0x003F }, //  3/ 5 ( 8/00111111)
	{  8, 0x0037 }, //  3/ 6 ( 8/00110111)
	{  9, 0x005D }, //  3/ 7 ( 9/001011101)
	{  9, 0x004C }, //  3/ 8 ( 9/001001100)
	{  9, 0x003B }, //  3/ 9 ( 9/000111011)
	{ 10, 0x005D }, //  3/10 (10/0001011101)
	{ 10, 0x0048 }, //  3/11 (10/0001001000)
	{ 10, 0x0036 }, //  3/12 (10/0000110110)
	{ 11, 0x004B }, //  3/13 (11/00001001011)
	{ 11, 0x0032 }, //  3/14 (11/00000110010)
	{ 11, 0x001D }, //  3/15 (11/00000011101)
	{  7, 0x0034 }, //  4/ 0 ( 7/0110100)
	{  6, 0x0016 }, //  4/ 1 ( 6/010110)
	{  7, 0x002A }, //  4/ 2 ( 7/0101010)
	{  7, 0x0028 }, //  4/ 3 ( 7/0101000)
	{  8, 0x0043 }, //  4/ 4 ( 8/01000011)
	{  8, 0x0039 }, //  4/ 5 ( 8/00111001)
	{  9, 0x005F }, //  4/ 6 ( 9/001011111)
	{  9, 0x004F }, //  4/ 7 ( 9/001001111)
	{  9, 0x0048 }, //  4/ 8 ( 9/001001000)
	{  9, 0x0039 }, //  4/ 9 ( 9/000111001)
	{ 10, 0x0059 }, //  4/10 (10/0001011001)
	{ 10, 0x0045 }, //  4/11 (10/0001000101)
	{ 10, 0x0031 }, //  4/12 (10/0000110001)
	{ 11, 0x0042 }, //  4/13 (11/00001000010)
	{ 11, 0x002E }, //  4/14 (11/00000101110)
	{ 11, 0x001B }, //  4/15 (11/00000011011)
	{  8, 0x004D }, //  5/ 0 ( 8/01001101)
	{  7, 0x0025 }, //  5/ 1 ( 7/0100101)
	{  7, 0x0023 }, //  5/ 2 ( 7/0100011)
	{  8, 0x0042 }, //  5/ 3 ( 8/01000010)
	{  8, 0x003A }, //  5/ 4 ( 8/00111010)
	{  8, 0x0034 }, //  5/ 5 ( 8/00110100)
	{  9, 0x005B }, //  5/ 6 ( 9/001011011)
	{  9, 0x004A }, //  5/ 7 ( 9/001001010)
	{  9, 0x003E }, //  5/ 8 ( 9/000111110)
	{  9, 0x0030 }, //  5/ 9 ( 9/000110000)
	{ 10, 0x004F }, //  5/10 (10/0001001111)
	{ 10, 0x003F }, //  5/11 (10/0000111111)
	{ 11, 0x005A }, //  5/12 (11/00001011010)
	{ 11, 0x003E }, //  5/13 (11/00000111110)
	{ 11, 0x0028 }, //  5/14 (11/00000101000)
	{ 12, 0x0026 }, //  5/15 (12/000000100110)
	{  9, 0x007D }, //  6/ 0 ( 9/001111101)
	{  7, 0x0020 }, //  6/ 1 ( 7/0100000)
	{  8, 0x003C }, //  6/ 2 ( 8/00111100)
	{  8, 0x0038 }, //  6/ 3 ( 8/00111000)
	{  8, 0x0032 }, //  6/ 4 ( 8/00110010)
	{  9, 0x005C }, //  6/ 5 ( 9/001011100)
	{  9, 0x004E }, //  6/ 6 ( 9/001001110)
	{  9, 0x0041 }, //  6/ 7 ( 9/001000001)
	{  9, 0x0037 }, //  6/ 8 ( 9/000110111)
	{ 10, 0x0057 }, //  6/ 9 (10/0001010111)
	{ 10, 0x0047 }, //  6/10 (10/0001000111)
	{ 10, 0x0033 }, //  6/11 (10/0000110011)
	{ 11, 0x0049 }, //  6/12 (11/00001001001)
	{ 11, 0x0033 }, //  6/13 (11/00000110011)
	{ 12, 0x0046 }, //  6/14 (12/000001000110)
	{ 12, 0x001E }, //  6/15 (12/000000011110)
	{  9, 0x006D }, //  7/ 0 ( 9/001101101)
	{  8, 0x0035 }, //  7/ 1 ( 8/00110101)
	{  8, 0x0031 }, //  7/ 2 ( 8/00110001)
	{  9, 0x005E }, //  7/ 3 ( 9/001011110)
	{  9, 0x0058 }, //  7/ 4 ( 9/001011000)
	{  9, 0x004B }, //  7/ 5 ( 9/001001011)
	{  9, 0x0042 }, //  7/ 6 ( 9/001000010)
	{ 10, 0x007A }, //  7/ 7 (10/0001111010)
	{ 10, 0x005B }, //  7/ 8 (10/0001011011)
	{ 10, 0x0049 }, //  7/ 9 (10/0001001001)
	{ 10, 0x0038 }, //  7/10 (10/0000111000)
	{ 10, 0x002A }, //  7/11 (10/0000101010)
	{ 11, 0x0040 }, //  7/12 (11/00001000000)
	{ 11, 0x002C }, //  7/13 (11/00000101100)
	{ 11, 0x0015 }, //  7/14 (11/00000010101)
	{ 12, 0x0019 }, //  7/15 (12/000000011001)
	{  9, 0x005A }, //  8/ 0 ( 9/001011010)
	{  8, 0x002B }, //  8/ 1 ( 8/00101011)
	{  8, 0x0029 }, //  8/ 2 ( 8/00101001)
	{  9, 0x004D }, //  8/ 3 ( 9/001001101)
	{  9, 0x0049 }, //  8/ 4 ( 9/001001001)
	{  9, 0x003F }, //  8/ 5 ( 9/000111111)
	{  9, 0x0038 }, //  8/ 6 ( 9/000111000)
	{ 10, 0x005C }, //  8/ 7 (10/0001011100)
	{ 10, 0x004D }, //  8/ 8 (10/0001001101)
	{ 10, 0x0042 }, //  8/ 9 (10/0001000010)
	{ 10, 0x002F }, //  8/10 (10/0000101111)
	{ 11, 0x0043 }, //  8/11 (11/00001000011)
	{ 11, 0x0030 }, //  8/12 (11/00000110000)
	{ 12, 0x0035 }, //  8/13 (12/000000110101)
	{ 12, 0x0024 }, //  8/14 (12/000000100100)
	{ 12, 0x0014 }, //  8/15 (12/000000010100)
	{  9, 0x0047 }, //  9/ 0 ( 9/001000111)
	{  8, 0x0022 }, //  9/ 1 ( 8/00100010)
	{  9, 0x0043 }, //  9/ 2 ( 9/001000011)
	{  9, 0x003C }, //  9/ 3 ( 9/000111100)
	{  9, 0x003A }, //  9/ 4 ( 9/000111010)
	{  9, 0x0031 }, //  9/ 5 ( 9/000110001)
	{ 10, 0x0058 }, //  9/ 6 (10/0001011000)
	{ 10, 0x004C }, //  9/ 7 (10/0001001100)
	{ 10, 0x0043 }, //  9/ 8 (10/0001000011)
	{ 11, 0x006A }, //  9/ 9 (11/00001101010)
	{ 11, 0x0047 }, //  9/10 (11/00001000111)
	{ 11, 0x0036 }, //  9/11 (11/00000110110)
	{ 11, 0x0026 }, //  9/12 (11/00000100110)
	{ 12, 0x0027 }, //  9/13 (12/000000100111)
	{ 12, 0x0017 }, //  9/14 (12/000000010111)
	{ 12, 0x000F }, //  9/15 (12/000000001111)
	{ 10, 0x006D }, // 10/ 0 (10/0001101101)
	{  9, 0x0035 }, // 10/ 1 ( 9/000110101)
	{  9, 0x0033 }, // 10/ 2 ( 9/000110011)
	{  9, 0x002F }, // 10/ 3 ( 9/000101111)
	{ 10, 0x005A }, // 10/ 4 (10/0001011010)
	{ 10, 0x0052 }, // 10/ 5 (10/0001010010)
	{ 10, 0x003A }, // 10/ 6 (10/0000111010)
	{ 10, 0x0039 }, // 10/ 7 (10/0000111001)
	{ 10, 0x0030 }, // 10/ 8 (10/0000110000)
	{ 11, 0x0048 }, // 10/ 9 (11/00001001000)
	{ 11, 0x0039 }, // 10/10 (11/00000111001)
	{ 11, 0x0029 }, // 10/11 (11/00000101001)
	{ 11, 0x0017 }, // 10/12 (11/00000010111)
	{ 12, 0x001B }, // 10/13 (12/000000011011)
	{ 13, 0x003E }, // 10/14 (13/0000000111110)
	{ 12, 0x0009 }, // 10/15 (12/000000001001)
	{ 10, 0x0056 }, // 11/ 0 (10/0001010110)
	{  9, 0x002A }, // 11/ 1 ( 9/000101010)
	{  9, 0x0028 }, // 11/ 2 ( 9/000101000)
	{  9, 0x0025 }, // 11/ 3 ( 9/000100101)
	{ 10, 0x0046 }, // 11/ 4 (10/0001000110)
	{ 10, 0x0040 }, // 11/ 5 (10/0001000000)
	{ 10, 0x0034 }, // 11/ 6 (10/0000110100)
	{ 10, 0x002B }, // 11/ 7 (10/0000101011)
	{ 11, 0x0046 }, // 11/ 8 (11/00001000110)
	{ 11, 0x0037 }, // 11/ 9 (11/00000110111)
	{ 11, 0x002A }, // 11/10 (11/00000101010)
	{ 11, 0x0019 }, // 11/11 (11/00000011001)
	{ 12, 0x001D }, // 11/12 (12/000000011101)
	{ 12, 0x0012 }, // 11/13 (12/000000010010)
	{ 12, 0x000B }, // 11/14 (12/000000001011)
	{ 13, 0x000B }, // 11/15 (13/0000000001011)
	{ 11, 0x0076 }, // 12/ 0 (11/00001110110)
	{ 10, 0x0044 }, // 12/ 1 (10/0001000100)
	{  9, 0x001E }, // 12/ 2 ( 9/000011110)
	{ 10, 0x0037 }, // 12/ 3 (10/0000110111)
	{ 10, 0x0032 }, // 12/ 4 (10/0000110010)
	{ 10, 0x002E }, // 12/ 5 (10/0000101110)
	{ 11, 0x004A }, // 12/ 6 (11/00001001010)
	{ 11, 0x0041 }, // 12/ 7 (11/00001000001)
	{ 11, 0x0031 }, // 12/ 8 (11/00000110001)
	{ 11, 0x0027 }, // 12/ 9 (11/00000100111)
	{ 11, 0x0018 }, // 12/10 (11/00000011000)
	{ 11, 0x0010 }, // 12/11 (11/00000010000)
	{ 12, 0x0016 }, // 12/12 (12/000000010110)
	{ 12, 0x000D }, // 12/13 (12/000000001101)
	{ 13, 0x000E }, // 12/14 (13/0000000001110)
	{ 13, 0x0007 }, // 12/15 (13/0000000000111)
	{ 11, 0x005B }, // 13/ 0 (11/00001011011)
	{ 10, 0x002C }, // 13/ 1 (10/0000101100)
	{ 10, 0x0027 }, // 13/ 2 (10/0000100111)
	{ 10, 0x0026 }, // 13/ 3 (10/0000100110)
	{ 10, 0x0022 }, // 13/ 4 (10/0000100010)
	{ 11, 0x003F }, // 13/ 5 (11/00000111111)
	{ 11, 0x0034 }, // 13/ 6 (11/00000110100)
	{ 11, 0x002D }, // 13/ 7 (11/00000101101)
	{ 11, 0x001F }, // 13/ 8 (11/00000011111)
	{ 12, 0x0034 }, // 13/ 9 (12/000000110100)
	{ 12, 0x001C }, // 13/10 (12/000000011100)
	{ 12, 0x0013 }, // 13/11 (12/000000010011)
	{ 12, 0x000E }, // 13/12 (12/000000001110)
	{ 12, 0x0008 }, // 13/13 (12/000000001000)
	{ 13, 0x0009 }, // 13/14 (13/0000000001001)
	{ 13, 0x0003 }, // 13/15 (13/0000000000011)
	{ 12, 0x007B }, // 14/ 0 (12/000001111011)
	{ 11, 0x003C }, // 14/ 1 (11/00000111100)
	{ 11, 0x003A }, // 14/ 2 (11/00000111010)
	{ 11, 0x0035 }, // 14/ 3 (11/00000110101)
	{ 11, 0x002F }, // 14/ 4 (11/00000101111)
	{ 11, 0x002B }, // 14/ 5 (11/00000101011)
	{ 11, 0x0020 }, // 14/ 6 (11/00000100000)
	{ 11, 0x0016 }, // 14/ 7 (11/00000010110)
	{ 12, 0x0025 }, // 14/ 8 (12/000000100101)
	{ 12, 0x0018 }, // 14/ 9 (12/000000011000)
	{ 12, 0x0011 }, // 14/10 (12/000000010001)
	{ 12, 0x000C }, // 14/11 (12/000000001100)
	{ 13, 0x000F }, // 14/12 (13/0000000001111)
	{ 13, 0x000A }, // 14/13 (13/0000000001010)
	{ 12, 0x0002 }, // 14/14 (12/000000000010)
	{ 13, 0x0001 }, // 14/15 (13/0000000000001)
	{ 12, 0x0047 }, // 15/ 0 (12/000001000111)
	{ 11, 0x0025 }, // 15/ 1 (11/00000100101)
	{ 11, 0x0022 }, // 15/ 2 (11/00000100010)
	{ 11, 0x001E }, // 15/ 3 (11/00000011110)
	{ 11, 0x001C }, // 15/ 4 (11/00000011100)
	{ 11, 0x0014 }, // 15/ 5 (11/00000010100)
	{ 11, 0x0011 }, // 15/ 6 (11/00000010001)
	{ 12, 0x001A }, // 15/ 7 (12/000000011010)
	{ 12, 0x0015 }, // 15/ 8 (12/000000010101)
	{ 12, 0x0010 }, // 15/ 9 (12/000000010000)
	{ 12, 0x000A }, // 15/10 (12/000000001010)
	{ 12, 0x0006 }, // 15/11 (12/000000000110)
	{ 13, 0x0008 }, // 15/12 (13/0000000001000)
	{ 13, 0x0006 }, // 15/13 (13/0000000000110)
	{ 13, 0x0002 }, // 15/14 (13/0000000000010)
	{ 13, 0x0000 }  // 15/15 (13/0000000000000)
};
static huffman_code* htab15_enc[ 16 ] = {
	htab15_enc_raw +   0, // htab15 v0=0 pointer
	htab15_enc_raw +  16, // htab15 v0=1 pointer
	htab15_enc_raw +  32, // htab15 v0=2 pointer
	htab15_enc_raw +  48, // htab15 v0=3 pointer
	htab15_enc_raw +  64, // htab15 v0=4 pointer
	htab15_enc_raw +  80, // htab15 v0=5 pointer
	htab15_enc_raw +  96, // htab15 v0=6 pointer
	htab15_enc_raw + 112, // htab15 v0=7 pointer
	htab15_enc_raw + 128, // htab15 v0=8 pointer
	htab15_enc_raw + 144, // htab15 v0=9 pointer
	htab15_enc_raw + 160, // htab15 v0=10 pointer
	htab15_enc_raw + 176, // htab15 v0=11 pointer
	htab15_enc_raw + 192, // htab15 v0=12 pointer
	htab15_enc_raw + 208, // htab15 v0=13 pointer
	htab15_enc_raw + 224, // htab15 v0=14 pointer
	htab15_enc_raw + 240  // htab15 v0=15 pointer
};

/* -----------------------------------------------
	big values table 16 (max 15)
	----------------------------------------------- */
static huffman_code htab16_enc_raw[ 256 ] = {
	{  1, 0x0001 }, //  0/ 0 ( 1/1)
	{  4, 0x0005 }, //  0/ 1 ( 4/0101)
	{  6, 0x000E }, //  0/ 2 ( 6/001110)
	{  8, 0x002C }, //  0/ 3 ( 8/00101100)
	{  9, 0x004A }, //  0/ 4 ( 9/001001010)
	{  9, 0x003F }, //  0/ 5 ( 9/000111111)
	{ 10, 0x006E }, //  0/ 6 (10/0001101110)
	{ 10, 0x005D }, //  0/ 7 (10/0001011101)
	{ 11, 0x00AC }, //  0/ 8 (11/00010101100)
	{ 11, 0x0095 }, //  0/ 9 (11/00010010101)
	{ 11, 0x008A }, //  0/10 (11/00010001010)
	{ 12, 0x00F2 }, //  0/11 (12/000011110010)
	{ 12, 0x00E1 }, //  0/12 (12/000011100001)
	{ 12, 0x00C3 }, //  0/13 (12/000011000011)
	{ 13, 0x0178 }, //  0/14 (13/0000101111000)
	{  9, 0x0011 }, //  0/15 ( 9/000010001)
	{  3, 0x0003 }, //  1/ 0 ( 3/011)
	{  4, 0x0004 }, //  1/ 1 ( 4/0100)
	{  6, 0x000C }, //  1/ 2 ( 6/001100)
	{  7, 0x0014 }, //  1/ 3 ( 7/0010100)
	{  8, 0x0023 }, //  1/ 4 ( 8/00100011)
	{  9, 0x003E }, //  1/ 5 ( 9/000111110)
	{  9, 0x0035 }, //  1/ 6 ( 9/000110101)
	{  9, 0x002F }, //  1/ 7 ( 9/000101111)
	{ 10, 0x0053 }, //  1/ 8 (10/0001010011)
	{ 10, 0x004B }, //  1/ 9 (10/0001001011)
	{ 10, 0x0044 }, //  1/10 (10/0001000100)
	{ 11, 0x0077 }, //  1/11 (11/00001110111)
	{ 12, 0x00C9 }, //  1/12 (12/000011001001)
	{ 11, 0x006B }, //  1/13 (11/00001101011)
	{ 12, 0x00CF }, //  1/14 (12/000011001111)
	{  8, 0x0009 }, //  1/15 ( 8/00001001)
	{  6, 0x000F }, //  2/ 0 ( 6/001111)
	{  6, 0x000D }, //  2/ 1 ( 6/001101)
	{  7, 0x0017 }, //  2/ 2 ( 7/0010111)
	{  8, 0x0026 }, //  2/ 3 ( 8/00100110)
	{  9, 0x0043 }, //  2/ 4 ( 9/001000011)
	{  9, 0x003A }, //  2/ 5 ( 9/000111010)
	{ 10, 0x0067 }, //  2/ 6 (10/0001100111)
	{ 10, 0x005A }, //  2/ 7 (10/0001011010)
	{ 11, 0x00A1 }, //  2/ 8 (11/00010100001)
	{ 10, 0x0048 }, //  2/ 9 (10/0001001000)
	{ 11, 0x007F }, //  2/10 (11/00001111111)
	{ 11, 0x0075 }, //  2/11 (11/00001110101)
	{ 11, 0x006E }, //  2/12 (11/00001101110)
	{ 12, 0x00D1 }, //  2/13 (12/000011010001)
	{ 12, 0x00CE }, //  2/14 (12/000011001110)
	{  9, 0x0010 }, //  2/15 ( 9/000010000)
	{  8, 0x002D }, //  3/ 0 ( 8/00101101)
	{  7, 0x0015 }, //  3/ 1 ( 7/0010101)
	{  8, 0x0027 }, //  3/ 2 ( 8/00100111)
	{  9, 0x0045 }, //  3/ 3 ( 9/001000101)
	{  9, 0x0040 }, //  3/ 4 ( 9/001000000)
	{ 10, 0x0072 }, //  3/ 5 (10/0001110010)
	{ 10, 0x0063 }, //  3/ 6 (10/0001100011)
	{ 10, 0x0057 }, //  3/ 7 (10/0001010111)
	{ 11, 0x009E }, //  3/ 8 (11/00010011110)
	{ 11, 0x008C }, //  3/ 9 (11/00010001100)
	{ 12, 0x00FC }, //  3/10 (12/000011111100)
	{ 12, 0x00D4 }, //  3/11 (12/000011010100)
	{ 12, 0x00C7 }, //  3/12 (12/000011000111)
	{ 13, 0x0183 }, //  3/13 (13/0000110000011)
	{ 13, 0x016D }, //  3/14 (13/0000101101101)
	{ 10, 0x001A }, //  3/15 (10/0000011010)
	{  9, 0x004B }, //  4/ 0 ( 9/001001011)
	{  8, 0x0024 }, //  4/ 1 ( 8/00100100)
	{  9, 0x0044 }, //  4/ 2 ( 9/001000100)
	{  9, 0x0041 }, //  4/ 3 ( 9/001000001)
	{ 10, 0x0073 }, //  4/ 4 (10/0001110011)
	{ 10, 0x0065 }, //  4/ 5 (10/0001100101)
	{ 11, 0x00B3 }, //  4/ 6 (11/00010110011)
	{ 11, 0x00A4 }, //  4/ 7 (11/00010100100)
	{ 11, 0x009B }, //  4/ 8 (11/00010011011)
	{ 12, 0x0108 }, //  4/ 9 (12/000100001000)
	{ 12, 0x00F6 }, //  4/10 (12/000011110110)
	{ 12, 0x00E2 }, //  4/11 (12/000011100010)
	{ 13, 0x018B }, //  4/12 (13/0000110001011)
	{ 13, 0x017E }, //  4/13 (13/0000101111110)
	{ 13, 0x016A }, //  4/14 (13/0000101101010)
	{  9, 0x0009 }, //  4/15 ( 9/000001001)
	{  9, 0x0042 }, //  5/ 0 ( 9/001000010)
	{  8, 0x001E }, //  5/ 1 ( 8/00011110)
	{  9, 0x003B }, //  5/ 2 ( 9/000111011)
	{  9, 0x0038 }, //  5/ 3 ( 9/000111000)
	{ 10, 0x0066 }, //  5/ 4 (10/0001100110)
	{ 11, 0x00B9 }, //  5/ 5 (11/00010111001)
	{ 11, 0x00AD }, //  5/ 6 (11/00010101101)
	{ 12, 0x0109 }, //  5/ 7 (12/000100001001)
	{ 11, 0x008E }, //  5/ 8 (11/00010001110)
	{ 12, 0x00FD }, //  5/ 9 (12/000011111101)
	{ 12, 0x00E8 }, //  5/10 (12/000011101000)
	{ 13, 0x0190 }, //  5/11 (13/0000110010000)
	{ 13, 0x0184 }, //  5/12 (13/0000110000100)
	{ 13, 0x017A }, //  5/13 (13/0000101111010)
	{ 14, 0x01BD }, //  5/14 (14/00000110111101)
	{ 10, 0x0010 }, //  5/15 (10/0000010000)
	{ 10, 0x006F }, //  6/ 0 (10/0001101111)
	{  9, 0x0036 }, //  6/ 1 ( 9/000110110)
	{  9, 0x0034 }, //  6/ 2 ( 9/000110100)
	{ 10, 0x0064 }, //  6/ 3 (10/0001100100)
	{ 11, 0x00B8 }, //  6/ 4 (11/00010111000)
	{ 11, 0x00B2 }, //  6/ 5 (11/00010110010)
	{ 11, 0x00A0 }, //  6/ 6 (11/00010100000)
	{ 11, 0x0085 }, //  6/ 7 (11/00010000101)
	{ 12, 0x0101 }, //  6/ 8 (12/000100000001)
	{ 12, 0x00F4 }, //  6/ 9 (12/000011110100)
	{ 12, 0x00E4 }, //  6/10 (12/000011100100)
	{ 12, 0x00D9 }, //  6/11 (12/000011011001)
	{ 13, 0x0181 }, //  6/12 (13/0000110000001)
	{ 13, 0x016E }, //  6/13 (13/0000101101110)
	{ 14, 0x02CB }, //  6/14 (14/00001011001011)
	{ 10, 0x000A }, //  6/15 (10/0000001010)
	{ 10, 0x0062 }, //  7/ 0 (10/0001100010)
	{  9, 0x0030 }, //  7/ 1 ( 9/000110000)
	{ 10, 0x005B }, //  7/ 2 (10/0001011011)
	{ 10, 0x0058 }, //  7/ 3 (10/0001011000)
	{ 11, 0x00A5 }, //  7/ 4 (11/00010100101)
	{ 11, 0x009D }, //  7/ 5 (11/00010011101)
	{ 11, 0x0094 }, //  7/ 6 (11/00010010100)
	{ 12, 0x0105 }, //  7/ 7 (12/000100000101)
	{ 12, 0x00F8 }, //  7/ 8 (12/000011111000)
	{ 13, 0x0197 }, //  7/ 9 (13/0000110010111)
	{ 13, 0x018D }, //  7/10 (13/0000110001101)
	{ 13, 0x0174 }, //  7/11 (13/0000101110100)
	{ 13, 0x017C }, //  7/12 (13/0000101111100)
	{ 15, 0x0379 }, //  7/13 (15/000001101111001)
	{ 15, 0x0374 }, //  7/14 (15/000001101110100)
	{ 10, 0x0008 }, //  7/15 (10/0000001000)
	{ 10, 0x0055 }, //  8/ 0 (10/0001010101)
	{ 10, 0x0054 }, //  8/ 1 (10/0001010100)
	{ 10, 0x0051 }, //  8/ 2 (10/0001010001)
	{ 11, 0x009F }, //  8/ 3 (11/00010011111)
	{ 11, 0x009C }, //  8/ 4 (11/00010011100)
	{ 11, 0x008F }, //  8/ 5 (11/00010001111)
	{ 12, 0x0104 }, //  8/ 6 (12/000100000100)
	{ 12, 0x00F9 }, //  8/ 7 (12/000011111001)
	{ 13, 0x01AB }, //  8/ 8 (13/0000110101011)
	{ 13, 0x0191 }, //  8/ 9 (13/0000110010001)
	{ 13, 0x0188 }, //  8/10 (13/0000110001000)
	{ 13, 0x017F }, //  8/11 (13/0000101111111)
	{ 14, 0x02D7 }, //  8/12 (14/00001011010111)
	{ 14, 0x02C9 }, //  8/13 (14/00001011001001)
	{ 14, 0x02C4 }, //  8/14 (14/00001011000100)
	{ 10, 0x0007 }, //  8/15 (10/0000000111)
	{ 11, 0x009A }, //  9/ 0 (11/00010011010)
	{ 10, 0x004C }, //  9/ 1 (10/0001001100)
	{ 10, 0x0049 }, //  9/ 2 (10/0001001001)
	{ 11, 0x008D }, //  9/ 3 (11/00010001101)
	{ 11, 0x0083 }, //  9/ 4 (11/00010000011)
	{ 12, 0x0100 }, //  9/ 5 (12/000100000000)
	{ 12, 0x00F5 }, //  9/ 6 (12/000011110101)
	{ 13, 0x01AA }, //  9/ 7 (13/0000110101010)
	{ 13, 0x0196 }, //  9/ 8 (13/0000110010110)
	{ 13, 0x018A }, //  9/ 9 (13/0000110001010)
	{ 13, 0x0180 }, //  9/10 (13/0000110000000)
	{ 14, 0x02DF }, //  9/11 (14/00001011011111)
	{ 13, 0x0167 }, //  9/12 (13/0000101100111)
	{ 14, 0x02C6 }, //  9/13 (14/00001011000110)
	{ 13, 0x0160 }, //  9/14 (13/0000101100000)
	{ 11, 0x000B }, //  9/15 (11/00000001011)
	{ 11, 0x008B }, // 10/ 0 (11/00010001011)
	{ 11, 0x0081 }, // 10/ 1 (11/00010000001)
	{ 10, 0x0043 }, // 10/ 2 (10/0001000011)
	{ 11, 0x007D }, // 10/ 3 (11/00001111101)
	{ 12, 0x00F7 }, // 10/ 4 (12/000011110111)
	{ 12, 0x00E9 }, // 10/ 5 (12/000011101001)
	{ 12, 0x00E5 }, // 10/ 6 (12/000011100101)
	{ 12, 0x00DB }, // 10/ 7 (12/000011011011)
	{ 13, 0x0189 }, // 10/ 8 (13/0000110001001)
	{ 14, 0x02E7 }, // 10/ 9 (14/00001011100111)
	{ 14, 0x02E1 }, // 10/10 (14/00001011100001)
	{ 14, 0x02D0 }, // 10/11 (14/00001011010000)
	{ 15, 0x0375 }, // 10/12 (15/000001101110101)
	{ 15, 0x0372 }, // 10/13 (15/000001101110010)
	{ 14, 0x01B7 }, // 10/14 (14/00000110110111)
	{ 10, 0x0004 }, // 10/15 (10/0000000100)
	{ 12, 0x00F3 }, // 11/ 0 (12/000011110011)
	{ 11, 0x0078 }, // 11/ 1 (11/00001111000)
	{ 11, 0x0076 }, // 11/ 2 (11/00001110110)
	{ 11, 0x0073 }, // 11/ 3 (11/00001110011)
	{ 12, 0x00E3 }, // 11/ 4 (12/000011100011)
	{ 12, 0x00DF }, // 11/ 5 (12/000011011111)
	{ 13, 0x018C }, // 11/ 6 (13/0000110001100)
	{ 14, 0x02EA }, // 11/ 7 (14/00001011101010)
	{ 14, 0x02E6 }, // 11/ 8 (14/00001011100110)
	{ 14, 0x02E0 }, // 11/ 9 (14/00001011100000)
	{ 14, 0x02D1 }, // 11/10 (14/00001011010001)
	{ 14, 0x02C8 }, // 11/11 (14/00001011001000)
	{ 14, 0x02C2 }, // 11/12 (14/00001011000010)
	{ 13, 0x00DF }, // 11/13 (13/0000011011111)
	{ 14, 0x01B4 }, // 11/14 (14/00000110110100)
	{ 11, 0x0006 }, // 11/15 (11/00000000110)
	{ 12, 0x00CA }, // 12/ 0 (12/000011001010)
	{ 12, 0x00E0 }, // 12/ 1 (12/000011100000)
	{ 12, 0x00DE }, // 12/ 2 (12/000011011110)
	{ 12, 0x00DA }, // 12/ 3 (12/000011011010)
	{ 12, 0x00D8 }, // 12/ 4 (12/000011011000)
	{ 13, 0x0185 }, // 12/ 5 (13/0000110000101)
	{ 13, 0x0182 }, // 12/ 6 (13/0000110000010)
	{ 13, 0x017D }, // 12/ 7 (13/0000101111101)
	{ 13, 0x016C }, // 12/ 8 (13/0000101101100)
	{ 15, 0x0378 }, // 12/ 9 (15/000001101111000)
	{ 14, 0x01BB }, // 12/10 (14/00000110111011)
	{ 14, 0x02C3 }, // 12/11 (14/00001011000011)
	{ 14, 0x01B8 }, // 12/12 (14/00000110111000)
	{ 14, 0x01B5 }, // 12/13 (14/00000110110101)
	{ 16, 0x06C0 }, // 12/14 (16/0000011011000000)
	{ 11, 0x0004 }, // 12/15 (11/00000000100)
	{ 14, 0x02EB }, // 13/ 0 (14/00001011101011)
	{ 12, 0x00D3 }, // 13/ 1 (12/000011010011)
	{ 12, 0x00D2 }, // 13/ 2 (12/000011010010)
	{ 12, 0x00D0 }, // 13/ 3 (12/000011010000)
	{ 13, 0x0172 }, // 13/ 4 (13/0000101110010)
	{ 13, 0x017B }, // 13/ 5 (13/0000101111011)
	{ 14, 0x02DE }, // 13/ 6 (14/00001011011110)
	{ 14, 0x02D3 }, // 13/ 7 (14/00001011010011)
	{ 14, 0x02CA }, // 13/ 8 (14/00001011001010)
	{ 16, 0x06C7 }, // 13/ 9 (16/0000011011000111)
	{ 15, 0x0373 }, // 13/10 (15/000001101110011)
	{ 15, 0x036D }, // 13/11 (15/000001101101101)
	{ 15, 0x036C }, // 13/12 (15/000001101101100)
	{ 17, 0x0D83 }, // 13/13 (17/00000110110000011)
	{ 15, 0x0361 }, // 13/14 (15/000001101100001)
	{ 11, 0x0002 }, // 13/15 (11/00000000010)
	{ 13, 0x0179 }, // 14/ 0 (13/0000101111001)
	{ 13, 0x0171 }, // 14/ 1 (13/0000101110001)
	{ 11, 0x0066 }, // 14/ 2 (11/00001100110)
	{ 12, 0x00BB }, // 14/ 3 (12/000010111011)
	{ 14, 0x02D6 }, // 14/ 4 (14/00001011010110)
	{ 14, 0x02D2 }, // 14/ 5 (14/00001011010010)
	{ 13, 0x0166 }, // 14/ 6 (13/0000101100110)
	{ 14, 0x02C7 }, // 14/ 7 (14/00001011000111)
	{ 14, 0x02C5 }, // 14/ 8 (14/00001011000101)
	{ 15, 0x0362 }, // 14/ 9 (15/000001101100010)
	{ 16, 0x06C6 }, // 14/10 (16/0000011011000110)
	{ 15, 0x0367 }, // 14/11 (15/000001101100111)
	{ 17, 0x0D82 }, // 14/12 (17/00000110110000010)
	{ 15, 0x0366 }, // 14/13 (15/000001101100110)
	{ 14, 0x01B2 }, // 14/14 (14/00000110110010)
	{ 11, 0x0000 }, // 14/15 (11/00000000000)
	{  9, 0x000C }, // 15/ 0 ( 9/000001100)
	{  8, 0x000A }, // 15/ 1 ( 8/00001010)
	{  8, 0x0007 }, // 15/ 2 ( 8/00000111)
	{  9, 0x000B }, // 15/ 3 ( 9/000001011)
	{  9, 0x000A }, // 15/ 4 ( 9/000001010)
	{ 10, 0x0011 }, // 15/ 5 (10/0000010001)
	{ 10, 0x000B }, // 15/ 6 (10/0000001011)
	{ 10, 0x0009 }, // 15/ 7 (10/0000001001)
	{ 11, 0x000D }, // 15/ 8 (11/00000001101)
	{ 11, 0x000C }, // 15/ 9 (11/00000001100)
	{ 11, 0x000A }, // 15/10 (11/00000001010)
	{ 11, 0x0007 }, // 15/11 (11/00000000111)
	{ 11, 0x0005 }, // 15/12 (11/00000000101)
	{ 11, 0x0003 }, // 15/13 (11/00000000011)
	{ 11, 0x0001 }, // 15/14 (11/00000000001)
	{  8, 0x0003 }  // 15/15 ( 8/00000011)
};
static huffman_code* htab16_enc[ 16 ] = {
	htab16_enc_raw +   0, // htab16 v0=0 pointer
	htab16_enc_raw +  16, // htab16 v0=1 pointer
	htab16_enc_raw +  32, // htab16 v0=2 pointer
	htab16_enc_raw +  48, // htab16 v0=3 pointer
	htab16_enc_raw +  64, // htab16 v0=4 pointer
	htab16_enc_raw +  80, // htab16 v0=5 pointer
	htab16_enc_raw +  96, // htab16 v0=6 pointer
	htab16_enc_raw + 112, // htab16 v0=7 pointer
	htab16_enc_raw + 128, // htab16 v0=8 pointer
	htab16_enc_raw + 144, // htab16 v0=9 pointer
	htab16_enc_raw + 160, // htab16 v0=10 pointer
	htab16_enc_raw + 176, // htab16 v0=11 pointer
	htab16_enc_raw + 192, // htab16 v0=12 pointer
	htab16_enc_raw + 208, // htab16 v0=13 pointer
	htab16_enc_raw + 224, // htab16 v0=14 pointer
	htab16_enc_raw + 240  // htab16 v0=15 pointer
};

/* -----------------------------------------------
	big values table 24 (max 15)
	----------------------------------------------- */
static huffman_code htab24_enc_raw[ 256 ] = {
	{  4, 0x000F }, //  0/ 0 ( 4/1111)
	{  4, 0x000D }, //  0/ 1 ( 4/1101)
	{  6, 0x002E }, //  0/ 2 ( 6/101110)
	{  7, 0x0050 }, //  0/ 3 ( 7/1010000)
	{  8, 0x0092 }, //  0/ 4 ( 8/10010010)
	{  9, 0x0106 }, //  0/ 5 ( 9/100000110)
	{  9, 0x00F8 }, //  0/ 6 ( 9/011111000)
	{ 10, 0x01B2 }, //  0/ 7 (10/0110110010)
	{ 10, 0x01AA }, //  0/ 8 (10/0110101010)
	{ 11, 0x029D }, //  0/ 9 (11/01010011101)
	{ 11, 0x028D }, //  0/10 (11/01010001101)
	{ 11, 0x0289 }, //  0/11 (11/01010001001)
	{ 11, 0x026D }, //  0/12 (11/01001101101)
	{ 11, 0x0205 }, //  0/13 (11/01000000101)
	{ 12, 0x0408 }, //  0/14 (12/010000001000)
	{  9, 0x0058 }, //  0/15 ( 9/001011000)
	{  4, 0x000E }, //  1/ 0 ( 4/1110)
	{  4, 0x000C }, //  1/ 1 ( 4/1100)
	{  5, 0x0015 }, //  1/ 2 ( 5/10101)
	{  6, 0x0026 }, //  1/ 3 ( 6/100110)
	{  7, 0x0047 }, //  1/ 4 ( 7/1000111)
	{  8, 0x0082 }, //  1/ 5 ( 8/10000010)
	{  8, 0x007A }, //  1/ 6 ( 8/01111010)
	{  9, 0x00D8 }, //  1/ 7 ( 9/011011000)
	{  9, 0x00D1 }, //  1/ 8 ( 9/011010001)
	{  9, 0x00C6 }, //  1/ 9 ( 9/011000110)
	{ 10, 0x0147 }, //  1/10 (10/0101000111)
	{ 10, 0x0159 }, //  1/11 (10/0101011001)
	{ 10, 0x013F }, //  1/12 (10/0100111111)
	{ 10, 0x0129 }, //  1/13 (10/0100101001)
	{ 10, 0x0117 }, //  1/14 (10/0100010111)
	{  8, 0x002A }, //  1/15 ( 8/00101010)
	{  6, 0x002F }, //  2/ 0 ( 6/101111)
	{  5, 0x0016 }, //  2/ 1 ( 5/10110)
	{  6, 0x0029 }, //  2/ 2 ( 6/101001)
	{  7, 0x004A }, //  2/ 3 ( 7/1001010)
	{  7, 0x0044 }, //  2/ 4 ( 7/1000100)
	{  8, 0x0080 }, //  2/ 5 ( 8/10000000)
	{  8, 0x0078 }, //  2/ 6 ( 8/01111000)
	{  9, 0x00DD }, //  2/ 7 ( 9/011011101)
	{  9, 0x00CF }, //  2/ 8 ( 9/011001111)
	{  9, 0x00C2 }, //  2/ 9 ( 9/011000010)
	{  9, 0x00B6 }, //  2/10 ( 9/010110110)
	{ 10, 0x0154 }, //  2/11 (10/0101010100)
	{ 10, 0x013B }, //  2/12 (10/0100111011)
	{ 10, 0x0127 }, //  2/13 (10/0100100111)
	{ 11, 0x021D }, //  2/14 (11/01000011101)
	{  7, 0x0012 }, //  2/15 ( 7/0010010)
	{  7, 0x0051 }, //  3/ 0 ( 7/1010001)
	{  6, 0x0027 }, //  3/ 1 ( 6/100111)
	{  7, 0x004B }, //  3/ 2 ( 7/1001011)
	{  7, 0x0046 }, //  3/ 3 ( 7/1000110)
	{  8, 0x0086 }, //  3/ 4 ( 8/10000110)
	{  8, 0x007D }, //  3/ 5 ( 8/01111101)
	{  8, 0x0074 }, //  3/ 6 ( 8/01110100)
	{  9, 0x00DC }, //  3/ 7 ( 9/011011100)
	{  9, 0x00CC }, //  3/ 8 ( 9/011001100)
	{  9, 0x00BE }, //  3/ 9 ( 9/010111110)
	{  9, 0x00B2 }, //  3/10 ( 9/010110010)
	{ 10, 0x0145 }, //  3/11 (10/0101000101)
	{ 10, 0x0137 }, //  3/12 (10/0100110111)
	{ 10, 0x0125 }, //  3/13 (10/0100100101)
	{ 10, 0x010F }, //  3/14 (10/0100001111)
	{  7, 0x0010 }, //  3/15 ( 7/0010000)
	{  8, 0x0093 }, //  4/ 0 ( 8/10010011)
	{  7, 0x0048 }, //  4/ 1 ( 7/1001000)
	{  7, 0x0045 }, //  4/ 2 ( 7/1000101)
	{  8, 0x0087 }, //  4/ 3 ( 8/10000111)
	{  8, 0x007F }, //  4/ 4 ( 8/01111111)
	{  8, 0x0076 }, //  4/ 5 ( 8/01110110)
	{  8, 0x0070 }, //  4/ 6 ( 8/01110000)
	{  9, 0x00D2 }, //  4/ 7 ( 9/011010010)
	{  9, 0x00C8 }, //  4/ 8 ( 9/011001000)
	{  9, 0x00BC }, //  4/ 9 ( 9/010111100)
	{ 10, 0x0160 }, //  4/10 (10/0101100000)
	{ 10, 0x0143 }, //  4/11 (10/0101000011)
	{ 10, 0x0132 }, //  4/12 (10/0100110010)
	{ 10, 0x011D }, //  4/13 (10/0100011101)
	{ 11, 0x021C }, //  4/14 (11/01000011100)
	{  7, 0x000E }, //  4/15 ( 7/0001110)
	{  9, 0x0107 }, //  5/ 0 ( 9/100000111)
	{  7, 0x0042 }, //  5/ 1 ( 7/1000010)
	{  8, 0x0081 }, //  5/ 2 ( 8/10000001)
	{  8, 0x007E }, //  5/ 3 ( 8/01111110)
	{  8, 0x0077 }, //  5/ 4 ( 8/01110111)
	{  8, 0x0072 }, //  5/ 5 ( 8/01110010)
	{  9, 0x00D6 }, //  5/ 6 ( 9/011010110)
	{  9, 0x00CA }, //  5/ 7 ( 9/011001010)
	{  9, 0x00C0 }, //  5/ 8 ( 9/011000000)
	{  9, 0x00B4 }, //  5/ 9 ( 9/010110100)
	{ 10, 0x0155 }, //  5/10 (10/0101010101)
	{ 10, 0x013D }, //  5/11 (10/0100111101)
	{ 10, 0x012D }, //  5/12 (10/0100101101)
	{ 10, 0x0119 }, //  5/13 (10/0100011001)
	{ 10, 0x0106 }, //  5/14 (10/0100000110)
	{  7, 0x000C }, //  5/15 ( 7/0001100)
	{  9, 0x00F9 }, //  6/ 0 ( 9/011111001)
	{  8, 0x007B }, //  6/ 1 ( 8/01111011)
	{  8, 0x0079 }, //  6/ 2 ( 8/01111001)
	{  8, 0x0075 }, //  6/ 3 ( 8/01110101)
	{  8, 0x0071 }, //  6/ 4 ( 8/01110001)
	{  9, 0x00D7 }, //  6/ 5 ( 9/011010111)
	{  9, 0x00CE }, //  6/ 6 ( 9/011001110)
	{  9, 0x00C3 }, //  6/ 7 ( 9/011000011)
	{  9, 0x00B9 }, //  6/ 8 ( 9/010111001)
	{ 10, 0x015B }, //  6/ 9 (10/0101011011)
	{ 10, 0x014A }, //  6/10 (10/0101001010)
	{ 10, 0x0134 }, //  6/11 (10/0100110100)
	{ 10, 0x0123 }, //  6/12 (10/0100100011)
	{ 10, 0x0110 }, //  6/13 (10/0100010000)
	{ 11, 0x0208 }, //  6/14 (11/01000001000)
	{  7, 0x000A }, //  6/15 ( 7/0001010)
	{ 10, 0x01B3 }, //  7/ 0 (10/0110110011)
	{  8, 0x0073 }, //  7/ 1 ( 8/01110011)
	{  8, 0x006F }, //  7/ 2 ( 8/01101111)
	{  8, 0x006D }, //  7/ 3 ( 8/01101101)
	{  9, 0x00D3 }, //  7/ 4 ( 9/011010011)
	{  9, 0x00CB }, //  7/ 5 ( 9/011001011)
	{  9, 0x00C4 }, //  7/ 6 ( 9/011000100)
	{  9, 0x00BB }, //  7/ 7 ( 9/010111011)
	{ 10, 0x0161 }, //  7/ 8 (10/0101100001)
	{ 10, 0x014C }, //  7/ 9 (10/0101001100)
	{ 10, 0x0139 }, //  7/10 (10/0100111001)
	{ 10, 0x012A }, //  7/11 (10/0100101010)
	{ 10, 0x011B }, //  7/12 (10/0100011011)
	{ 11, 0x0213 }, //  7/13 (11/01000010011)
	{ 11, 0x017D }, //  7/14 (11/00101111101)
	{  8, 0x0011 }, //  7/15 ( 8/00010001)
	{ 10, 0x01AB }, //  8/ 0 (10/0110101011)
	{  9, 0x00D4 }, //  8/ 1 ( 9/011010100)
	{  9, 0x00D0 }, //  8/ 2 ( 9/011010000)
	{  9, 0x00CD }, //  8/ 3 ( 9/011001101)
	{  9, 0x00C9 }, //  8/ 4 ( 9/011001001)
	{  9, 0x00C1 }, //  8/ 5 ( 9/011000001)
	{  9, 0x00BA }, //  8/ 6 ( 9/010111010)
	{  9, 0x00B1 }, //  8/ 7 ( 9/010110001)
	{  9, 0x00A9 }, //  8/ 8 ( 9/010101001)
	{ 10, 0x0140 }, //  8/ 9 (10/0101000000)
	{ 10, 0x012F }, //  8/10 (10/0100101111)
	{ 10, 0x011E }, //  8/11 (10/0100011110)
	{ 10, 0x010C }, //  8/12 (10/0100001100)
	{ 11, 0x0202 }, //  8/13 (11/01000000010)
	{ 11, 0x0179 }, //  8/14 (11/00101111001)
	{  8, 0x0010 }, //  8/15 ( 8/00010000)
	{ 10, 0x014F }, //  9/ 0 (10/0101001111)
	{  9, 0x00C7 }, //  9/ 1 ( 9/011000111)
	{  9, 0x00C5 }, //  9/ 2 ( 9/011000101)
	{  9, 0x00BF }, //  9/ 3 ( 9/010111111)
	{  9, 0x00BD }, //  9/ 4 ( 9/010111101)
	{  9, 0x00B5 }, //  9/ 5 ( 9/010110101)
	{  9, 0x00AE }, //  9/ 6 ( 9/010101110)
	{ 10, 0x014D }, //  9/ 7 (10/0101001101)
	{ 10, 0x0141 }, //  9/ 8 (10/0101000001)
	{ 10, 0x0131 }, //  9/ 9 (10/0100110001)
	{ 10, 0x0121 }, //  9/10 (10/0100100001)
	{ 10, 0x0113 }, //  9/11 (10/0100010011)
	{ 11, 0x0209 }, //  9/12 (11/01000001001)
	{ 11, 0x017B }, //  9/13 (11/00101111011)
	{ 11, 0x0173 }, //  9/14 (11/00101110011)
	{  8, 0x000B }, //  9/15 ( 8/00001011)
	{ 11, 0x029C }, // 10/ 0 (11/01010011100)
	{  9, 0x00B8 }, // 10/ 1 ( 9/010111000)
	{  9, 0x00B7 }, // 10/ 2 ( 9/010110111)
	{  9, 0x00B3 }, // 10/ 3 ( 9/010110011)
	{  9, 0x00AF }, // 10/ 4 ( 9/010101111)
	{ 10, 0x0158 }, // 10/ 5 (10/0101011000)
	{ 10, 0x014B }, // 10/ 6 (10/0101001011)
	{ 10, 0x013A }, // 10/ 7 (10/0100111010)
	{ 10, 0x0130 }, // 10/ 8 (10/0100110000)
	{ 10, 0x0122 }, // 10/ 9 (10/0100100010)
	{ 10, 0x0115 }, // 10/10 (10/0100010101)
	{ 11, 0x0212 }, // 10/11 (11/01000010010)
	{ 11, 0x017F }, // 10/12 (11/00101111111)
	{ 11, 0x0175 }, // 10/13 (11/00101110101)
	{ 11, 0x016E }, // 10/14 (11/00101101110)
	{  8, 0x000A }, // 10/15 ( 8/00001010)
	{ 11, 0x028C }, // 11/ 0 (11/01010001100)
	{ 10, 0x015A }, // 11/ 1 (10/0101011010)
	{  9, 0x00AB }, // 11/ 2 ( 9/010101011)
	{  9, 0x00A8 }, // 11/ 3 ( 9/010101000)
	{  9, 0x00A4 }, // 11/ 4 ( 9/010100100)
	{ 10, 0x013E }, // 11/ 5 (10/0100111110)
	{ 10, 0x0135 }, // 11/ 6 (10/0100110101)
	{ 10, 0x012B }, // 11/ 7 (10/0100101011)
	{ 10, 0x011F }, // 11/ 8 (10/0100011111)
	{ 10, 0x0114 }, // 11/ 9 (10/0100010100)
	{ 10, 0x0107 }, // 11/10 (10/0100000111)
	{ 11, 0x0201 }, // 11/11 (11/01000000001)
	{ 11, 0x0177 }, // 11/12 (11/00101110111)
	{ 11, 0x0170 }, // 11/13 (11/00101110000)
	{ 11, 0x016A }, // 11/14 (11/00101101010)
	{  8, 0x0006 }, // 11/15 ( 8/00000110)
	{ 11, 0x0288 }, // 12/ 0 (11/01010001000)
	{ 10, 0x0142 }, // 12/ 1 (10/0101000010)
	{ 10, 0x013C }, // 12/ 2 (10/0100111100)
	{ 10, 0x0138 }, // 12/ 3 (10/0100111000)
	{ 10, 0x0133 }, // 12/ 4 (10/0100110011)
	{ 10, 0x012E }, // 12/ 5 (10/0100101110)
	{ 10, 0x0124 }, // 12/ 6 (10/0100100100)
	{ 10, 0x011C }, // 12/ 7 (10/0100011100)
	{ 10, 0x010D }, // 12/ 8 (10/0100001101)
	{ 10, 0x0105 }, // 12/ 9 (10/0100000101)
	{ 11, 0x0200 }, // 12/10 (11/01000000000)
	{ 11, 0x0178 }, // 12/11 (11/00101111000)
	{ 11, 0x0172 }, // 12/12 (11/00101110010)
	{ 11, 0x016C }, // 12/13 (11/00101101100)
	{ 11, 0x0167 }, // 12/14 (11/00101100111)
	{  8, 0x0004 }, // 12/15 ( 8/00000100)
	{ 11, 0x026C }, // 13/ 0 (11/01001101100)
	{ 10, 0x012C }, // 13/ 1 (10/0100101100)
	{ 10, 0x0128 }, // 13/ 2 (10/0100101000)
	{ 10, 0x0126 }, // 13/ 3 (10/0100100110)
	{ 10, 0x0120 }, // 13/ 4 (10/0100100000)
	{ 10, 0x011A }, // 13/ 5 (10/0100011010)
	{ 10, 0x0111 }, // 13/ 6 (10/0100010001)
	{ 10, 0x010A }, // 13/ 7 (10/0100001010)
	{ 11, 0x0203 }, // 13/ 8 (11/01000000011)
	{ 11, 0x017C }, // 13/ 9 (11/00101111100)
	{ 11, 0x0176 }, // 13/10 (11/00101110110)
	{ 11, 0x0171 }, // 13/11 (11/00101110001)
	{ 11, 0x016D }, // 13/12 (11/00101101101)
	{ 11, 0x0169 }, // 13/13 (11/00101101001)
	{ 11, 0x0165 }, // 13/14 (11/00101100101)
	{  8, 0x0002 }, // 13/15 ( 8/00000010)
	{ 12, 0x0409 }, // 14/ 0 (12/010000001001)
	{ 10, 0x0118 }, // 14/ 1 (10/0100011000)
	{ 10, 0x0116 }, // 14/ 2 (10/0100010110)
	{ 10, 0x0112 }, // 14/ 3 (10/0100010010)
	{ 10, 0x010B }, // 14/ 4 (10/0100001011)
	{ 10, 0x0108 }, // 14/ 5 (10/0100001000)
	{ 10, 0x0103 }, // 14/ 6 (10/0100000011)
	{ 11, 0x017E }, // 14/ 7 (11/00101111110)
	{ 11, 0x017A }, // 14/ 8 (11/00101111010)
	{ 11, 0x0174 }, // 14/ 9 (11/00101110100)
	{ 11, 0x016F }, // 14/10 (11/00101101111)
	{ 11, 0x016B }, // 14/11 (11/00101101011)
	{ 11, 0x0168 }, // 14/12 (11/00101101000)
	{ 11, 0x0166 }, // 14/13 (11/00101100110)
	{ 11, 0x0164 }, // 14/14 (11/00101100100)
	{  8, 0x0000 }, // 14/15 ( 8/00000000)
	{  8, 0x002B }, // 15/ 0 ( 8/00101011)
	{  7, 0x0014 }, // 15/ 1 ( 7/0010100)
	{  7, 0x0013 }, // 15/ 2 ( 7/0010011)
	{  7, 0x0011 }, // 15/ 3 ( 7/0010001)
	{  7, 0x000F }, // 15/ 4 ( 7/0001111)
	{  7, 0x000D }, // 15/ 5 ( 7/0001101)
	{  7, 0x000B }, // 15/ 6 ( 7/0001011)
	{  7, 0x0009 }, // 15/ 7 ( 7/0001001)
	{  7, 0x0007 }, // 15/ 8 ( 7/0000111)
	{  7, 0x0006 }, // 15/ 9 ( 7/0000110)
	{  7, 0x0004 }, // 15/10 ( 7/0000100)
	{  8, 0x0007 }, // 15/11 ( 8/00000111)
	{  8, 0x0005 }, // 15/12 ( 8/00000101)
	{  8, 0x0003 }, // 15/13 ( 8/00000011)
	{  8, 0x0001 }, // 15/14 ( 8/00000001)
	{  4, 0x0003 }  // 15/15 ( 4/0011)
};
static huffman_code* htab24_enc[ 16 ] = {
	htab24_enc_raw +   0, // htab24 v0=0 pointer
	htab24_enc_raw +  16, // htab24 v0=1 pointer
	htab24_enc_raw +  32, // htab24 v0=2 pointer
	htab24_enc_raw +  48, // htab24 v0=3 pointer
	htab24_enc_raw +  64, // htab24 v0=4 pointer
	htab24_enc_raw +  80, // htab24 v0=5 pointer
	htab24_enc_raw +  96, // htab24 v0=6 pointer
	htab24_enc_raw + 112, // htab24 v0=7 pointer
	htab24_enc_raw + 128, // htab24 v0=8 pointer
	htab24_enc_raw + 144, // htab24 v0=9 pointer
	htab24_enc_raw + 160, // htab24 v0=10 pointer
	htab24_enc_raw + 176, // htab24 v0=11 pointer
	htab24_enc_raw + 192, // htab24 v0=12 pointer
	htab24_enc_raw + 208, // htab24 v0=13 pointer
	htab24_enc_raw + 224, // htab24 v0=14 pointer
	htab24_enc_raw + 240  // htab24 v0=15 pointer
};


/* -----------------------------------------------
	small values conversion table A
	----------------------------------------------- */
static huffman_conv htabA_dec_raw[ 64 ] = {
	{ 6, 0xB, 3, -1 }, // 000000 -> 1011, 6 bit used
	{ 6, 0xF, 4, -1 }, // 000001 -> 1111, 6 bit used
	{ 6, 0xD, 3, -1 }, // 000010 -> 1101, 6 bit used
	{ 6, 0xE, 3, -1 }, // 000011 -> 1110, 6 bit used
	{ 6, 0x7, 3, -1 }, // 000100 -> 0111, 6 bit used
	{ 6, 0x5, 2, -1 }, // 000101 -> 0101, 6 bit used
	{ 5, 0x9, 2, -1 }, // 000110 -> 1001, 5 bit used
	{ 5, 0x9, 2, -1 }, // 000111 -> 1001, 5 bit used
	{ 5, 0x6, 2, -1 }, // 001000 -> 0110, 5 bit used
	{ 5, 0x6, 2, -1 }, // 001001 -> 0110, 5 bit used
	{ 5, 0x3, 2, -1 }, // 001010 -> 0011, 5 bit used
	{ 5, 0x3, 2, -1 }, // 001011 -> 0011, 5 bit used
	{ 5, 0xA, 2, -1 }, // 001100 -> 1010, 5 bit used
	{ 5, 0xA, 2, -1 }, // 001101 -> 1010, 5 bit used
	{ 5, 0xC, 2, -1 }, // 001110 -> 1100, 5 bit used
	{ 5, 0xC, 2, -1 }, // 001111 -> 1100, 5 bit used
	{ 4, 0x2, 1, -1 }, // 010000 -> 0010, 4 bit used
	{ 4, 0x2, 1, -1 }, // 010001 -> 0010, 4 bit used
	{ 4, 0x2, 1, -1 }, // 010010 -> 0010, 4 bit used
	{ 4, 0x2, 1, -1 }, // 010011 -> 0010, 4 bit used
	{ 4, 0x1, 1, -1 }, // 010100 -> 0001, 4 bit used
	{ 4, 0x1, 1, -1 }, // 010101 -> 0001, 4 bit used
	{ 4, 0x1, 1, -1 }, // 010110 -> 0001, 4 bit used
	{ 4, 0x1, 1, -1 }, // 010111 -> 0001, 4 bit used
	{ 4, 0x4, 1, -1 }, // 011000 -> 0100, 4 bit used
	{ 4, 0x4, 1, -1 }, // 011001 -> 0100, 4 bit used
	{ 4, 0x4, 1, -1 }, // 011010 -> 0100, 4 bit used
	{ 4, 0x4, 1, -1 }, // 011011 -> 0100, 4 bit used
	{ 4, 0x8, 1, -1 }, // 011100 -> 1000, 4 bit used
	{ 4, 0x8, 1, -1 }, // 011101 -> 1000, 4 bit used
	{ 4, 0x8, 1, -1 }, // 011110 -> 1000, 4 bit used
	{ 4, 0x8, 1, -1 }, // 011111 -> 1000, 4 bit used
	{ 1, 0x0, 0, -1 }, // 100000 -> 0000, 1 bit used
	{ 1, 0x0, 0, -1 }, // 100001 -> 0000, 1 bit used
	{ 1, 0x0, 0, -1 }, // 100010 -> 0000, 1 bit used
	{ 1, 0x0, 0, -1 }, // 100011 -> 0000, 1 bit used
	{ 1, 0x0, 0, -1 }, // 100100 -> 0000, 1 bit used
	{ 1, 0x0, 0, -1 }, // 100101 -> 0000, 1 bit used
	{ 1, 0x0, 0, -1 }, // 100110 -> 0000, 1 bit used
	{ 1, 0x0, 0, -1 }, // 100111 -> 0000, 1 bit used
	{ 1, 0x0, 0, -1 }, // 101000 -> 0000, 1 bit used
	{ 1, 0x0, 0, -1 }, // 101001 -> 0000, 1 bit used
	{ 1, 0x0, 0, -1 }, // 101010 -> 0000, 1 bit used
	{ 1, 0x0, 0, -1 }, // 101011 -> 0000, 1 bit used
	{ 1, 0x0, 0, -1 }, // 101100 -> 0000, 1 bit used
	{ 1, 0x0, 0, -1 }, // 101101 -> 0000, 1 bit used
	{ 1, 0x0, 0, -1 }, // 101110 -> 0000, 1 bit used
	{ 1, 0x0, 0, -1 }, // 101111 -> 0000, 1 bit used
	{ 1, 0x0, 0, -1 }, // 110000 -> 0000, 1 bit used
	{ 1, 0x0, 0, -1 }, // 110001 -> 0000, 1 bit used
	{ 1, 0x0, 0, -1 }, // 110010 -> 0000, 1 bit used
	{ 1, 0x0, 0, -1 }, // 110011 -> 0000, 1 bit used
	{ 1, 0x0, 0, -1 }, // 110100 -> 0000, 1 bit used
	{ 1, 0x0, 0, -1 }, // 110101 -> 0000, 1 bit used
	{ 1, 0x0, 0, -1 }, // 110110 -> 0000, 1 bit used
	{ 1, 0x0, 0, -1 }, // 110111 -> 0000, 1 bit used
	{ 1, 0x0, 0, -1 }, // 111000 -> 0000, 1 bit used
	{ 1, 0x0, 0, -1 }, // 111001 -> 0000, 1 bit used
	{ 1, 0x0, 0, -1 }, // 111010 -> 0000, 1 bit used
	{ 1, 0x0, 0, -1 }, // 111011 -> 0000, 1 bit used
	{ 1, 0x0, 0, -1 }, // 111100 -> 0000, 1 bit used
	{ 1, 0x0, 0, -1 }, // 111101 -> 0000, 1 bit used
	{ 1, 0x0, 0, -1 }, // 111110 -> 0000, 1 bit used
	{ 1, 0x0, 0, -1 }  // 111111 -> 0000, 1 bit used
};
static huffman_conv_set htabA_dec = { htabA_dec_raw, 6 };

/* -----------------------------------------------
	small values conversion table B
	----------------------------------------------- */
static huffman_conv htabB_dec_raw[ 16 ] = {
	{ 4, 0xF, 4, -1 }, // 0000 -> 1111, 4 bit used
	{ 4, 0xE, 3, -1 }, // 0001 -> 1110, 4 bit used
	{ 4, 0xD, 3, -1 }, // 0010 -> 1101, 4 bit used
	{ 4, 0xC, 2, -1 }, // 0011 -> 1100, 4 bit used
	{ 4, 0xB, 3, -1 }, // 0100 -> 1011, 4 bit used
	{ 4, 0xA, 2, -1 }, // 0101 -> 1010, 4 bit used
	{ 4, 0x9, 2, -1 }, // 0110 -> 1001, 4 bit used
	{ 4, 0x8, 1, -1 }, // 0111 -> 1000, 4 bit used
	{ 4, 0x7, 3, -1 }, // 1000 -> 0111, 4 bit used
	{ 4, 0x6, 2, -1 }, // 1001 -> 0110, 4 bit used
	{ 4, 0x5, 2, -1 }, // 1010 -> 0101, 4 bit used
	{ 4, 0x4, 1, -1 }, // 1011 -> 0100, 4 bit used
	{ 4, 0x3, 2, -1 }, // 1100 -> 0011, 4 bit used
	{ 4, 0x2, 1, -1 }, // 1101 -> 0010, 4 bit used
	{ 4, 0x1, 1, -1 }, // 1110 -> 0001, 4 bit used
	{ 4, 0x0, 0, -1 }  // 1111 -> 0000, 4 bit used
};
static huffman_conv_set htabB_dec = { htabB_dec_raw, 4 };

/* -----------------------------------------------
	small values quadruple conversion table
	----------------------------------------------- */
static const signed short sv_qconv[ 256 ][ 5 ] = {
	{  0,  0,  0,  0,  0 }, // 00000000 -> 0/0/0/0, 0 signbits
	{  0,  0,  0,  0,  0 }, // 00000001 -> 0/0/0/0, 0 signbits
	{  0,  0,  0,  0,  0 }, // 00000010 -> 0/0/0/0, 0 signbits
	{  0,  0,  0,  0,  0 }, // 00000011 -> 0/0/0/0, 0 signbits
	{  0,  0,  0,  0,  0 }, // 00000100 -> 0/0/0/0, 0 signbits
	{  0,  0,  0,  0,  0 }, // 00000101 -> 0/0/0/0, 0 signbits
	{  0,  0,  0,  0,  0 }, // 00000110 -> 0/0/0/0, 0 signbits
	{  0,  0,  0,  0,  0 }, // 00000111 -> 0/0/0/0, 0 signbits
	{  0,  0,  0,  0,  0 }, // 00001000 -> 0/0/0/0, 0 signbits
	{  0,  0,  0,  0,  0 }, // 00001001 -> 0/0/0/0, 0 signbits
	{  0,  0,  0,  0,  0 }, // 00001010 -> 0/0/0/0, 0 signbits
	{  0,  0,  0,  0,  0 }, // 00001011 -> 0/0/0/0, 0 signbits
	{  0,  0,  0,  0,  0 }, // 00001100 -> 0/0/0/0, 0 signbits
	{  0,  0,  0,  0,  0 }, // 00001101 -> 0/0/0/0, 0 signbits
	{  0,  0,  0,  0,  0 }, // 00001110 -> 0/0/0/0, 0 signbits
	{  0,  0,  0,  0,  0 }, // 00001111 -> 0/0/0/0, 0 signbits
	{  0,  0,  0,  1,  1 }, // 00010000 -> 0/0/0/1, 1 signbits
	{  0,  0,  0,  1,  1 }, // 00010001 -> 0/0/0/1, 1 signbits
	{  0,  0,  0,  1,  1 }, // 00010010 -> 0/0/0/1, 1 signbits
	{  0,  0,  0,  1,  1 }, // 00010011 -> 0/0/0/1, 1 signbits
	{  0,  0,  0,  1,  1 }, // 00010100 -> 0/0/0/1, 1 signbits
	{  0,  0,  0,  1,  1 }, // 00010101 -> 0/0/0/1, 1 signbits
	{  0,  0,  0,  1,  1 }, // 00010110 -> 0/0/0/1, 1 signbits
	{  0,  0,  0,  1,  1 }, // 00010111 -> 0/0/0/1, 1 signbits
	{  0,  0,  0, -1,  1 }, // 00011000 -> 0/0/0/-1, 1 signbits
	{  0,  0,  0, -1,  1 }, // 00011001 -> 0/0/0/-1, 1 signbits
	{  0,  0,  0, -1,  1 }, // 00011010 -> 0/0/0/-1, 1 signbits
	{  0,  0,  0, -1,  1 }, // 00011011 -> 0/0/0/-1, 1 signbits
	{  0,  0,  0, -1,  1 }, // 00011100 -> 0/0/0/-1, 1 signbits
	{  0,  0,  0, -1,  1 }, // 00011101 -> 0/0/0/-1, 1 signbits
	{  0,  0,  0, -1,  1 }, // 00011110 -> 0/0/0/-1, 1 signbits
	{  0,  0,  0, -1,  1 }, // 00011111 -> 0/0/0/-1, 1 signbits
	{  0,  0,  1,  0,  1 }, // 00100000 -> 0/0/1/0, 1 signbits
	{  0,  0,  1,  0,  1 }, // 00100001 -> 0/0/1/0, 1 signbits
	{  0,  0,  1,  0,  1 }, // 00100010 -> 0/0/1/0, 1 signbits
	{  0,  0,  1,  0,  1 }, // 00100011 -> 0/0/1/0, 1 signbits
	{  0,  0,  1,  0,  1 }, // 00100100 -> 0/0/1/0, 1 signbits
	{  0,  0,  1,  0,  1 }, // 00100101 -> 0/0/1/0, 1 signbits
	{  0,  0,  1,  0,  1 }, // 00100110 -> 0/0/1/0, 1 signbits
	{  0,  0,  1,  0,  1 }, // 00100111 -> 0/0/1/0, 1 signbits
	{  0,  0, -1,  0,  1 }, // 00101000 -> 0/0/-1/0, 1 signbits
	{  0,  0, -1,  0,  1 }, // 00101001 -> 0/0/-1/0, 1 signbits
	{  0,  0, -1,  0,  1 }, // 00101010 -> 0/0/-1/0, 1 signbits
	{  0,  0, -1,  0,  1 }, // 00101011 -> 0/0/-1/0, 1 signbits
	{  0,  0, -1,  0,  1 }, // 00101100 -> 0/0/-1/0, 1 signbits
	{  0,  0, -1,  0,  1 }, // 00101101 -> 0/0/-1/0, 1 signbits
	{  0,  0, -1,  0,  1 }, // 00101110 -> 0/0/-1/0, 1 signbits
	{  0,  0, -1,  0,  1 }, // 00101111 -> 0/0/-1/0, 1 signbits
	{  0,  0,  1,  1,  2 }, // 00110000 -> 0/0/1/1, 2 signbits
	{  0,  0,  1,  1,  2 }, // 00110001 -> 0/0/1/1, 2 signbits
	{  0,  0,  1,  1,  2 }, // 00110010 -> 0/0/1/1, 2 signbits
	{  0,  0,  1,  1,  2 }, // 00110011 -> 0/0/1/1, 2 signbits
	{  0,  0,  1, -1,  2 }, // 00110100 -> 0/0/1/-1, 2 signbits
	{  0,  0,  1, -1,  2 }, // 00110101 -> 0/0/1/-1, 2 signbits
	{  0,  0,  1, -1,  2 }, // 00110110 -> 0/0/1/-1, 2 signbits
	{  0,  0,  1, -1,  2 }, // 00110111 -> 0/0/1/-1, 2 signbits
	{  0,  0, -1,  1,  2 }, // 00111000 -> 0/0/-1/1, 2 signbits
	{  0,  0, -1,  1,  2 }, // 00111001 -> 0/0/-1/1, 2 signbits
	{  0,  0, -1,  1,  2 }, // 00111010 -> 0/0/-1/1, 2 signbits
	{  0,  0, -1,  1,  2 }, // 00111011 -> 0/0/-1/1, 2 signbits
	{  0,  0, -1, -1,  2 }, // 00111100 -> 0/0/-1/-1, 2 signbits
	{  0,  0, -1, -1,  2 }, // 00111101 -> 0/0/-1/-1, 2 signbits
	{  0,  0, -1, -1,  2 }, // 00111110 -> 0/0/-1/-1, 2 signbits
	{  0,  0, -1, -1,  2 }, // 00111111 -> 0/0/-1/-1, 2 signbits
	{  0,  1,  0,  0,  1 }, // 01000000 -> 0/1/0/0, 1 signbits
	{  0,  1,  0,  0,  1 }, // 01000001 -> 0/1/0/0, 1 signbits
	{  0,  1,  0,  0,  1 }, // 01000010 -> 0/1/0/0, 1 signbits
	{  0,  1,  0,  0,  1 }, // 01000011 -> 0/1/0/0, 1 signbits
	{  0,  1,  0,  0,  1 }, // 01000100 -> 0/1/0/0, 1 signbits
	{  0,  1,  0,  0,  1 }, // 01000101 -> 0/1/0/0, 1 signbits
	{  0,  1,  0,  0,  1 }, // 01000110 -> 0/1/0/0, 1 signbits
	{  0,  1,  0,  0,  1 }, // 01000111 -> 0/1/0/0, 1 signbits
	{  0, -1,  0,  0,  1 }, // 01001000 -> 0/-1/0/0, 1 signbits
	{  0, -1,  0,  0,  1 }, // 01001001 -> 0/-1/0/0, 1 signbits
	{  0, -1,  0,  0,  1 }, // 01001010 -> 0/-1/0/0, 1 signbits
	{  0, -1,  0,  0,  1 }, // 01001011 -> 0/-1/0/0, 1 signbits
	{  0, -1,  0,  0,  1 }, // 01001100 -> 0/-1/0/0, 1 signbits
	{  0, -1,  0,  0,  1 }, // 01001101 -> 0/-1/0/0, 1 signbits
	{  0, -1,  0,  0,  1 }, // 01001110 -> 0/-1/0/0, 1 signbits
	{  0, -1,  0,  0,  1 }, // 01001111 -> 0/-1/0/0, 1 signbits
	{  0,  1,  0,  1,  2 }, // 01010000 -> 0/1/0/1, 2 signbits
	{  0,  1,  0,  1,  2 }, // 01010001 -> 0/1/0/1, 2 signbits
	{  0,  1,  0,  1,  2 }, // 01010010 -> 0/1/0/1, 2 signbits
	{  0,  1,  0,  1,  2 }, // 01010011 -> 0/1/0/1, 2 signbits
	{  0,  1,  0, -1,  2 }, // 01010100 -> 0/1/0/-1, 2 signbits
	{  0,  1,  0, -1,  2 }, // 01010101 -> 0/1/0/-1, 2 signbits
	{  0,  1,  0, -1,  2 }, // 01010110 -> 0/1/0/-1, 2 signbits
	{  0,  1,  0, -1,  2 }, // 01010111 -> 0/1/0/-1, 2 signbits
	{  0, -1,  0,  1,  2 }, // 01011000 -> 0/-1/0/1, 2 signbits
	{  0, -1,  0,  1,  2 }, // 01011001 -> 0/-1/0/1, 2 signbits
	{  0, -1,  0,  1,  2 }, // 01011010 -> 0/-1/0/1, 2 signbits
	{  0, -1,  0,  1,  2 }, // 01011011 -> 0/-1/0/1, 2 signbits
	{  0, -1,  0, -1,  2 }, // 01011100 -> 0/-1/0/-1, 2 signbits
	{  0, -1,  0, -1,  2 }, // 01011101 -> 0/-1/0/-1, 2 signbits
	{  0, -1,  0, -1,  2 }, // 01011110 -> 0/-1/0/-1, 2 signbits
	{  0, -1,  0, -1,  2 }, // 01011111 -> 0/-1/0/-1, 2 signbits
	{  0,  1,  1,  0,  2 }, // 01100000 -> 0/1/1/0, 2 signbits
	{  0,  1,  1,  0,  2 }, // 01100001 -> 0/1/1/0, 2 signbits
	{  0,  1,  1,  0,  2 }, // 01100010 -> 0/1/1/0, 2 signbits
	{  0,  1,  1,  0,  2 }, // 01100011 -> 0/1/1/0, 2 signbits
	{  0,  1, -1,  0,  2 }, // 01100100 -> 0/1/-1/0, 2 signbits
	{  0,  1, -1,  0,  2 }, // 01100101 -> 0/1/-1/0, 2 signbits
	{  0,  1, -1,  0,  2 }, // 01100110 -> 0/1/-1/0, 2 signbits
	{  0,  1, -1,  0,  2 }, // 01100111 -> 0/1/-1/0, 2 signbits
	{  0, -1,  1,  0,  2 }, // 01101000 -> 0/-1/1/0, 2 signbits
	{  0, -1,  1,  0,  2 }, // 01101001 -> 0/-1/1/0, 2 signbits
	{  0, -1,  1,  0,  2 }, // 01101010 -> 0/-1/1/0, 2 signbits
	{  0, -1,  1,  0,  2 }, // 01101011 -> 0/-1/1/0, 2 signbits
	{  0, -1, -1,  0,  2 }, // 01101100 -> 0/-1/-1/0, 2 signbits
	{  0, -1, -1,  0,  2 }, // 01101101 -> 0/-1/-1/0, 2 signbits
	{  0, -1, -1,  0,  2 }, // 01101110 -> 0/-1/-1/0, 2 signbits
	{  0, -1, -1,  0,  2 }, // 01101111 -> 0/-1/-1/0, 2 signbits
	{  0,  1,  1,  1,  3 }, // 01110000 -> 0/1/1/1, 3 signbits
	{  0,  1,  1,  1,  3 }, // 01110001 -> 0/1/1/1, 3 signbits
	{  0,  1,  1, -1,  3 }, // 01110010 -> 0/1/1/-1, 3 signbits
	{  0,  1,  1, -1,  3 }, // 01110011 -> 0/1/1/-1, 3 signbits
	{  0,  1, -1,  1,  3 }, // 01110100 -> 0/1/-1/1, 3 signbits
	{  0,  1, -1,  1,  3 }, // 01110101 -> 0/1/-1/1, 3 signbits
	{  0,  1, -1, -1,  3 }, // 01110110 -> 0/1/-1/-1, 3 signbits
	{  0,  1, -1, -1,  3 }, // 01110111 -> 0/1/-1/-1, 3 signbits
	{  0, -1,  1,  1,  3 }, // 01111000 -> 0/-1/1/1, 3 signbits
	{  0, -1,  1,  1,  3 }, // 01111001 -> 0/-1/1/1, 3 signbits
	{  0, -1,  1, -1,  3 }, // 01111010 -> 0/-1/1/-1, 3 signbits
	{  0, -1,  1, -1,  3 }, // 01111011 -> 0/-1/1/-1, 3 signbits
	{  0, -1, -1,  1,  3 }, // 01111100 -> 0/-1/-1/1, 3 signbits
	{  0, -1, -1,  1,  3 }, // 01111101 -> 0/-1/-1/1, 3 signbits
	{  0, -1, -1, -1,  3 }, // 01111110 -> 0/-1/-1/-1, 3 signbits
	{  0, -1, -1, -1,  3 }, // 01111111 -> 0/-1/-1/-1, 3 signbits
	{  1,  0,  0,  0,  1 }, // 10000000 -> 1/0/0/0, 1 signbits
	{  1,  0,  0,  0,  1 }, // 10000001 -> 1/0/0/0, 1 signbits
	{  1,  0,  0,  0,  1 }, // 10000010 -> 1/0/0/0, 1 signbits
	{  1,  0,  0,  0,  1 }, // 10000011 -> 1/0/0/0, 1 signbits
	{  1,  0,  0,  0,  1 }, // 10000100 -> 1/0/0/0, 1 signbits
	{  1,  0,  0,  0,  1 }, // 10000101 -> 1/0/0/0, 1 signbits
	{  1,  0,  0,  0,  1 }, // 10000110 -> 1/0/0/0, 1 signbits
	{  1,  0,  0,  0,  1 }, // 10000111 -> 1/0/0/0, 1 signbits
	{ -1,  0,  0,  0,  1 }, // 10001000 -> -1/0/0/0, 1 signbits
	{ -1,  0,  0,  0,  1 }, // 10001001 -> -1/0/0/0, 1 signbits
	{ -1,  0,  0,  0,  1 }, // 10001010 -> -1/0/0/0, 1 signbits
	{ -1,  0,  0,  0,  1 }, // 10001011 -> -1/0/0/0, 1 signbits
	{ -1,  0,  0,  0,  1 }, // 10001100 -> -1/0/0/0, 1 signbits
	{ -1,  0,  0,  0,  1 }, // 10001101 -> -1/0/0/0, 1 signbits
	{ -1,  0,  0,  0,  1 }, // 10001110 -> -1/0/0/0, 1 signbits
	{ -1,  0,  0,  0,  1 }, // 10001111 -> -1/0/0/0, 1 signbits
	{  1,  0,  0,  1,  2 }, // 10010000 -> 1/0/0/1, 2 signbits
	{  1,  0,  0,  1,  2 }, // 10010001 -> 1/0/0/1, 2 signbits
	{  1,  0,  0,  1,  2 }, // 10010010 -> 1/0/0/1, 2 signbits
	{  1,  0,  0,  1,  2 }, // 10010011 -> 1/0/0/1, 2 signbits
	{  1,  0,  0, -1,  2 }, // 10010100 -> 1/0/0/-1, 2 signbits
	{  1,  0,  0, -1,  2 }, // 10010101 -> 1/0/0/-1, 2 signbits
	{  1,  0,  0, -1,  2 }, // 10010110 -> 1/0/0/-1, 2 signbits
	{  1,  0,  0, -1,  2 }, // 10010111 -> 1/0/0/-1, 2 signbits
	{ -1,  0,  0,  1,  2 }, // 10011000 -> -1/0/0/1, 2 signbits
	{ -1,  0,  0,  1,  2 }, // 10011001 -> -1/0/0/1, 2 signbits
	{ -1,  0,  0,  1,  2 }, // 10011010 -> -1/0/0/1, 2 signbits
	{ -1,  0,  0,  1,  2 }, // 10011011 -> -1/0/0/1, 2 signbits
	{ -1,  0,  0, -1,  2 }, // 10011100 -> -1/0/0/-1, 2 signbits
	{ -1,  0,  0, -1,  2 }, // 10011101 -> -1/0/0/-1, 2 signbits
	{ -1,  0,  0, -1,  2 }, // 10011110 -> -1/0/0/-1, 2 signbits
	{ -1,  0,  0, -1,  2 }, // 10011111 -> -1/0/0/-1, 2 signbits
	{  1,  0,  1,  0,  2 }, // 10100000 -> 1/0/1/0, 2 signbits
	{  1,  0,  1,  0,  2 }, // 10100001 -> 1/0/1/0, 2 signbits
	{  1,  0,  1,  0,  2 }, // 10100010 -> 1/0/1/0, 2 signbits
	{  1,  0,  1,  0,  2 }, // 10100011 -> 1/0/1/0, 2 signbits
	{  1,  0, -1,  0,  2 }, // 10100100 -> 1/0/-1/0, 2 signbits
	{  1,  0, -1,  0,  2 }, // 10100101 -> 1/0/-1/0, 2 signbits
	{  1,  0, -1,  0,  2 }, // 10100110 -> 1/0/-1/0, 2 signbits
	{  1,  0, -1,  0,  2 }, // 10100111 -> 1/0/-1/0, 2 signbits
	{ -1,  0,  1,  0,  2 }, // 10101000 -> -1/0/1/0, 2 signbits
	{ -1,  0,  1,  0,  2 }, // 10101001 -> -1/0/1/0, 2 signbits
	{ -1,  0,  1,  0,  2 }, // 10101010 -> -1/0/1/0, 2 signbits
	{ -1,  0,  1,  0,  2 }, // 10101011 -> -1/0/1/0, 2 signbits
	{ -1,  0, -1,  0,  2 }, // 10101100 -> -1/0/-1/0, 2 signbits
	{ -1,  0, -1,  0,  2 }, // 10101101 -> -1/0/-1/0, 2 signbits
	{ -1,  0, -1,  0,  2 }, // 10101110 -> -1/0/-1/0, 2 signbits
	{ -1,  0, -1,  0,  2 }, // 10101111 -> -1/0/-1/0, 2 signbits
	{  1,  0,  1,  1,  3 }, // 10110000 -> 1/0/1/1, 3 signbits
	{  1,  0,  1,  1,  3 }, // 10110001 -> 1/0/1/1, 3 signbits
	{  1,  0,  1, -1,  3 }, // 10110010 -> 1/0/1/-1, 3 signbits
	{  1,  0,  1, -1,  3 }, // 10110011 -> 1/0/1/-1, 3 signbits
	{  1,  0, -1,  1,  3 }, // 10110100 -> 1/0/-1/1, 3 signbits
	{  1,  0, -1,  1,  3 }, // 10110101 -> 1/0/-1/1, 3 signbits
	{  1,  0, -1, -1,  3 }, // 10110110 -> 1/0/-1/-1, 3 signbits
	{  1,  0, -1, -1,  3 }, // 10110111 -> 1/0/-1/-1, 3 signbits
	{ -1,  0,  1,  1,  3 }, // 10111000 -> -1/0/1/1, 3 signbits
	{ -1,  0,  1,  1,  3 }, // 10111001 -> -1/0/1/1, 3 signbits
	{ -1,  0,  1, -1,  3 }, // 10111010 -> -1/0/1/-1, 3 signbits
	{ -1,  0,  1, -1,  3 }, // 10111011 -> -1/0/1/-1, 3 signbits
	{ -1,  0, -1,  1,  3 }, // 10111100 -> -1/0/-1/1, 3 signbits
	{ -1,  0, -1,  1,  3 }, // 10111101 -> -1/0/-1/1, 3 signbits
	{ -1,  0, -1, -1,  3 }, // 10111110 -> -1/0/-1/-1, 3 signbits
	{ -1,  0, -1, -1,  3 }, // 10111111 -> -1/0/-1/-1, 3 signbits
	{  1,  1,  0,  0,  2 }, // 11000000 -> 1/1/0/0, 2 signbits
	{  1,  1,  0,  0,  2 }, // 11000001 -> 1/1/0/0, 2 signbits
	{  1,  1,  0,  0,  2 }, // 11000010 -> 1/1/0/0, 2 signbits
	{  1,  1,  0,  0,  2 }, // 11000011 -> 1/1/0/0, 2 signbits
	{  1, -1,  0,  0,  2 }, // 11000100 -> 1/-1/0/0, 2 signbits
	{  1, -1,  0,  0,  2 }, // 11000101 -> 1/-1/0/0, 2 signbits
	{  1, -1,  0,  0,  2 }, // 11000110 -> 1/-1/0/0, 2 signbits
	{  1, -1,  0,  0,  2 }, // 11000111 -> 1/-1/0/0, 2 signbits
	{ -1,  1,  0,  0,  2 }, // 11001000 -> -1/1/0/0, 2 signbits
	{ -1,  1,  0,  0,  2 }, // 11001001 -> -1/1/0/0, 2 signbits
	{ -1,  1,  0,  0,  2 }, // 11001010 -> -1/1/0/0, 2 signbits
	{ -1,  1,  0,  0,  2 }, // 11001011 -> -1/1/0/0, 2 signbits
	{ -1, -1,  0,  0,  2 }, // 11001100 -> -1/-1/0/0, 2 signbits
	{ -1, -1,  0,  0,  2 }, // 11001101 -> -1/-1/0/0, 2 signbits
	{ -1, -1,  0,  0,  2 }, // 11001110 -> -1/-1/0/0, 2 signbits
	{ -1, -1,  0,  0,  2 }, // 11001111 -> -1/-1/0/0, 2 signbits
	{  1,  1,  0,  1,  3 }, // 11010000 -> 1/1/0/1, 3 signbits
	{  1,  1,  0,  1,  3 }, // 11010001 -> 1/1/0/1, 3 signbits
	{  1,  1,  0, -1,  3 }, // 11010010 -> 1/1/0/-1, 3 signbits
	{  1,  1,  0, -1,  3 }, // 11010011 -> 1/1/0/-1, 3 signbits
	{  1, -1,  0,  1,  3 }, // 11010100 -> 1/-1/0/1, 3 signbits
	{  1, -1,  0,  1,  3 }, // 11010101 -> 1/-1/0/1, 3 signbits
	{  1, -1,  0, -1,  3 }, // 11010110 -> 1/-1/0/-1, 3 signbits
	{  1, -1,  0, -1,  3 }, // 11010111 -> 1/-1/0/-1, 3 signbits
	{ -1,  1,  0,  1,  3 }, // 11011000 -> -1/1/0/1, 3 signbits
	{ -1,  1,  0,  1,  3 }, // 11011001 -> -1/1/0/1, 3 signbits
	{ -1,  1,  0, -1,  3 }, // 11011010 -> -1/1/0/-1, 3 signbits
	{ -1,  1,  0, -1,  3 }, // 11011011 -> -1/1/0/-1, 3 signbits
	{ -1, -1,  0,  1,  3 }, // 11011100 -> -1/-1/0/1, 3 signbits
	{ -1, -1,  0,  1,  3 }, // 11011101 -> -1/-1/0/1, 3 signbits
	{ -1, -1,  0, -1,  3 }, // 11011110 -> -1/-1/0/-1, 3 signbits
	{ -1, -1,  0, -1,  3 }, // 11011111 -> -1/-1/0/-1, 3 signbits
	{  1,  1,  1,  0,  3 }, // 11100000 -> 1/1/1/0, 3 signbits
	{  1,  1,  1,  0,  3 }, // 11100001 -> 1/1/1/0, 3 signbits
	{  1,  1, -1,  0,  3 }, // 11100010 -> 1/1/-1/0, 3 signbits
	{  1,  1, -1,  0,  3 }, // 11100011 -> 1/1/-1/0, 3 signbits
	{  1, -1,  1,  0,  3 }, // 11100100 -> 1/-1/1/0, 3 signbits
	{  1, -1,  1,  0,  3 }, // 11100101 -> 1/-1/1/0, 3 signbits
	{  1, -1, -1,  0,  3 }, // 11100110 -> 1/-1/-1/0, 3 signbits
	{  1, -1, -1,  0,  3 }, // 11100111 -> 1/-1/-1/0, 3 signbits
	{ -1,  1,  1,  0,  3 }, // 11101000 -> -1/1/1/0, 3 signbits
	{ -1,  1,  1,  0,  3 }, // 11101001 -> -1/1/1/0, 3 signbits
	{ -1,  1, -1,  0,  3 }, // 11101010 -> -1/1/-1/0, 3 signbits
	{ -1,  1, -1,  0,  3 }, // 11101011 -> -1/1/-1/0, 3 signbits
	{ -1, -1,  1,  0,  3 }, // 11101100 -> -1/-1/1/0, 3 signbits
	{ -1, -1,  1,  0,  3 }, // 11101101 -> -1/-1/1/0, 3 signbits
	{ -1, -1, -1,  0,  3 }, // 11101110 -> -1/-1/-1/0, 3 signbits
	{ -1, -1, -1,  0,  3 }, // 11101111 -> -1/-1/-1/0, 3 signbits
	{  1,  1,  1,  1,  4 }, // 11110000 -> 1/1/1/1, 4 signbits
	{  1,  1,  1, -1,  4 }, // 11110001 -> 1/1/1/-1, 4 signbits
	{  1,  1, -1,  1,  4 }, // 11110010 -> 1/1/-1/1, 4 signbits
	{  1,  1, -1, -1,  4 }, // 11110011 -> 1/1/-1/-1, 4 signbits
	{  1, -1,  1,  1,  4 }, // 11110100 -> 1/-1/1/1, 4 signbits
	{  1, -1,  1, -1,  4 }, // 11110101 -> 1/-1/1/-1, 4 signbits
	{  1, -1, -1,  1,  4 }, // 11110110 -> 1/-1/-1/1, 4 signbits
	{  1, -1, -1, -1,  4 }, // 11110111 -> 1/-1/-1/-1, 4 signbits
	{ -1,  1,  1,  1,  4 }, // 11111000 -> -1/1/1/1, 4 signbits
	{ -1,  1,  1, -1,  4 }, // 11111001 -> -1/1/1/-1, 4 signbits
	{ -1,  1, -1,  1,  4 }, // 11111010 -> -1/1/-1/1, 4 signbits
	{ -1,  1, -1, -1,  4 }, // 11111011 -> -1/1/-1/-1, 4 signbits
	{ -1, -1,  1,  1,  4 }, // 11111100 -> -1/-1/1/1, 4 signbits
	{ -1, -1,  1, -1,  4 }, // 11111101 -> -1/-1/1/-1, 4 signbits
	{ -1, -1, -1,  1,  4 }, // 11111110 -> -1/-1/-1/1, 4 signbits
	{ -1, -1, -1, -1,  4 }  // 11111111 -> -1/-1/-1/-1, 4 signbits
};

/* -----------------------------------------------
	big values conversion table 0
	----------------------------------------------- */
static huffman_conv htab0_dec_start[ 1 ] = {
	{ 0,  0,  0, -1 }  // always -> 0/0, 0 bit used
};
// big values conversion table #0, total size: 1, ext tables: 0
static huffman_conv_set htab0_dec[ 1 ] = {
	{ htab0_dec_start, 0 }  // start table
};

/* -----------------------------------------------
	big values conversion table 1
	----------------------------------------------- */
static huffman_conv htab1_dec_start[ 8 ] = {
	{ 3,  1,  1, -1 }, // 000 -> 1/1, 3 bit used
	{ 3,  0,  1, -1 }, // 001 -> 0/1, 3 bit used
	{ 2,  1,  0, -1 }, // 010 -> 1/0, 2 bit used
	{ 2,  1,  0, -1 }, // 011 -> 1/0, 2 bit used
	{ 1,  0,  0, -1 }, // 100 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 101 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 110 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }  // 111 -> 0/0, 1 bit used
};
// big values conversion table #1, total size: 8, ext tables: 0
static huffman_conv_set htab1_dec[ 1 ] = {
	{ htab1_dec_start, 3 }  // start table
};

/* -----------------------------------------------
	big values conversion table 2
	----------------------------------------------- */
static huffman_conv htab2_dec_start[ 64 ] = {
	{ 6,  2,  2, -1 }, // 000000 -> 2/2, 6 bit used
	{ 6,  0,  2, -1 }, // 000001 -> 0/2, 6 bit used
	{ 5,  1,  2, -1 }, // 000010 -> 1/2, 5 bit used
	{ 5,  1,  2, -1 }, // 000011 -> 1/2, 5 bit used
	{ 5,  2,  1, -1 }, // 000100 -> 2/1, 5 bit used
	{ 5,  2,  1, -1 }, // 000101 -> 2/1, 5 bit used
	{ 5,  2,  0, -1 }, // 000110 -> 2/0, 5 bit used
	{ 5,  2,  0, -1 }, // 000111 -> 2/0, 5 bit used
	{ 3,  1,  1, -1 }, // 001000 -> 1/1, 3 bit used
	{ 3,  1,  1, -1 }, // 001001 -> 1/1, 3 bit used
	{ 3,  1,  1, -1 }, // 001010 -> 1/1, 3 bit used
	{ 3,  1,  1, -1 }, // 001011 -> 1/1, 3 bit used
	{ 3,  1,  1, -1 }, // 001100 -> 1/1, 3 bit used
	{ 3,  1,  1, -1 }, // 001101 -> 1/1, 3 bit used
	{ 3,  1,  1, -1 }, // 001110 -> 1/1, 3 bit used
	{ 3,  1,  1, -1 }, // 001111 -> 1/1, 3 bit used
	{ 3,  0,  1, -1 }, // 010000 -> 0/1, 3 bit used
	{ 3,  0,  1, -1 }, // 010001 -> 0/1, 3 bit used
	{ 3,  0,  1, -1 }, // 010010 -> 0/1, 3 bit used
	{ 3,  0,  1, -1 }, // 010011 -> 0/1, 3 bit used
	{ 3,  0,  1, -1 }, // 010100 -> 0/1, 3 bit used
	{ 3,  0,  1, -1 }, // 010101 -> 0/1, 3 bit used
	{ 3,  0,  1, -1 }, // 010110 -> 0/1, 3 bit used
	{ 3,  0,  1, -1 }, // 010111 -> 0/1, 3 bit used
	{ 3,  1,  0, -1 }, // 011000 -> 1/0, 3 bit used
	{ 3,  1,  0, -1 }, // 011001 -> 1/0, 3 bit used
	{ 3,  1,  0, -1 }, // 011010 -> 1/0, 3 bit used
	{ 3,  1,  0, -1 }, // 011011 -> 1/0, 3 bit used
	{ 3,  1,  0, -1 }, // 011100 -> 1/0, 3 bit used
	{ 3,  1,  0, -1 }, // 011101 -> 1/0, 3 bit used
	{ 3,  1,  0, -1 }, // 011110 -> 1/0, 3 bit used
	{ 3,  1,  0, -1 }, // 011111 -> 1/0, 3 bit used
	{ 1,  0,  0, -1 }, // 100000 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 100001 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 100010 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 100011 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 100100 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 100101 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 100110 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 100111 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 101000 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 101001 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 101010 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 101011 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 101100 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 101101 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 101110 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 101111 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 110000 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 110001 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 110010 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 110011 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 110100 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 110101 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 110110 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 110111 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 111000 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 111001 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 111010 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 111011 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 111100 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 111101 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 111110 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }  // 111111 -> 0/0, 1 bit used
};
// big values conversion table #2, total size: 64, ext tables: 0
static huffman_conv_set htab2_dec[ 1 ] = {
	{ htab2_dec_start, 6 }  // start table
};

/* -----------------------------------------------
	big values conversion table 3
	----------------------------------------------- */
static huffman_conv htab3_dec_start[ 64 ] = {
	{ 6,  2,  2, -1 }, // 000000 -> 2/2, 6 bit used
	{ 6,  0,  2, -1 }, // 000001 -> 0/2, 6 bit used
	{ 5,  1,  2, -1 }, // 000010 -> 1/2, 5 bit used
	{ 5,  1,  2, -1 }, // 000011 -> 1/2, 5 bit used
	{ 5,  2,  1, -1 }, // 000100 -> 2/1, 5 bit used
	{ 5,  2,  1, -1 }, // 000101 -> 2/1, 5 bit used
	{ 5,  2,  0, -1 }, // 000110 -> 2/0, 5 bit used
	{ 5,  2,  0, -1 }, // 000111 -> 2/0, 5 bit used
	{ 3,  1,  0, -1 }, // 001000 -> 1/0, 3 bit used
	{ 3,  1,  0, -1 }, // 001001 -> 1/0, 3 bit used
	{ 3,  1,  0, -1 }, // 001010 -> 1/0, 3 bit used
	{ 3,  1,  0, -1 }, // 001011 -> 1/0, 3 bit used
	{ 3,  1,  0, -1 }, // 001100 -> 1/0, 3 bit used
	{ 3,  1,  0, -1 }, // 001101 -> 1/0, 3 bit used
	{ 3,  1,  0, -1 }, // 001110 -> 1/0, 3 bit used
	{ 3,  1,  0, -1 }, // 001111 -> 1/0, 3 bit used
	{ 2,  1,  1, -1 }, // 010000 -> 1/1, 2 bit used
	{ 2,  1,  1, -1 }, // 010001 -> 1/1, 2 bit used
	{ 2,  1,  1, -1 }, // 010010 -> 1/1, 2 bit used
	{ 2,  1,  1, -1 }, // 010011 -> 1/1, 2 bit used
	{ 2,  1,  1, -1 }, // 010100 -> 1/1, 2 bit used
	{ 2,  1,  1, -1 }, // 010101 -> 1/1, 2 bit used
	{ 2,  1,  1, -1 }, // 010110 -> 1/1, 2 bit used
	{ 2,  1,  1, -1 }, // 010111 -> 1/1, 2 bit used
	{ 2,  1,  1, -1 }, // 011000 -> 1/1, 2 bit used
	{ 2,  1,  1, -1 }, // 011001 -> 1/1, 2 bit used
	{ 2,  1,  1, -1 }, // 011010 -> 1/1, 2 bit used
	{ 2,  1,  1, -1 }, // 011011 -> 1/1, 2 bit used
	{ 2,  1,  1, -1 }, // 011100 -> 1/1, 2 bit used
	{ 2,  1,  1, -1 }, // 011101 -> 1/1, 2 bit used
	{ 2,  1,  1, -1 }, // 011110 -> 1/1, 2 bit used
	{ 2,  1,  1, -1 }, // 011111 -> 1/1, 2 bit used
	{ 2,  0,  1, -1 }, // 100000 -> 0/1, 2 bit used
	{ 2,  0,  1, -1 }, // 100001 -> 0/1, 2 bit used
	{ 2,  0,  1, -1 }, // 100010 -> 0/1, 2 bit used
	{ 2,  0,  1, -1 }, // 100011 -> 0/1, 2 bit used
	{ 2,  0,  1, -1 }, // 100100 -> 0/1, 2 bit used
	{ 2,  0,  1, -1 }, // 100101 -> 0/1, 2 bit used
	{ 2,  0,  1, -1 }, // 100110 -> 0/1, 2 bit used
	{ 2,  0,  1, -1 }, // 100111 -> 0/1, 2 bit used
	{ 2,  0,  1, -1 }, // 101000 -> 0/1, 2 bit used
	{ 2,  0,  1, -1 }, // 101001 -> 0/1, 2 bit used
	{ 2,  0,  1, -1 }, // 101010 -> 0/1, 2 bit used
	{ 2,  0,  1, -1 }, // 101011 -> 0/1, 2 bit used
	{ 2,  0,  1, -1 }, // 101100 -> 0/1, 2 bit used
	{ 2,  0,  1, -1 }, // 101101 -> 0/1, 2 bit used
	{ 2,  0,  1, -1 }, // 101110 -> 0/1, 2 bit used
	{ 2,  0,  1, -1 }, // 101111 -> 0/1, 2 bit used
	{ 2,  0,  0, -1 }, // 110000 -> 0/0, 2 bit used
	{ 2,  0,  0, -1 }, // 110001 -> 0/0, 2 bit used
	{ 2,  0,  0, -1 }, // 110010 -> 0/0, 2 bit used
	{ 2,  0,  0, -1 }, // 110011 -> 0/0, 2 bit used
	{ 2,  0,  0, -1 }, // 110100 -> 0/0, 2 bit used
	{ 2,  0,  0, -1 }, // 110101 -> 0/0, 2 bit used
	{ 2,  0,  0, -1 }, // 110110 -> 0/0, 2 bit used
	{ 2,  0,  0, -1 }, // 110111 -> 0/0, 2 bit used
	{ 2,  0,  0, -1 }, // 111000 -> 0/0, 2 bit used
	{ 2,  0,  0, -1 }, // 111001 -> 0/0, 2 bit used
	{ 2,  0,  0, -1 }, // 111010 -> 0/0, 2 bit used
	{ 2,  0,  0, -1 }, // 111011 -> 0/0, 2 bit used
	{ 2,  0,  0, -1 }, // 111100 -> 0/0, 2 bit used
	{ 2,  0,  0, -1 }, // 111101 -> 0/0, 2 bit used
	{ 2,  0,  0, -1 }, // 111110 -> 0/0, 2 bit used
	{ 2,  0,  0, -1 }  // 111111 -> 0/0, 2 bit used
};
// big values conversion table #3, total size: 64, ext tables: 0
static huffman_conv_set htab3_dec[ 1 ] = {
	{ htab3_dec_start, 6 }  // start table
};

/* -----------------------------------------------
	big values conversion table 5
	----------------------------------------------- */
static huffman_conv htab5_dec_start[ 256 ] = {
	{ 8,  3,  3, -1 }, // 00000000 -> 3/3, 8 bit used
	{ 8,  2,  3, -1 }, // 00000001 -> 2/3, 8 bit used
	{ 7,  3,  2, -1 }, // 00000010 -> 3/2, 7 bit used
	{ 7,  3,  2, -1 }, // 00000011 -> 3/2, 7 bit used
	{ 6,  3,  1, -1 }, // 00000100 -> 3/1, 6 bit used
	{ 6,  3,  1, -1 }, // 00000101 -> 3/1, 6 bit used
	{ 6,  3,  1, -1 }, // 00000110 -> 3/1, 6 bit used
	{ 6,  3,  1, -1 }, // 00000111 -> 3/1, 6 bit used
	{ 7,  1,  3, -1 }, // 00001000 -> 1/3, 7 bit used
	{ 7,  1,  3, -1 }, // 00001001 -> 1/3, 7 bit used
	{ 7,  0,  3, -1 }, // 00001010 -> 0/3, 7 bit used
	{ 7,  0,  3, -1 }, // 00001011 -> 0/3, 7 bit used
	{ 7,  3,  0, -1 }, // 00001100 -> 3/0, 7 bit used
	{ 7,  3,  0, -1 }, // 00001101 -> 3/0, 7 bit used
	{ 7,  2,  2, -1 }, // 00001110 -> 2/2, 7 bit used
	{ 7,  2,  2, -1 }, // 00001111 -> 2/2, 7 bit used
	{ 6,  1,  2, -1 }, // 00010000 -> 1/2, 6 bit used
	{ 6,  1,  2, -1 }, // 00010001 -> 1/2, 6 bit used
	{ 6,  1,  2, -1 }, // 00010010 -> 1/2, 6 bit used
	{ 6,  1,  2, -1 }, // 00010011 -> 1/2, 6 bit used
	{ 6,  2,  1, -1 }, // 00010100 -> 2/1, 6 bit used
	{ 6,  2,  1, -1 }, // 00010101 -> 2/1, 6 bit used
	{ 6,  2,  1, -1 }, // 00010110 -> 2/1, 6 bit used
	{ 6,  2,  1, -1 }, // 00010111 -> 2/1, 6 bit used
	{ 6,  0,  2, -1 }, // 00011000 -> 0/2, 6 bit used
	{ 6,  0,  2, -1 }, // 00011001 -> 0/2, 6 bit used
	{ 6,  0,  2, -1 }, // 00011010 -> 0/2, 6 bit used
	{ 6,  0,  2, -1 }, // 00011011 -> 0/2, 6 bit used
	{ 6,  2,  0, -1 }, // 00011100 -> 2/0, 6 bit used
	{ 6,  2,  0, -1 }, // 00011101 -> 2/0, 6 bit used
	{ 6,  2,  0, -1 }, // 00011110 -> 2/0, 6 bit used
	{ 6,  2,  0, -1 }, // 00011111 -> 2/0, 6 bit used
	{ 3,  1,  1, -1 }, // 00100000 -> 1/1, 3 bit used
	{ 3,  1,  1, -1 }, // 00100001 -> 1/1, 3 bit used
	{ 3,  1,  1, -1 }, // 00100010 -> 1/1, 3 bit used
	{ 3,  1,  1, -1 }, // 00100011 -> 1/1, 3 bit used
	{ 3,  1,  1, -1 }, // 00100100 -> 1/1, 3 bit used
	{ 3,  1,  1, -1 }, // 00100101 -> 1/1, 3 bit used
	{ 3,  1,  1, -1 }, // 00100110 -> 1/1, 3 bit used
	{ 3,  1,  1, -1 }, // 00100111 -> 1/1, 3 bit used
	{ 3,  1,  1, -1 }, // 00101000 -> 1/1, 3 bit used
	{ 3,  1,  1, -1 }, // 00101001 -> 1/1, 3 bit used
	{ 3,  1,  1, -1 }, // 00101010 -> 1/1, 3 bit used
	{ 3,  1,  1, -1 }, // 00101011 -> 1/1, 3 bit used
	{ 3,  1,  1, -1 }, // 00101100 -> 1/1, 3 bit used
	{ 3,  1,  1, -1 }, // 00101101 -> 1/1, 3 bit used
	{ 3,  1,  1, -1 }, // 00101110 -> 1/1, 3 bit used
	{ 3,  1,  1, -1 }, // 00101111 -> 1/1, 3 bit used
	{ 3,  1,  1, -1 }, // 00110000 -> 1/1, 3 bit used
	{ 3,  1,  1, -1 }, // 00110001 -> 1/1, 3 bit used
	{ 3,  1,  1, -1 }, // 00110010 -> 1/1, 3 bit used
	{ 3,  1,  1, -1 }, // 00110011 -> 1/1, 3 bit used
	{ 3,  1,  1, -1 }, // 00110100 -> 1/1, 3 bit used
	{ 3,  1,  1, -1 }, // 00110101 -> 1/1, 3 bit used
	{ 3,  1,  1, -1 }, // 00110110 -> 1/1, 3 bit used
	{ 3,  1,  1, -1 }, // 00110111 -> 1/1, 3 bit used
	{ 3,  1,  1, -1 }, // 00111000 -> 1/1, 3 bit used
	{ 3,  1,  1, -1 }, // 00111001 -> 1/1, 3 bit used
	{ 3,  1,  1, -1 }, // 00111010 -> 1/1, 3 bit used
	{ 3,  1,  1, -1 }, // 00111011 -> 1/1, 3 bit used
	{ 3,  1,  1, -1 }, // 00111100 -> 1/1, 3 bit used
	{ 3,  1,  1, -1 }, // 00111101 -> 1/1, 3 bit used
	{ 3,  1,  1, -1 }, // 00111110 -> 1/1, 3 bit used
	{ 3,  1,  1, -1 }, // 00111111 -> 1/1, 3 bit used
	{ 3,  0,  1, -1 }, // 01000000 -> 0/1, 3 bit used
	{ 3,  0,  1, -1 }, // 01000001 -> 0/1, 3 bit used
	{ 3,  0,  1, -1 }, // 01000010 -> 0/1, 3 bit used
	{ 3,  0,  1, -1 }, // 01000011 -> 0/1, 3 bit used
	{ 3,  0,  1, -1 }, // 01000100 -> 0/1, 3 bit used
	{ 3,  0,  1, -1 }, // 01000101 -> 0/1, 3 bit used
	{ 3,  0,  1, -1 }, // 01000110 -> 0/1, 3 bit used
	{ 3,  0,  1, -1 }, // 01000111 -> 0/1, 3 bit used
	{ 3,  0,  1, -1 }, // 01001000 -> 0/1, 3 bit used
	{ 3,  0,  1, -1 }, // 01001001 -> 0/1, 3 bit used
	{ 3,  0,  1, -1 }, // 01001010 -> 0/1, 3 bit used
	{ 3,  0,  1, -1 }, // 01001011 -> 0/1, 3 bit used
	{ 3,  0,  1, -1 }, // 01001100 -> 0/1, 3 bit used
	{ 3,  0,  1, -1 }, // 01001101 -> 0/1, 3 bit used
	{ 3,  0,  1, -1 }, // 01001110 -> 0/1, 3 bit used
	{ 3,  0,  1, -1 }, // 01001111 -> 0/1, 3 bit used
	{ 3,  0,  1, -1 }, // 01010000 -> 0/1, 3 bit used
	{ 3,  0,  1, -1 }, // 01010001 -> 0/1, 3 bit used
	{ 3,  0,  1, -1 }, // 01010010 -> 0/1, 3 bit used
	{ 3,  0,  1, -1 }, // 01010011 -> 0/1, 3 bit used
	{ 3,  0,  1, -1 }, // 01010100 -> 0/1, 3 bit used
	{ 3,  0,  1, -1 }, // 01010101 -> 0/1, 3 bit used
	{ 3,  0,  1, -1 }, // 01010110 -> 0/1, 3 bit used
	{ 3,  0,  1, -1 }, // 01010111 -> 0/1, 3 bit used
	{ 3,  0,  1, -1 }, // 01011000 -> 0/1, 3 bit used
	{ 3,  0,  1, -1 }, // 01011001 -> 0/1, 3 bit used
	{ 3,  0,  1, -1 }, // 01011010 -> 0/1, 3 bit used
	{ 3,  0,  1, -1 }, // 01011011 -> 0/1, 3 bit used
	{ 3,  0,  1, -1 }, // 01011100 -> 0/1, 3 bit used
	{ 3,  0,  1, -1 }, // 01011101 -> 0/1, 3 bit used
	{ 3,  0,  1, -1 }, // 01011110 -> 0/1, 3 bit used
	{ 3,  0,  1, -1 }, // 01011111 -> 0/1, 3 bit used
	{ 3,  1,  0, -1 }, // 01100000 -> 1/0, 3 bit used
	{ 3,  1,  0, -1 }, // 01100001 -> 1/0, 3 bit used
	{ 3,  1,  0, -1 }, // 01100010 -> 1/0, 3 bit used
	{ 3,  1,  0, -1 }, // 01100011 -> 1/0, 3 bit used
	{ 3,  1,  0, -1 }, // 01100100 -> 1/0, 3 bit used
	{ 3,  1,  0, -1 }, // 01100101 -> 1/0, 3 bit used
	{ 3,  1,  0, -1 }, // 01100110 -> 1/0, 3 bit used
	{ 3,  1,  0, -1 }, // 01100111 -> 1/0, 3 bit used
	{ 3,  1,  0, -1 }, // 01101000 -> 1/0, 3 bit used
	{ 3,  1,  0, -1 }, // 01101001 -> 1/0, 3 bit used
	{ 3,  1,  0, -1 }, // 01101010 -> 1/0, 3 bit used
	{ 3,  1,  0, -1 }, // 01101011 -> 1/0, 3 bit used
	{ 3,  1,  0, -1 }, // 01101100 -> 1/0, 3 bit used
	{ 3,  1,  0, -1 }, // 01101101 -> 1/0, 3 bit used
	{ 3,  1,  0, -1 }, // 01101110 -> 1/0, 3 bit used
	{ 3,  1,  0, -1 }, // 01101111 -> 1/0, 3 bit used
	{ 3,  1,  0, -1 }, // 01110000 -> 1/0, 3 bit used
	{ 3,  1,  0, -1 }, // 01110001 -> 1/0, 3 bit used
	{ 3,  1,  0, -1 }, // 01110010 -> 1/0, 3 bit used
	{ 3,  1,  0, -1 }, // 01110011 -> 1/0, 3 bit used
	{ 3,  1,  0, -1 }, // 01110100 -> 1/0, 3 bit used
	{ 3,  1,  0, -1 }, // 01110101 -> 1/0, 3 bit used
	{ 3,  1,  0, -1 }, // 01110110 -> 1/0, 3 bit used
	{ 3,  1,  0, -1 }, // 01110111 -> 1/0, 3 bit used
	{ 3,  1,  0, -1 }, // 01111000 -> 1/0, 3 bit used
	{ 3,  1,  0, -1 }, // 01111001 -> 1/0, 3 bit used
	{ 3,  1,  0, -1 }, // 01111010 -> 1/0, 3 bit used
	{ 3,  1,  0, -1 }, // 01111011 -> 1/0, 3 bit used
	{ 3,  1,  0, -1 }, // 01111100 -> 1/0, 3 bit used
	{ 3,  1,  0, -1 }, // 01111101 -> 1/0, 3 bit used
	{ 3,  1,  0, -1 }, // 01111110 -> 1/0, 3 bit used
	{ 3,  1,  0, -1 }, // 01111111 -> 1/0, 3 bit used
	{ 1,  0,  0, -1 }, // 10000000 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 10000001 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 10000010 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 10000011 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 10000100 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 10000101 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 10000110 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 10000111 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 10001000 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 10001001 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 10001010 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 10001011 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 10001100 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 10001101 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 10001110 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 10001111 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 10010000 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 10010001 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 10010010 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 10010011 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 10010100 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 10010101 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 10010110 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 10010111 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 10011000 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 10011001 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 10011010 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 10011011 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 10011100 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 10011101 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 10011110 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 10011111 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 10100000 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 10100001 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 10100010 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 10100011 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 10100100 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 10100101 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 10100110 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 10100111 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 10101000 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 10101001 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 10101010 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 10101011 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 10101100 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 10101101 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 10101110 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 10101111 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 10110000 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 10110001 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 10110010 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 10110011 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 10110100 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 10110101 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 10110110 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 10110111 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 10111000 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 10111001 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 10111010 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 10111011 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 10111100 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 10111101 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 10111110 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 10111111 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 11000000 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 11000001 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 11000010 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 11000011 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 11000100 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 11000101 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 11000110 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 11000111 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 11001000 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 11001001 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 11001010 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 11001011 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 11001100 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 11001101 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 11001110 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 11001111 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 11010000 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 11010001 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 11010010 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 11010011 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 11010100 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 11010101 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 11010110 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 11010111 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 11011000 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 11011001 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 11011010 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 11011011 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 11011100 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 11011101 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 11011110 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 11011111 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 11100000 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 11100001 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 11100010 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 11100011 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 11100100 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 11100101 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 11100110 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 11100111 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 11101000 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 11101001 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 11101010 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 11101011 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 11101100 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 11101101 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 11101110 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 11101111 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 11110000 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 11110001 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 11110010 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 11110011 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 11110100 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 11110101 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 11110110 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 11110111 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 11111000 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 11111001 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 11111010 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 11111011 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 11111100 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 11111101 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 11111110 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }  // 11111111 -> 0/0, 1 bit used
};
// big values conversion table #5, total size: 256, ext tables: 0
static huffman_conv_set htab5_dec[ 1 ] = {
	{ htab5_dec_start, 8 }  // start table
};

/* -----------------------------------------------
	big values conversion table 6
	----------------------------------------------- */
static huffman_conv htab6_dec_start[ 128 ] = {
	{ 7,  3,  3, -1 }, // 0000000 -> 3/3, 7 bit used
	{ 7,  0,  3, -1 }, // 0000001 -> 0/3, 7 bit used
	{ 6,  2,  3, -1 }, // 0000010 -> 2/3, 6 bit used
	{ 6,  2,  3, -1 }, // 0000011 -> 2/3, 6 bit used
	{ 6,  3,  2, -1 }, // 0000100 -> 3/2, 6 bit used
	{ 6,  3,  2, -1 }, // 0000101 -> 3/2, 6 bit used
	{ 6,  3,  0, -1 }, // 0000110 -> 3/0, 6 bit used
	{ 6,  3,  0, -1 }, // 0000111 -> 3/0, 6 bit used
	{ 5,  1,  3, -1 }, // 0001000 -> 1/3, 5 bit used
	{ 5,  1,  3, -1 }, // 0001001 -> 1/3, 5 bit used
	{ 5,  1,  3, -1 }, // 0001010 -> 1/3, 5 bit used
	{ 5,  1,  3, -1 }, // 0001011 -> 1/3, 5 bit used
	{ 5,  3,  1, -1 }, // 0001100 -> 3/1, 5 bit used
	{ 5,  3,  1, -1 }, // 0001101 -> 3/1, 5 bit used
	{ 5,  3,  1, -1 }, // 0001110 -> 3/1, 5 bit used
	{ 5,  3,  1, -1 }, // 0001111 -> 3/1, 5 bit used
	{ 5,  2,  2, -1 }, // 0010000 -> 2/2, 5 bit used
	{ 5,  2,  2, -1 }, // 0010001 -> 2/2, 5 bit used
	{ 5,  2,  2, -1 }, // 0010010 -> 2/2, 5 bit used
	{ 5,  2,  2, -1 }, // 0010011 -> 2/2, 5 bit used
	{ 5,  0,  2, -1 }, // 0010100 -> 0/2, 5 bit used
	{ 5,  0,  2, -1 }, // 0010101 -> 0/2, 5 bit used
	{ 5,  0,  2, -1 }, // 0010110 -> 0/2, 5 bit used
	{ 5,  0,  2, -1 }, // 0010111 -> 0/2, 5 bit used
	{ 4,  1,  2, -1 }, // 0011000 -> 1/2, 4 bit used
	{ 4,  1,  2, -1 }, // 0011001 -> 1/2, 4 bit used
	{ 4,  1,  2, -1 }, // 0011010 -> 1/2, 4 bit used
	{ 4,  1,  2, -1 }, // 0011011 -> 1/2, 4 bit used
	{ 4,  1,  2, -1 }, // 0011100 -> 1/2, 4 bit used
	{ 4,  1,  2, -1 }, // 0011101 -> 1/2, 4 bit used
	{ 4,  1,  2, -1 }, // 0011110 -> 1/2, 4 bit used
	{ 4,  1,  2, -1 }, // 0011111 -> 1/2, 4 bit used
	{ 4,  2,  1, -1 }, // 0100000 -> 2/1, 4 bit used
	{ 4,  2,  1, -1 }, // 0100001 -> 2/1, 4 bit used
	{ 4,  2,  1, -1 }, // 0100010 -> 2/1, 4 bit used
	{ 4,  2,  1, -1 }, // 0100011 -> 2/1, 4 bit used
	{ 4,  2,  1, -1 }, // 0100100 -> 2/1, 4 bit used
	{ 4,  2,  1, -1 }, // 0100101 -> 2/1, 4 bit used
	{ 4,  2,  1, -1 }, // 0100110 -> 2/1, 4 bit used
	{ 4,  2,  1, -1 }, // 0100111 -> 2/1, 4 bit used
	{ 4,  2,  0, -1 }, // 0101000 -> 2/0, 4 bit used
	{ 4,  2,  0, -1 }, // 0101001 -> 2/0, 4 bit used
	{ 4,  2,  0, -1 }, // 0101010 -> 2/0, 4 bit used
	{ 4,  2,  0, -1 }, // 0101011 -> 2/0, 4 bit used
	{ 4,  2,  0, -1 }, // 0101100 -> 2/0, 4 bit used
	{ 4,  2,  0, -1 }, // 0101101 -> 2/0, 4 bit used
	{ 4,  2,  0, -1 }, // 0101110 -> 2/0, 4 bit used
	{ 4,  2,  0, -1 }, // 0101111 -> 2/0, 4 bit used
	{ 3,  0,  1, -1 }, // 0110000 -> 0/1, 3 bit used
	{ 3,  0,  1, -1 }, // 0110001 -> 0/1, 3 bit used
	{ 3,  0,  1, -1 }, // 0110010 -> 0/1, 3 bit used
	{ 3,  0,  1, -1 }, // 0110011 -> 0/1, 3 bit used
	{ 3,  0,  1, -1 }, // 0110100 -> 0/1, 3 bit used
	{ 3,  0,  1, -1 }, // 0110101 -> 0/1, 3 bit used
	{ 3,  0,  1, -1 }, // 0110110 -> 0/1, 3 bit used
	{ 3,  0,  1, -1 }, // 0110111 -> 0/1, 3 bit used
	{ 3,  0,  1, -1 }, // 0111000 -> 0/1, 3 bit used
	{ 3,  0,  1, -1 }, // 0111001 -> 0/1, 3 bit used
	{ 3,  0,  1, -1 }, // 0111010 -> 0/1, 3 bit used
	{ 3,  0,  1, -1 }, // 0111011 -> 0/1, 3 bit used
	{ 3,  0,  1, -1 }, // 0111100 -> 0/1, 3 bit used
	{ 3,  0,  1, -1 }, // 0111101 -> 0/1, 3 bit used
	{ 3,  0,  1, -1 }, // 0111110 -> 0/1, 3 bit used
	{ 3,  0,  1, -1 }, // 0111111 -> 0/1, 3 bit used
	{ 2,  1,  1, -1 }, // 1000000 -> 1/1, 2 bit used
	{ 2,  1,  1, -1 }, // 1000001 -> 1/1, 2 bit used
	{ 2,  1,  1, -1 }, // 1000010 -> 1/1, 2 bit used
	{ 2,  1,  1, -1 }, // 1000011 -> 1/1, 2 bit used
	{ 2,  1,  1, -1 }, // 1000100 -> 1/1, 2 bit used
	{ 2,  1,  1, -1 }, // 1000101 -> 1/1, 2 bit used
	{ 2,  1,  1, -1 }, // 1000110 -> 1/1, 2 bit used
	{ 2,  1,  1, -1 }, // 1000111 -> 1/1, 2 bit used
	{ 2,  1,  1, -1 }, // 1001000 -> 1/1, 2 bit used
	{ 2,  1,  1, -1 }, // 1001001 -> 1/1, 2 bit used
	{ 2,  1,  1, -1 }, // 1001010 -> 1/1, 2 bit used
	{ 2,  1,  1, -1 }, // 1001011 -> 1/1, 2 bit used
	{ 2,  1,  1, -1 }, // 1001100 -> 1/1, 2 bit used
	{ 2,  1,  1, -1 }, // 1001101 -> 1/1, 2 bit used
	{ 2,  1,  1, -1 }, // 1001110 -> 1/1, 2 bit used
	{ 2,  1,  1, -1 }, // 1001111 -> 1/1, 2 bit used
	{ 2,  1,  1, -1 }, // 1010000 -> 1/1, 2 bit used
	{ 2,  1,  1, -1 }, // 1010001 -> 1/1, 2 bit used
	{ 2,  1,  1, -1 }, // 1010010 -> 1/1, 2 bit used
	{ 2,  1,  1, -1 }, // 1010011 -> 1/1, 2 bit used
	{ 2,  1,  1, -1 }, // 1010100 -> 1/1, 2 bit used
	{ 2,  1,  1, -1 }, // 1010101 -> 1/1, 2 bit used
	{ 2,  1,  1, -1 }, // 1010110 -> 1/1, 2 bit used
	{ 2,  1,  1, -1 }, // 1010111 -> 1/1, 2 bit used
	{ 2,  1,  1, -1 }, // 1011000 -> 1/1, 2 bit used
	{ 2,  1,  1, -1 }, // 1011001 -> 1/1, 2 bit used
	{ 2,  1,  1, -1 }, // 1011010 -> 1/1, 2 bit used
	{ 2,  1,  1, -1 }, // 1011011 -> 1/1, 2 bit used
	{ 2,  1,  1, -1 }, // 1011100 -> 1/1, 2 bit used
	{ 2,  1,  1, -1 }, // 1011101 -> 1/1, 2 bit used
	{ 2,  1,  1, -1 }, // 1011110 -> 1/1, 2 bit used
	{ 2,  1,  1, -1 }, // 1011111 -> 1/1, 2 bit used
	{ 3,  1,  0, -1 }, // 1100000 -> 1/0, 3 bit used
	{ 3,  1,  0, -1 }, // 1100001 -> 1/0, 3 bit used
	{ 3,  1,  0, -1 }, // 1100010 -> 1/0, 3 bit used
	{ 3,  1,  0, -1 }, // 1100011 -> 1/0, 3 bit used
	{ 3,  1,  0, -1 }, // 1100100 -> 1/0, 3 bit used
	{ 3,  1,  0, -1 }, // 1100101 -> 1/0, 3 bit used
	{ 3,  1,  0, -1 }, // 1100110 -> 1/0, 3 bit used
	{ 3,  1,  0, -1 }, // 1100111 -> 1/0, 3 bit used
	{ 3,  1,  0, -1 }, // 1101000 -> 1/0, 3 bit used
	{ 3,  1,  0, -1 }, // 1101001 -> 1/0, 3 bit used
	{ 3,  1,  0, -1 }, // 1101010 -> 1/0, 3 bit used
	{ 3,  1,  0, -1 }, // 1101011 -> 1/0, 3 bit used
	{ 3,  1,  0, -1 }, // 1101100 -> 1/0, 3 bit used
	{ 3,  1,  0, -1 }, // 1101101 -> 1/0, 3 bit used
	{ 3,  1,  0, -1 }, // 1101110 -> 1/0, 3 bit used
	{ 3,  1,  0, -1 }, // 1101111 -> 1/0, 3 bit used
	{ 3,  0,  0, -1 }, // 1110000 -> 0/0, 3 bit used
	{ 3,  0,  0, -1 }, // 1110001 -> 0/0, 3 bit used
	{ 3,  0,  0, -1 }, // 1110010 -> 0/0, 3 bit used
	{ 3,  0,  0, -1 }, // 1110011 -> 0/0, 3 bit used
	{ 3,  0,  0, -1 }, // 1110100 -> 0/0, 3 bit used
	{ 3,  0,  0, -1 }, // 1110101 -> 0/0, 3 bit used
	{ 3,  0,  0, -1 }, // 1110110 -> 0/0, 3 bit used
	{ 3,  0,  0, -1 }, // 1110111 -> 0/0, 3 bit used
	{ 3,  0,  0, -1 }, // 1111000 -> 0/0, 3 bit used
	{ 3,  0,  0, -1 }, // 1111001 -> 0/0, 3 bit used
	{ 3,  0,  0, -1 }, // 1111010 -> 0/0, 3 bit used
	{ 3,  0,  0, -1 }, // 1111011 -> 0/0, 3 bit used
	{ 3,  0,  0, -1 }, // 1111100 -> 0/0, 3 bit used
	{ 3,  0,  0, -1 }, // 1111101 -> 0/0, 3 bit used
	{ 3,  0,  0, -1 }, // 1111110 -> 0/0, 3 bit used
	{ 3,  0,  0, -1 }  // 1111111 -> 0/0, 3 bit used
};
// big values conversion table #6, total size: 128, ext tables: 0
static huffman_conv_set htab6_dec[ 1 ] = {
	{ htab6_dec_start, 7 }  // start table
};

/* -----------------------------------------------
	big values conversion table 7
	----------------------------------------------- */
static huffman_conv htab7_dec_start[ 256 ] = {
	{ 8, -1, -1,  1 }, // 00000000 -> extension table #1
	{ 8, -1, -1,  2 }, // 00000001 -> extension table #2
	{ 8, -1, -1,  3 }, // 00000010 -> extension table #3
	{ 8,  1,  5, -1 }, // 00000011 -> 1/5, 8 bit used
	{ 8,  5,  1, -1 }, // 00000100 -> 5/1, 8 bit used
	{ 8, -1, -1,  4 }, // 00000101 -> extension table #4
	{ 8,  5,  0, -1 }, // 00000110 -> 5/0, 8 bit used
	{ 8, -1, -1,  5 }, // 00000111 -> extension table #5
	{ 8,  2,  4, -1 }, // 00001000 -> 2/4, 8 bit used
	{ 8,  4,  2, -1 }, // 00001001 -> 4/2, 8 bit used
	{ 7,  1,  4, -1 }, // 00001010 -> 1/4, 7 bit used
	{ 7,  1,  4, -1 }, // 00001011 -> 1/4, 7 bit used
	{ 7,  4,  1, -1 }, // 00001100 -> 4/1, 7 bit used
	{ 7,  4,  1, -1 }, // 00001101 -> 4/1, 7 bit used
	{ 7,  4,  0, -1 }, // 00001110 -> 4/0, 7 bit used
	{ 7,  4,  0, -1 }, // 00001111 -> 4/0, 7 bit used
	{ 8,  0,  4, -1 }, // 00010000 -> 0/4, 8 bit used
	{ 8,  2,  3, -1 }, // 00010001 -> 2/3, 8 bit used
	{ 8,  3,  2, -1 }, // 00010010 -> 3/2, 8 bit used
	{ 8,  0,  3, -1 }, // 00010011 -> 0/3, 8 bit used
	{ 7,  1,  3, -1 }, // 00010100 -> 1/3, 7 bit used
	{ 7,  1,  3, -1 }, // 00010101 -> 1/3, 7 bit used
	{ 7,  3,  1, -1 }, // 00010110 -> 3/1, 7 bit used
	{ 7,  3,  1, -1 }, // 00010111 -> 3/1, 7 bit used
	{ 7,  3,  0, -1 }, // 00011000 -> 3/0, 7 bit used
	{ 7,  3,  0, -1 }, // 00011001 -> 3/0, 7 bit used
	{ 7,  2,  2, -1 }, // 00011010 -> 2/2, 7 bit used
	{ 7,  2,  2, -1 }, // 00011011 -> 2/2, 7 bit used
	{ 6,  1,  2, -1 }, // 00011100 -> 1/2, 6 bit used
	{ 6,  1,  2, -1 }, // 00011101 -> 1/2, 6 bit used
	{ 6,  1,  2, -1 }, // 00011110 -> 1/2, 6 bit used
	{ 6,  1,  2, -1 }, // 00011111 -> 1/2, 6 bit used
	{ 5,  2,  1, -1 }, // 00100000 -> 2/1, 5 bit used
	{ 5,  2,  1, -1 }, // 00100001 -> 2/1, 5 bit used
	{ 5,  2,  1, -1 }, // 00100010 -> 2/1, 5 bit used
	{ 5,  2,  1, -1 }, // 00100011 -> 2/1, 5 bit used
	{ 5,  2,  1, -1 }, // 00100100 -> 2/1, 5 bit used
	{ 5,  2,  1, -1 }, // 00100101 -> 2/1, 5 bit used
	{ 5,  2,  1, -1 }, // 00100110 -> 2/1, 5 bit used
	{ 5,  2,  1, -1 }, // 00100111 -> 2/1, 5 bit used
	{ 6,  0,  2, -1 }, // 00101000 -> 0/2, 6 bit used
	{ 6,  0,  2, -1 }, // 00101001 -> 0/2, 6 bit used
	{ 6,  0,  2, -1 }, // 00101010 -> 0/2, 6 bit used
	{ 6,  0,  2, -1 }, // 00101011 -> 0/2, 6 bit used
	{ 6,  2,  0, -1 }, // 00101100 -> 2/0, 6 bit used
	{ 6,  2,  0, -1 }, // 00101101 -> 2/0, 6 bit used
	{ 6,  2,  0, -1 }, // 00101110 -> 2/0, 6 bit used
	{ 6,  2,  0, -1 }, // 00101111 -> 2/0, 6 bit used
	{ 4,  1,  1, -1 }, // 00110000 -> 1/1, 4 bit used
	{ 4,  1,  1, -1 }, // 00110001 -> 1/1, 4 bit used
	{ 4,  1,  1, -1 }, // 00110010 -> 1/1, 4 bit used
	{ 4,  1,  1, -1 }, // 00110011 -> 1/1, 4 bit used
	{ 4,  1,  1, -1 }, // 00110100 -> 1/1, 4 bit used
	{ 4,  1,  1, -1 }, // 00110101 -> 1/1, 4 bit used
	{ 4,  1,  1, -1 }, // 00110110 -> 1/1, 4 bit used
	{ 4,  1,  1, -1 }, // 00110111 -> 1/1, 4 bit used
	{ 4,  1,  1, -1 }, // 00111000 -> 1/1, 4 bit used
	{ 4,  1,  1, -1 }, // 00111001 -> 1/1, 4 bit used
	{ 4,  1,  1, -1 }, // 00111010 -> 1/1, 4 bit used
	{ 4,  1,  1, -1 }, // 00111011 -> 1/1, 4 bit used
	{ 4,  1,  1, -1 }, // 00111100 -> 1/1, 4 bit used
	{ 4,  1,  1, -1 }, // 00111101 -> 1/1, 4 bit used
	{ 4,  1,  1, -1 }, // 00111110 -> 1/1, 4 bit used
	{ 4,  1,  1, -1 }, // 00111111 -> 1/1, 4 bit used
	{ 3,  0,  1, -1 }, // 01000000 -> 0/1, 3 bit used
	{ 3,  0,  1, -1 }, // 01000001 -> 0/1, 3 bit used
	{ 3,  0,  1, -1 }, // 01000010 -> 0/1, 3 bit used
	{ 3,  0,  1, -1 }, // 01000011 -> 0/1, 3 bit used
	{ 3,  0,  1, -1 }, // 01000100 -> 0/1, 3 bit used
	{ 3,  0,  1, -1 }, // 01000101 -> 0/1, 3 bit used
	{ 3,  0,  1, -1 }, // 01000110 -> 0/1, 3 bit used
	{ 3,  0,  1, -1 }, // 01000111 -> 0/1, 3 bit used
	{ 3,  0,  1, -1 }, // 01001000 -> 0/1, 3 bit used
	{ 3,  0,  1, -1 }, // 01001001 -> 0/1, 3 bit used
	{ 3,  0,  1, -1 }, // 01001010 -> 0/1, 3 bit used
	{ 3,  0,  1, -1 }, // 01001011 -> 0/1, 3 bit used
	{ 3,  0,  1, -1 }, // 01001100 -> 0/1, 3 bit used
	{ 3,  0,  1, -1 }, // 01001101 -> 0/1, 3 bit used
	{ 3,  0,  1, -1 }, // 01001110 -> 0/1, 3 bit used
	{ 3,  0,  1, -1 }, // 01001111 -> 0/1, 3 bit used
	{ 3,  0,  1, -1 }, // 01010000 -> 0/1, 3 bit used
	{ 3,  0,  1, -1 }, // 01010001 -> 0/1, 3 bit used
	{ 3,  0,  1, -1 }, // 01010010 -> 0/1, 3 bit used
	{ 3,  0,  1, -1 }, // 01010011 -> 0/1, 3 bit used
	{ 3,  0,  1, -1 }, // 01010100 -> 0/1, 3 bit used
	{ 3,  0,  1, -1 }, // 01010101 -> 0/1, 3 bit used
	{ 3,  0,  1, -1 }, // 01010110 -> 0/1, 3 bit used
	{ 3,  0,  1, -1 }, // 01010111 -> 0/1, 3 bit used
	{ 3,  0,  1, -1 }, // 01011000 -> 0/1, 3 bit used
	{ 3,  0,  1, -1 }, // 01011001 -> 0/1, 3 bit used
	{ 3,  0,  1, -1 }, // 01011010 -> 0/1, 3 bit used
	{ 3,  0,  1, -1 }, // 01011011 -> 0/1, 3 bit used
	{ 3,  0,  1, -1 }, // 01011100 -> 0/1, 3 bit used
	{ 3,  0,  1, -1 }, // 01011101 -> 0/1, 3 bit used
	{ 3,  0,  1, -1 }, // 01011110 -> 0/1, 3 bit used
	{ 3,  0,  1, -1 }, // 01011111 -> 0/1, 3 bit used
	{ 3,  1,  0, -1 }, // 01100000 -> 1/0, 3 bit used
	{ 3,  1,  0, -1 }, // 01100001 -> 1/0, 3 bit used
	{ 3,  1,  0, -1 }, // 01100010 -> 1/0, 3 bit used
	{ 3,  1,  0, -1 }, // 01100011 -> 1/0, 3 bit used
	{ 3,  1,  0, -1 }, // 01100100 -> 1/0, 3 bit used
	{ 3,  1,  0, -1 }, // 01100101 -> 1/0, 3 bit used
	{ 3,  1,  0, -1 }, // 01100110 -> 1/0, 3 bit used
	{ 3,  1,  0, -1 }, // 01100111 -> 1/0, 3 bit used
	{ 3,  1,  0, -1 }, // 01101000 -> 1/0, 3 bit used
	{ 3,  1,  0, -1 }, // 01101001 -> 1/0, 3 bit used
	{ 3,  1,  0, -1 }, // 01101010 -> 1/0, 3 bit used
	{ 3,  1,  0, -1 }, // 01101011 -> 1/0, 3 bit used
	{ 3,  1,  0, -1 }, // 01101100 -> 1/0, 3 bit used
	{ 3,  1,  0, -1 }, // 01101101 -> 1/0, 3 bit used
	{ 3,  1,  0, -1 }, // 01101110 -> 1/0, 3 bit used
	{ 3,  1,  0, -1 }, // 01101111 -> 1/0, 3 bit used
	{ 3,  1,  0, -1 }, // 01110000 -> 1/0, 3 bit used
	{ 3,  1,  0, -1 }, // 01110001 -> 1/0, 3 bit used
	{ 3,  1,  0, -1 }, // 01110010 -> 1/0, 3 bit used
	{ 3,  1,  0, -1 }, // 01110011 -> 1/0, 3 bit used
	{ 3,  1,  0, -1 }, // 01110100 -> 1/0, 3 bit used
	{ 3,  1,  0, -1 }, // 01110101 -> 1/0, 3 bit used
	{ 3,  1,  0, -1 }, // 01110110 -> 1/0, 3 bit used
	{ 3,  1,  0, -1 }, // 01110111 -> 1/0, 3 bit used
	{ 3,  1,  0, -1 }, // 01111000 -> 1/0, 3 bit used
	{ 3,  1,  0, -1 }, // 01111001 -> 1/0, 3 bit used
	{ 3,  1,  0, -1 }, // 01111010 -> 1/0, 3 bit used
	{ 3,  1,  0, -1 }, // 01111011 -> 1/0, 3 bit used
	{ 3,  1,  0, -1 }, // 01111100 -> 1/0, 3 bit used
	{ 3,  1,  0, -1 }, // 01111101 -> 1/0, 3 bit used
	{ 3,  1,  0, -1 }, // 01111110 -> 1/0, 3 bit used
	{ 3,  1,  0, -1 }, // 01111111 -> 1/0, 3 bit used
	{ 1,  0,  0, -1 }, // 10000000 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 10000001 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 10000010 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 10000011 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 10000100 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 10000101 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 10000110 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 10000111 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 10001000 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 10001001 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 10001010 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 10001011 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 10001100 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 10001101 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 10001110 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 10001111 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 10010000 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 10010001 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 10010010 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 10010011 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 10010100 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 10010101 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 10010110 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 10010111 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 10011000 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 10011001 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 10011010 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 10011011 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 10011100 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 10011101 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 10011110 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 10011111 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 10100000 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 10100001 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 10100010 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 10100011 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 10100100 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 10100101 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 10100110 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 10100111 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 10101000 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 10101001 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 10101010 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 10101011 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 10101100 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 10101101 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 10101110 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 10101111 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 10110000 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 10110001 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 10110010 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 10110011 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 10110100 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 10110101 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 10110110 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 10110111 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 10111000 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 10111001 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 10111010 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 10111011 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 10111100 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 10111101 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 10111110 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 10111111 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 11000000 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 11000001 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 11000010 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 11000011 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 11000100 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 11000101 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 11000110 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 11000111 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 11001000 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 11001001 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 11001010 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 11001011 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 11001100 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 11001101 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 11001110 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 11001111 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 11010000 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 11010001 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 11010010 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 11010011 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 11010100 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 11010101 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 11010110 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 11010111 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 11011000 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 11011001 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 11011010 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 11011011 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 11011100 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 11011101 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 11011110 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 11011111 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 11100000 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 11100001 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 11100010 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 11100011 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 11100100 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 11100101 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 11100110 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 11100111 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 11101000 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 11101001 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 11101010 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 11101011 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 11101100 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 11101101 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 11101110 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 11101111 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 11110000 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 11110001 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 11110010 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 11110011 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 11110100 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 11110101 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 11110110 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 11110111 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 11111000 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 11111001 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 11111010 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 11111011 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 11111100 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 11111101 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 11111110 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }  // 11111111 -> 0/0, 1 bit used
};
// extension table 1, prefix 00000000
static huffman_conv htab7_dec_ext1[ 4 ] = {
	{ 2,  5,  5, -1 }, // 00 -> 5/5, 2 bit used
	{ 2,  4,  5, -1 }, // 01 -> 4/5, 2 bit used
	{ 2,  5,  4, -1 }, // 10 -> 5/4, 2 bit used
	{ 2,  5,  3, -1 }  // 11 -> 5/3, 2 bit used
};
// extension table 2, prefix 00000001
static huffman_conv htab7_dec_ext2[ 2 ] = {
	{ 1,  3,  5, -1 }, // 0 -> 3/5, 1 bit used
	{ 1,  4,  4, -1 }  // 1 -> 4/4, 1 bit used
};
// extension table 3, prefix 00000010
static huffman_conv htab7_dec_ext3[ 2 ] = {
	{ 1,  2,  5, -1 }, // 0 -> 2/5, 1 bit used
	{ 1,  5,  2, -1 }  // 1 -> 5/2, 1 bit used
};
// extension table 4, prefix 00000101
static huffman_conv htab7_dec_ext4[ 2 ] = {
	{ 1,  0,  5, -1 }, // 0 -> 0/5, 1 bit used
	{ 1,  3,  4, -1 }  // 1 -> 3/4, 1 bit used
};
// extension table 5, prefix 00000111
static huffman_conv htab7_dec_ext5[ 2 ] = {
	{ 1,  4,  3, -1 }, // 0 -> 4/3, 1 bit used
	{ 1,  3,  3, -1 }  // 1 -> 3/3, 1 bit used
};
// big values conversion table #7, total size: 268, ext tables: 5
static huffman_conv_set htab7_dec[ 6 ] = {
	{ htab7_dec_start, 8 }, // start table
	{ htab7_dec_ext1, 2 }, // ext table #1
	{ htab7_dec_ext2, 1 }, // ext table #2
	{ htab7_dec_ext3, 1 }, // ext table #3
	{ htab7_dec_ext4, 1 }, // ext table #4
	{ htab7_dec_ext5, 1 }  // ext table #5
};

/* -----------------------------------------------
	big values conversion table 8
	----------------------------------------------- */
static huffman_conv htab8_dec_start[ 256 ] = {
	{ 8, -1, -1,  1 }, // 00000000 -> extension table #1
	{ 8, -1, -1,  2 }, // 00000001 -> extension table #2
	{ 8, -1, -1,  3 }, // 00000010 -> extension table #3
	{ 8,  1,  5, -1 }, // 00000011 -> 1/5, 8 bit used
	{ 8,  5,  1, -1 }, // 00000100 -> 5/1, 8 bit used
	{ 8, -1, -1,  4 }, // 00000101 -> extension table #4
	{ 8, -1, -1,  5 }, // 00000110 -> extension table #5
	{ 8,  2,  4, -1 }, // 00000111 -> 2/4, 8 bit used
	{ 8,  4,  2, -1 }, // 00001000 -> 4/2, 8 bit used
	{ 8,  1,  4, -1 }, // 00001001 -> 1/4, 8 bit used
	{ 7,  4,  1, -1 }, // 00001010 -> 4/1, 7 bit used
	{ 7,  4,  1, -1 }, // 00001011 -> 4/1, 7 bit used
	{ 8,  0,  4, -1 }, // 00001100 -> 0/4, 8 bit used
	{ 8,  4,  0, -1 }, // 00001101 -> 4/0, 8 bit used
	{ 8,  2,  3, -1 }, // 00001110 -> 2/3, 8 bit used
	{ 8,  3,  2, -1 }, // 00001111 -> 3/2, 8 bit used
	{ 8,  1,  3, -1 }, // 00010000 -> 1/3, 8 bit used
	{ 8,  3,  1, -1 }, // 00010001 -> 3/1, 8 bit used
	{ 8,  0,  3, -1 }, // 00010010 -> 0/3, 8 bit used
	{ 8,  3,  0, -1 }, // 00010011 -> 3/0, 8 bit used
	{ 6,  2,  2, -1 }, // 00010100 -> 2/2, 6 bit used
	{ 6,  2,  2, -1 }, // 00010101 -> 2/2, 6 bit used
	{ 6,  2,  2, -1 }, // 00010110 -> 2/2, 6 bit used
	{ 6,  2,  2, -1 }, // 00010111 -> 2/2, 6 bit used
	{ 6,  0,  2, -1 }, // 00011000 -> 0/2, 6 bit used
	{ 6,  0,  2, -1 }, // 00011001 -> 0/2, 6 bit used
	{ 6,  0,  2, -1 }, // 00011010 -> 0/2, 6 bit used
	{ 6,  0,  2, -1 }, // 00011011 -> 0/2, 6 bit used
	{ 6,  2,  0, -1 }, // 00011100 -> 2/0, 6 bit used
	{ 6,  2,  0, -1 }, // 00011101 -> 2/0, 6 bit used
	{ 6,  2,  0, -1 }, // 00011110 -> 2/0, 6 bit used
	{ 6,  2,  0, -1 }, // 00011111 -> 2/0, 6 bit used
	{ 4,  1,  2, -1 }, // 00100000 -> 1/2, 4 bit used
	{ 4,  1,  2, -1 }, // 00100001 -> 1/2, 4 bit used
	{ 4,  1,  2, -1 }, // 00100010 -> 1/2, 4 bit used
	{ 4,  1,  2, -1 }, // 00100011 -> 1/2, 4 bit used
	{ 4,  1,  2, -1 }, // 00100100 -> 1/2, 4 bit used
	{ 4,  1,  2, -1 }, // 00100101 -> 1/2, 4 bit used
	{ 4,  1,  2, -1 }, // 00100110 -> 1/2, 4 bit used
	{ 4,  1,  2, -1 }, // 00100111 -> 1/2, 4 bit used
	{ 4,  1,  2, -1 }, // 00101000 -> 1/2, 4 bit used
	{ 4,  1,  2, -1 }, // 00101001 -> 1/2, 4 bit used
	{ 4,  1,  2, -1 }, // 00101010 -> 1/2, 4 bit used
	{ 4,  1,  2, -1 }, // 00101011 -> 1/2, 4 bit used
	{ 4,  1,  2, -1 }, // 00101100 -> 1/2, 4 bit used
	{ 4,  1,  2, -1 }, // 00101101 -> 1/2, 4 bit used
	{ 4,  1,  2, -1 }, // 00101110 -> 1/2, 4 bit used
	{ 4,  1,  2, -1 }, // 00101111 -> 1/2, 4 bit used
	{ 4,  2,  1, -1 }, // 00110000 -> 2/1, 4 bit used
	{ 4,  2,  1, -1 }, // 00110001 -> 2/1, 4 bit used
	{ 4,  2,  1, -1 }, // 00110010 -> 2/1, 4 bit used
	{ 4,  2,  1, -1 }, // 00110011 -> 2/1, 4 bit used
	{ 4,  2,  1, -1 }, // 00110100 -> 2/1, 4 bit used
	{ 4,  2,  1, -1 }, // 00110101 -> 2/1, 4 bit used
	{ 4,  2,  1, -1 }, // 00110110 -> 2/1, 4 bit used
	{ 4,  2,  1, -1 }, // 00110111 -> 2/1, 4 bit used
	{ 4,  2,  1, -1 }, // 00111000 -> 2/1, 4 bit used
	{ 4,  2,  1, -1 }, // 00111001 -> 2/1, 4 bit used
	{ 4,  2,  1, -1 }, // 00111010 -> 2/1, 4 bit used
	{ 4,  2,  1, -1 }, // 00111011 -> 2/1, 4 bit used
	{ 4,  2,  1, -1 }, // 00111100 -> 2/1, 4 bit used
	{ 4,  2,  1, -1 }, // 00111101 -> 2/1, 4 bit used
	{ 4,  2,  1, -1 }, // 00111110 -> 2/1, 4 bit used
	{ 4,  2,  1, -1 }, // 00111111 -> 2/1, 4 bit used
	{ 2,  1,  1, -1 }, // 01000000 -> 1/1, 2 bit used
	{ 2,  1,  1, -1 }, // 01000001 -> 1/1, 2 bit used
	{ 2,  1,  1, -1 }, // 01000010 -> 1/1, 2 bit used
	{ 2,  1,  1, -1 }, // 01000011 -> 1/1, 2 bit used
	{ 2,  1,  1, -1 }, // 01000100 -> 1/1, 2 bit used
	{ 2,  1,  1, -1 }, // 01000101 -> 1/1, 2 bit used
	{ 2,  1,  1, -1 }, // 01000110 -> 1/1, 2 bit used
	{ 2,  1,  1, -1 }, // 01000111 -> 1/1, 2 bit used
	{ 2,  1,  1, -1 }, // 01001000 -> 1/1, 2 bit used
	{ 2,  1,  1, -1 }, // 01001001 -> 1/1, 2 bit used
	{ 2,  1,  1, -1 }, // 01001010 -> 1/1, 2 bit used
	{ 2,  1,  1, -1 }, // 01001011 -> 1/1, 2 bit used
	{ 2,  1,  1, -1 }, // 01001100 -> 1/1, 2 bit used
	{ 2,  1,  1, -1 }, // 01001101 -> 1/1, 2 bit used
	{ 2,  1,  1, -1 }, // 01001110 -> 1/1, 2 bit used
	{ 2,  1,  1, -1 }, // 01001111 -> 1/1, 2 bit used
	{ 2,  1,  1, -1 }, // 01010000 -> 1/1, 2 bit used
	{ 2,  1,  1, -1 }, // 01010001 -> 1/1, 2 bit used
	{ 2,  1,  1, -1 }, // 01010010 -> 1/1, 2 bit used
	{ 2,  1,  1, -1 }, // 01010011 -> 1/1, 2 bit used
	{ 2,  1,  1, -1 }, // 01010100 -> 1/1, 2 bit used
	{ 2,  1,  1, -1 }, // 01010101 -> 1/1, 2 bit used
	{ 2,  1,  1, -1 }, // 01010110 -> 1/1, 2 bit used
	{ 2,  1,  1, -1 }, // 01010111 -> 1/1, 2 bit used
	{ 2,  1,  1, -1 }, // 01011000 -> 1/1, 2 bit used
	{ 2,  1,  1, -1 }, // 01011001 -> 1/1, 2 bit used
	{ 2,  1,  1, -1 }, // 01011010 -> 1/1, 2 bit used
	{ 2,  1,  1, -1 }, // 01011011 -> 1/1, 2 bit used
	{ 2,  1,  1, -1 }, // 01011100 -> 1/1, 2 bit used
	{ 2,  1,  1, -1 }, // 01011101 -> 1/1, 2 bit used
	{ 2,  1,  1, -1 }, // 01011110 -> 1/1, 2 bit used
	{ 2,  1,  1, -1 }, // 01011111 -> 1/1, 2 bit used
	{ 2,  1,  1, -1 }, // 01100000 -> 1/1, 2 bit used
	{ 2,  1,  1, -1 }, // 01100001 -> 1/1, 2 bit used
	{ 2,  1,  1, -1 }, // 01100010 -> 1/1, 2 bit used
	{ 2,  1,  1, -1 }, // 01100011 -> 1/1, 2 bit used
	{ 2,  1,  1, -1 }, // 01100100 -> 1/1, 2 bit used
	{ 2,  1,  1, -1 }, // 01100101 -> 1/1, 2 bit used
	{ 2,  1,  1, -1 }, // 01100110 -> 1/1, 2 bit used
	{ 2,  1,  1, -1 }, // 01100111 -> 1/1, 2 bit used
	{ 2,  1,  1, -1 }, // 01101000 -> 1/1, 2 bit used
	{ 2,  1,  1, -1 }, // 01101001 -> 1/1, 2 bit used
	{ 2,  1,  1, -1 }, // 01101010 -> 1/1, 2 bit used
	{ 2,  1,  1, -1 }, // 01101011 -> 1/1, 2 bit used
	{ 2,  1,  1, -1 }, // 01101100 -> 1/1, 2 bit used
	{ 2,  1,  1, -1 }, // 01101101 -> 1/1, 2 bit used
	{ 2,  1,  1, -1 }, // 01101110 -> 1/1, 2 bit used
	{ 2,  1,  1, -1 }, // 01101111 -> 1/1, 2 bit used
	{ 2,  1,  1, -1 }, // 01110000 -> 1/1, 2 bit used
	{ 2,  1,  1, -1 }, // 01110001 -> 1/1, 2 bit used
	{ 2,  1,  1, -1 }, // 01110010 -> 1/1, 2 bit used
	{ 2,  1,  1, -1 }, // 01110011 -> 1/1, 2 bit used
	{ 2,  1,  1, -1 }, // 01110100 -> 1/1, 2 bit used
	{ 2,  1,  1, -1 }, // 01110101 -> 1/1, 2 bit used
	{ 2,  1,  1, -1 }, // 01110110 -> 1/1, 2 bit used
	{ 2,  1,  1, -1 }, // 01110111 -> 1/1, 2 bit used
	{ 2,  1,  1, -1 }, // 01111000 -> 1/1, 2 bit used
	{ 2,  1,  1, -1 }, // 01111001 -> 1/1, 2 bit used
	{ 2,  1,  1, -1 }, // 01111010 -> 1/1, 2 bit used
	{ 2,  1,  1, -1 }, // 01111011 -> 1/1, 2 bit used
	{ 2,  1,  1, -1 }, // 01111100 -> 1/1, 2 bit used
	{ 2,  1,  1, -1 }, // 01111101 -> 1/1, 2 bit used
	{ 2,  1,  1, -1 }, // 01111110 -> 1/1, 2 bit used
	{ 2,  1,  1, -1 }, // 01111111 -> 1/1, 2 bit used
	{ 3,  0,  1, -1 }, // 10000000 -> 0/1, 3 bit used
	{ 3,  0,  1, -1 }, // 10000001 -> 0/1, 3 bit used
	{ 3,  0,  1, -1 }, // 10000010 -> 0/1, 3 bit used
	{ 3,  0,  1, -1 }, // 10000011 -> 0/1, 3 bit used
	{ 3,  0,  1, -1 }, // 10000100 -> 0/1, 3 bit used
	{ 3,  0,  1, -1 }, // 10000101 -> 0/1, 3 bit used
	{ 3,  0,  1, -1 }, // 10000110 -> 0/1, 3 bit used
	{ 3,  0,  1, -1 }, // 10000111 -> 0/1, 3 bit used
	{ 3,  0,  1, -1 }, // 10001000 -> 0/1, 3 bit used
	{ 3,  0,  1, -1 }, // 10001001 -> 0/1, 3 bit used
	{ 3,  0,  1, -1 }, // 10001010 -> 0/1, 3 bit used
	{ 3,  0,  1, -1 }, // 10001011 -> 0/1, 3 bit used
	{ 3,  0,  1, -1 }, // 10001100 -> 0/1, 3 bit used
	{ 3,  0,  1, -1 }, // 10001101 -> 0/1, 3 bit used
	{ 3,  0,  1, -1 }, // 10001110 -> 0/1, 3 bit used
	{ 3,  0,  1, -1 }, // 10001111 -> 0/1, 3 bit used
	{ 3,  0,  1, -1 }, // 10010000 -> 0/1, 3 bit used
	{ 3,  0,  1, -1 }, // 10010001 -> 0/1, 3 bit used
	{ 3,  0,  1, -1 }, // 10010010 -> 0/1, 3 bit used
	{ 3,  0,  1, -1 }, // 10010011 -> 0/1, 3 bit used
	{ 3,  0,  1, -1 }, // 10010100 -> 0/1, 3 bit used
	{ 3,  0,  1, -1 }, // 10010101 -> 0/1, 3 bit used
	{ 3,  0,  1, -1 }, // 10010110 -> 0/1, 3 bit used
	{ 3,  0,  1, -1 }, // 10010111 -> 0/1, 3 bit used
	{ 3,  0,  1, -1 }, // 10011000 -> 0/1, 3 bit used
	{ 3,  0,  1, -1 }, // 10011001 -> 0/1, 3 bit used
	{ 3,  0,  1, -1 }, // 10011010 -> 0/1, 3 bit used
	{ 3,  0,  1, -1 }, // 10011011 -> 0/1, 3 bit used
	{ 3,  0,  1, -1 }, // 10011100 -> 0/1, 3 bit used
	{ 3,  0,  1, -1 }, // 10011101 -> 0/1, 3 bit used
	{ 3,  0,  1, -1 }, // 10011110 -> 0/1, 3 bit used
	{ 3,  0,  1, -1 }, // 10011111 -> 0/1, 3 bit used
	{ 3,  1,  0, -1 }, // 10100000 -> 1/0, 3 bit used
	{ 3,  1,  0, -1 }, // 10100001 -> 1/0, 3 bit used
	{ 3,  1,  0, -1 }, // 10100010 -> 1/0, 3 bit used
	{ 3,  1,  0, -1 }, // 10100011 -> 1/0, 3 bit used
	{ 3,  1,  0, -1 }, // 10100100 -> 1/0, 3 bit used
	{ 3,  1,  0, -1 }, // 10100101 -> 1/0, 3 bit used
	{ 3,  1,  0, -1 }, // 10100110 -> 1/0, 3 bit used
	{ 3,  1,  0, -1 }, // 10100111 -> 1/0, 3 bit used
	{ 3,  1,  0, -1 }, // 10101000 -> 1/0, 3 bit used
	{ 3,  1,  0, -1 }, // 10101001 -> 1/0, 3 bit used
	{ 3,  1,  0, -1 }, // 10101010 -> 1/0, 3 bit used
	{ 3,  1,  0, -1 }, // 10101011 -> 1/0, 3 bit used
	{ 3,  1,  0, -1 }, // 10101100 -> 1/0, 3 bit used
	{ 3,  1,  0, -1 }, // 10101101 -> 1/0, 3 bit used
	{ 3,  1,  0, -1 }, // 10101110 -> 1/0, 3 bit used
	{ 3,  1,  0, -1 }, // 10101111 -> 1/0, 3 bit used
	{ 3,  1,  0, -1 }, // 10110000 -> 1/0, 3 bit used
	{ 3,  1,  0, -1 }, // 10110001 -> 1/0, 3 bit used
	{ 3,  1,  0, -1 }, // 10110010 -> 1/0, 3 bit used
	{ 3,  1,  0, -1 }, // 10110011 -> 1/0, 3 bit used
	{ 3,  1,  0, -1 }, // 10110100 -> 1/0, 3 bit used
	{ 3,  1,  0, -1 }, // 10110101 -> 1/0, 3 bit used
	{ 3,  1,  0, -1 }, // 10110110 -> 1/0, 3 bit used
	{ 3,  1,  0, -1 }, // 10110111 -> 1/0, 3 bit used
	{ 3,  1,  0, -1 }, // 10111000 -> 1/0, 3 bit used
	{ 3,  1,  0, -1 }, // 10111001 -> 1/0, 3 bit used
	{ 3,  1,  0, -1 }, // 10111010 -> 1/0, 3 bit used
	{ 3,  1,  0, -1 }, // 10111011 -> 1/0, 3 bit used
	{ 3,  1,  0, -1 }, // 10111100 -> 1/0, 3 bit used
	{ 3,  1,  0, -1 }, // 10111101 -> 1/0, 3 bit used
	{ 3,  1,  0, -1 }, // 10111110 -> 1/0, 3 bit used
	{ 3,  1,  0, -1 }, // 10111111 -> 1/0, 3 bit used
	{ 2,  0,  0, -1 }, // 11000000 -> 0/0, 2 bit used
	{ 2,  0,  0, -1 }, // 11000001 -> 0/0, 2 bit used
	{ 2,  0,  0, -1 }, // 11000010 -> 0/0, 2 bit used
	{ 2,  0,  0, -1 }, // 11000011 -> 0/0, 2 bit used
	{ 2,  0,  0, -1 }, // 11000100 -> 0/0, 2 bit used
	{ 2,  0,  0, -1 }, // 11000101 -> 0/0, 2 bit used
	{ 2,  0,  0, -1 }, // 11000110 -> 0/0, 2 bit used
	{ 2,  0,  0, -1 }, // 11000111 -> 0/0, 2 bit used
	{ 2,  0,  0, -1 }, // 11001000 -> 0/0, 2 bit used
	{ 2,  0,  0, -1 }, // 11001001 -> 0/0, 2 bit used
	{ 2,  0,  0, -1 }, // 11001010 -> 0/0, 2 bit used
	{ 2,  0,  0, -1 }, // 11001011 -> 0/0, 2 bit used
	{ 2,  0,  0, -1 }, // 11001100 -> 0/0, 2 bit used
	{ 2,  0,  0, -1 }, // 11001101 -> 0/0, 2 bit used
	{ 2,  0,  0, -1 }, // 11001110 -> 0/0, 2 bit used
	{ 2,  0,  0, -1 }, // 11001111 -> 0/0, 2 bit used
	{ 2,  0,  0, -1 }, // 11010000 -> 0/0, 2 bit used
	{ 2,  0,  0, -1 }, // 11010001 -> 0/0, 2 bit used
	{ 2,  0,  0, -1 }, // 11010010 -> 0/0, 2 bit used
	{ 2,  0,  0, -1 }, // 11010011 -> 0/0, 2 bit used
	{ 2,  0,  0, -1 }, // 11010100 -> 0/0, 2 bit used
	{ 2,  0,  0, -1 }, // 11010101 -> 0/0, 2 bit used
	{ 2,  0,  0, -1 }, // 11010110 -> 0/0, 2 bit used
	{ 2,  0,  0, -1 }, // 11010111 -> 0/0, 2 bit used
	{ 2,  0,  0, -1 }, // 11011000 -> 0/0, 2 bit used
	{ 2,  0,  0, -1 }, // 11011001 -> 0/0, 2 bit used
	{ 2,  0,  0, -1 }, // 11011010 -> 0/0, 2 bit used
	{ 2,  0,  0, -1 }, // 11011011 -> 0/0, 2 bit used
	{ 2,  0,  0, -1 }, // 11011100 -> 0/0, 2 bit used
	{ 2,  0,  0, -1 }, // 11011101 -> 0/0, 2 bit used
	{ 2,  0,  0, -1 }, // 11011110 -> 0/0, 2 bit used
	{ 2,  0,  0, -1 }, // 11011111 -> 0/0, 2 bit used
	{ 2,  0,  0, -1 }, // 11100000 -> 0/0, 2 bit used
	{ 2,  0,  0, -1 }, // 11100001 -> 0/0, 2 bit used
	{ 2,  0,  0, -1 }, // 11100010 -> 0/0, 2 bit used
	{ 2,  0,  0, -1 }, // 11100011 -> 0/0, 2 bit used
	{ 2,  0,  0, -1 }, // 11100100 -> 0/0, 2 bit used
	{ 2,  0,  0, -1 }, // 11100101 -> 0/0, 2 bit used
	{ 2,  0,  0, -1 }, // 11100110 -> 0/0, 2 bit used
	{ 2,  0,  0, -1 }, // 11100111 -> 0/0, 2 bit used
	{ 2,  0,  0, -1 }, // 11101000 -> 0/0, 2 bit used
	{ 2,  0,  0, -1 }, // 11101001 -> 0/0, 2 bit used
	{ 2,  0,  0, -1 }, // 11101010 -> 0/0, 2 bit used
	{ 2,  0,  0, -1 }, // 11101011 -> 0/0, 2 bit used
	{ 2,  0,  0, -1 }, // 11101100 -> 0/0, 2 bit used
	{ 2,  0,  0, -1 }, // 11101101 -> 0/0, 2 bit used
	{ 2,  0,  0, -1 }, // 11101110 -> 0/0, 2 bit used
	{ 2,  0,  0, -1 }, // 11101111 -> 0/0, 2 bit used
	{ 2,  0,  0, -1 }, // 11110000 -> 0/0, 2 bit used
	{ 2,  0,  0, -1 }, // 11110001 -> 0/0, 2 bit used
	{ 2,  0,  0, -1 }, // 11110010 -> 0/0, 2 bit used
	{ 2,  0,  0, -1 }, // 11110011 -> 0/0, 2 bit used
	{ 2,  0,  0, -1 }, // 11110100 -> 0/0, 2 bit used
	{ 2,  0,  0, -1 }, // 11110101 -> 0/0, 2 bit used
	{ 2,  0,  0, -1 }, // 11110110 -> 0/0, 2 bit used
	{ 2,  0,  0, -1 }, // 11110111 -> 0/0, 2 bit used
	{ 2,  0,  0, -1 }, // 11111000 -> 0/0, 2 bit used
	{ 2,  0,  0, -1 }, // 11111001 -> 0/0, 2 bit used
	{ 2,  0,  0, -1 }, // 11111010 -> 0/0, 2 bit used
	{ 2,  0,  0, -1 }, // 11111011 -> 0/0, 2 bit used
	{ 2,  0,  0, -1 }, // 11111100 -> 0/0, 2 bit used
	{ 2,  0,  0, -1 }, // 11111101 -> 0/0, 2 bit used
	{ 2,  0,  0, -1 }, // 11111110 -> 0/0, 2 bit used
	{ 2,  0,  0, -1 }  // 11111111 -> 0/0, 2 bit used
};
// extension table 1, prefix 00000000
static huffman_conv htab8_dec_ext1[ 8 ] = {
	{ 3,  5,  5, -1 }, // 000 -> 5/5, 3 bit used
	{ 3,  5,  4, -1 }, // 001 -> 5/4, 3 bit used
	{ 2,  4,  5, -1 }, // 010 -> 4/5, 2 bit used
	{ 2,  4,  5, -1 }, // 011 -> 4/5, 2 bit used
	{ 1,  5,  3, -1 }, // 100 -> 5/3, 1 bit used
	{ 1,  5,  3, -1 }, // 101 -> 5/3, 1 bit used
	{ 1,  5,  3, -1 }, // 110 -> 5/3, 1 bit used
	{ 1,  5,  3, -1 }  // 111 -> 5/3, 1 bit used
};
// extension table 2, prefix 00000001
static huffman_conv htab8_dec_ext2[ 4 ] = {
	{ 2,  3,  5, -1 }, // 00 -> 3/5, 2 bit used
	{ 2,  4,  4, -1 }, // 01 -> 4/4, 2 bit used
	{ 1,  2,  5, -1 }, // 10 -> 2/5, 1 bit used
	{ 1,  2,  5, -1 }  // 11 -> 2/5, 1 bit used
};
// extension table 3, prefix 00000010
static huffman_conv htab8_dec_ext3[ 2 ] = {
	{ 1,  5,  2, -1 }, // 0 -> 5/2, 1 bit used
	{ 1,  0,  5, -1 }  // 1 -> 0/5, 1 bit used
};
// extension table 4, prefix 00000101
static huffman_conv htab8_dec_ext4[ 2 ] = {
	{ 1,  3,  4, -1 }, // 0 -> 3/4, 1 bit used
	{ 1,  4,  3, -1 }  // 1 -> 4/3, 1 bit used
};
// extension table 5, prefix 00000110
static huffman_conv htab8_dec_ext5[ 2 ] = {
	{ 1,  5,  0, -1 }, // 0 -> 5/0, 1 bit used
	{ 1,  3,  3, -1 }  // 1 -> 3/3, 1 bit used
};
// big values conversion table #8, total size: 274, ext tables: 5
static huffman_conv_set htab8_dec[ 6 ] = {
	{ htab8_dec_start, 8 }, // start table
	{ htab8_dec_ext1, 3 }, // ext table #1
	{ htab8_dec_ext2, 2 }, // ext table #2
	{ htab8_dec_ext3, 1 }, // ext table #3
	{ htab8_dec_ext4, 1 }, // ext table #4
	{ htab8_dec_ext5, 1 }  // ext table #5
};

/* -----------------------------------------------
	big values conversion table 9
	----------------------------------------------- */
static huffman_conv htab9_dec_start[ 256 ] = {
	{ 8, -1, -1,  1 }, // 00000000 -> extension table #1
	{ 8,  3,  5, -1 }, // 00000001 -> 3/5, 8 bit used
	{ 8,  5,  3, -1 }, // 00000010 -> 5/3, 8 bit used
	{ 8, -1, -1,  2 }, // 00000011 -> extension table #2
	{ 8,  4,  4, -1 }, // 00000100 -> 4/4, 8 bit used
	{ 8,  2,  5, -1 }, // 00000101 -> 2/5, 8 bit used
	{ 8,  5,  2, -1 }, // 00000110 -> 5/2, 8 bit used
	{ 8,  1,  5, -1 }, // 00000111 -> 1/5, 8 bit used
	{ 7,  5,  1, -1 }, // 00001000 -> 5/1, 7 bit used
	{ 7,  5,  1, -1 }, // 00001001 -> 5/1, 7 bit used
	{ 7,  3,  4, -1 }, // 00001010 -> 3/4, 7 bit used
	{ 7,  3,  4, -1 }, // 00001011 -> 3/4, 7 bit used
	{ 7,  4,  3, -1 }, // 00001100 -> 4/3, 7 bit used
	{ 7,  4,  3, -1 }, // 00001101 -> 4/3, 7 bit used
	{ 8,  5,  0, -1 }, // 00001110 -> 5/0, 8 bit used
	{ 8,  0,  4, -1 }, // 00001111 -> 0/4, 8 bit used
	{ 7,  2,  4, -1 }, // 00010000 -> 2/4, 7 bit used
	{ 7,  2,  4, -1 }, // 00010001 -> 2/4, 7 bit used
	{ 7,  4,  2, -1 }, // 00010010 -> 4/2, 7 bit used
	{ 7,  4,  2, -1 }, // 00010011 -> 4/2, 7 bit used
	{ 7,  3,  3, -1 }, // 00010100 -> 3/3, 7 bit used
	{ 7,  3,  3, -1 }, // 00010101 -> 3/3, 7 bit used
	{ 7,  4,  0, -1 }, // 00010110 -> 4/0, 7 bit used
	{ 7,  4,  0, -1 }, // 00010111 -> 4/0, 7 bit used
	{ 6,  1,  4, -1 }, // 00011000 -> 1/4, 6 bit used
	{ 6,  1,  4, -1 }, // 00011001 -> 1/4, 6 bit used
	{ 6,  1,  4, -1 }, // 00011010 -> 1/4, 6 bit used
	{ 6,  1,  4, -1 }, // 00011011 -> 1/4, 6 bit used
	{ 6,  4,  1, -1 }, // 00011100 -> 4/1, 6 bit used
	{ 6,  4,  1, -1 }, // 00011101 -> 4/1, 6 bit used
	{ 6,  4,  1, -1 }, // 00011110 -> 4/1, 6 bit used
	{ 6,  4,  1, -1 }, // 00011111 -> 4/1, 6 bit used
	{ 6,  2,  3, -1 }, // 00100000 -> 2/3, 6 bit used
	{ 6,  2,  3, -1 }, // 00100001 -> 2/3, 6 bit used
	{ 6,  2,  3, -1 }, // 00100010 -> 2/3, 6 bit used
	{ 6,  2,  3, -1 }, // 00100011 -> 2/3, 6 bit used
	{ 6,  3,  2, -1 }, // 00100100 -> 3/2, 6 bit used
	{ 6,  3,  2, -1 }, // 00100101 -> 3/2, 6 bit used
	{ 6,  3,  2, -1 }, // 00100110 -> 3/2, 6 bit used
	{ 6,  3,  2, -1 }, // 00100111 -> 3/2, 6 bit used
	{ 5,  1,  3, -1 }, // 00101000 -> 1/3, 5 bit used
	{ 5,  1,  3, -1 }, // 00101001 -> 1/3, 5 bit used
	{ 5,  1,  3, -1 }, // 00101010 -> 1/3, 5 bit used
	{ 5,  1,  3, -1 }, // 00101011 -> 1/3, 5 bit used
	{ 5,  1,  3, -1 }, // 00101100 -> 1/3, 5 bit used
	{ 5,  1,  3, -1 }, // 00101101 -> 1/3, 5 bit used
	{ 5,  1,  3, -1 }, // 00101110 -> 1/3, 5 bit used
	{ 5,  1,  3, -1 }, // 00101111 -> 1/3, 5 bit used
	{ 5,  3,  1, -1 }, // 00110000 -> 3/1, 5 bit used
	{ 5,  3,  1, -1 }, // 00110001 -> 3/1, 5 bit used
	{ 5,  3,  1, -1 }, // 00110010 -> 3/1, 5 bit used
	{ 5,  3,  1, -1 }, // 00110011 -> 3/1, 5 bit used
	{ 5,  3,  1, -1 }, // 00110100 -> 3/1, 5 bit used
	{ 5,  3,  1, -1 }, // 00110101 -> 3/1, 5 bit used
	{ 5,  3,  1, -1 }, // 00110110 -> 3/1, 5 bit used
	{ 5,  3,  1, -1 }, // 00110111 -> 3/1, 5 bit used
	{ 6,  0,  3, -1 }, // 00111000 -> 0/3, 6 bit used
	{ 6,  0,  3, -1 }, // 00111001 -> 0/3, 6 bit used
	{ 6,  0,  3, -1 }, // 00111010 -> 0/3, 6 bit used
	{ 6,  0,  3, -1 }, // 00111011 -> 0/3, 6 bit used
	{ 6,  3,  0, -1 }, // 00111100 -> 3/0, 6 bit used
	{ 6,  3,  0, -1 }, // 00111101 -> 3/0, 6 bit used
	{ 6,  3,  0, -1 }, // 00111110 -> 3/0, 6 bit used
	{ 6,  3,  0, -1 }, // 00111111 -> 3/0, 6 bit used
	{ 5,  2,  2, -1 }, // 01000000 -> 2/2, 5 bit used
	{ 5,  2,  2, -1 }, // 01000001 -> 2/2, 5 bit used
	{ 5,  2,  2, -1 }, // 01000010 -> 2/2, 5 bit used
	{ 5,  2,  2, -1 }, // 01000011 -> 2/2, 5 bit used
	{ 5,  2,  2, -1 }, // 01000100 -> 2/2, 5 bit used
	{ 5,  2,  2, -1 }, // 01000101 -> 2/2, 5 bit used
	{ 5,  2,  2, -1 }, // 01000110 -> 2/2, 5 bit used
	{ 5,  2,  2, -1 }, // 01000111 -> 2/2, 5 bit used
	{ 5,  0,  2, -1 }, // 01001000 -> 0/2, 5 bit used
	{ 5,  0,  2, -1 }, // 01001001 -> 0/2, 5 bit used
	{ 5,  0,  2, -1 }, // 01001010 -> 0/2, 5 bit used
	{ 5,  0,  2, -1 }, // 01001011 -> 0/2, 5 bit used
	{ 5,  0,  2, -1 }, // 01001100 -> 0/2, 5 bit used
	{ 5,  0,  2, -1 }, // 01001101 -> 0/2, 5 bit used
	{ 5,  0,  2, -1 }, // 01001110 -> 0/2, 5 bit used
	{ 5,  0,  2, -1 }, // 01001111 -> 0/2, 5 bit used
	{ 4,  1,  2, -1 }, // 01010000 -> 1/2, 4 bit used
	{ 4,  1,  2, -1 }, // 01010001 -> 1/2, 4 bit used
	{ 4,  1,  2, -1 }, // 01010010 -> 1/2, 4 bit used
	{ 4,  1,  2, -1 }, // 01010011 -> 1/2, 4 bit used
	{ 4,  1,  2, -1 }, // 01010100 -> 1/2, 4 bit used
	{ 4,  1,  2, -1 }, // 01010101 -> 1/2, 4 bit used
	{ 4,  1,  2, -1 }, // 01010110 -> 1/2, 4 bit used
	{ 4,  1,  2, -1 }, // 01010111 -> 1/2, 4 bit used
	{ 4,  1,  2, -1 }, // 01011000 -> 1/2, 4 bit used
	{ 4,  1,  2, -1 }, // 01011001 -> 1/2, 4 bit used
	{ 4,  1,  2, -1 }, // 01011010 -> 1/2, 4 bit used
	{ 4,  1,  2, -1 }, // 01011011 -> 1/2, 4 bit used
	{ 4,  1,  2, -1 }, // 01011100 -> 1/2, 4 bit used
	{ 4,  1,  2, -1 }, // 01011101 -> 1/2, 4 bit used
	{ 4,  1,  2, -1 }, // 01011110 -> 1/2, 4 bit used
	{ 4,  1,  2, -1 }, // 01011111 -> 1/2, 4 bit used
	{ 4,  2,  1, -1 }, // 01100000 -> 2/1, 4 bit used
	{ 4,  2,  1, -1 }, // 01100001 -> 2/1, 4 bit used
	{ 4,  2,  1, -1 }, // 01100010 -> 2/1, 4 bit used
	{ 4,  2,  1, -1 }, // 01100011 -> 2/1, 4 bit used
	{ 4,  2,  1, -1 }, // 01100100 -> 2/1, 4 bit used
	{ 4,  2,  1, -1 }, // 01100101 -> 2/1, 4 bit used
	{ 4,  2,  1, -1 }, // 01100110 -> 2/1, 4 bit used
	{ 4,  2,  1, -1 }, // 01100111 -> 2/1, 4 bit used
	{ 4,  2,  1, -1 }, // 01101000 -> 2/1, 4 bit used
	{ 4,  2,  1, -1 }, // 01101001 -> 2/1, 4 bit used
	{ 4,  2,  1, -1 }, // 01101010 -> 2/1, 4 bit used
	{ 4,  2,  1, -1 }, // 01101011 -> 2/1, 4 bit used
	{ 4,  2,  1, -1 }, // 01101100 -> 2/1, 4 bit used
	{ 4,  2,  1, -1 }, // 01101101 -> 2/1, 4 bit used
	{ 4,  2,  1, -1 }, // 01101110 -> 2/1, 4 bit used
	{ 4,  2,  1, -1 }, // 01101111 -> 2/1, 4 bit used
	{ 4,  2,  0, -1 }, // 01110000 -> 2/0, 4 bit used
	{ 4,  2,  0, -1 }, // 01110001 -> 2/0, 4 bit used
	{ 4,  2,  0, -1 }, // 01110010 -> 2/0, 4 bit used
	{ 4,  2,  0, -1 }, // 01110011 -> 2/0, 4 bit used
	{ 4,  2,  0, -1 }, // 01110100 -> 2/0, 4 bit used
	{ 4,  2,  0, -1 }, // 01110101 -> 2/0, 4 bit used
	{ 4,  2,  0, -1 }, // 01110110 -> 2/0, 4 bit used
	{ 4,  2,  0, -1 }, // 01110111 -> 2/0, 4 bit used
	{ 4,  2,  0, -1 }, // 01111000 -> 2/0, 4 bit used
	{ 4,  2,  0, -1 }, // 01111001 -> 2/0, 4 bit used
	{ 4,  2,  0, -1 }, // 01111010 -> 2/0, 4 bit used
	{ 4,  2,  0, -1 }, // 01111011 -> 2/0, 4 bit used
	{ 4,  2,  0, -1 }, // 01111100 -> 2/0, 4 bit used
	{ 4,  2,  0, -1 }, // 01111101 -> 2/0, 4 bit used
	{ 4,  2,  0, -1 }, // 01111110 -> 2/0, 4 bit used
	{ 4,  2,  0, -1 }, // 01111111 -> 2/0, 4 bit used
	{ 3,  1,  1, -1 }, // 10000000 -> 1/1, 3 bit used
	{ 3,  1,  1, -1 }, // 10000001 -> 1/1, 3 bit used
	{ 3,  1,  1, -1 }, // 10000010 -> 1/1, 3 bit used
	{ 3,  1,  1, -1 }, // 10000011 -> 1/1, 3 bit used
	{ 3,  1,  1, -1 }, // 10000100 -> 1/1, 3 bit used
	{ 3,  1,  1, -1 }, // 10000101 -> 1/1, 3 bit used
	{ 3,  1,  1, -1 }, // 10000110 -> 1/1, 3 bit used
	{ 3,  1,  1, -1 }, // 10000111 -> 1/1, 3 bit used
	{ 3,  1,  1, -1 }, // 10001000 -> 1/1, 3 bit used
	{ 3,  1,  1, -1 }, // 10001001 -> 1/1, 3 bit used
	{ 3,  1,  1, -1 }, // 10001010 -> 1/1, 3 bit used
	{ 3,  1,  1, -1 }, // 10001011 -> 1/1, 3 bit used
	{ 3,  1,  1, -1 }, // 10001100 -> 1/1, 3 bit used
	{ 3,  1,  1, -1 }, // 10001101 -> 1/1, 3 bit used
	{ 3,  1,  1, -1 }, // 10001110 -> 1/1, 3 bit used
	{ 3,  1,  1, -1 }, // 10001111 -> 1/1, 3 bit used
	{ 3,  1,  1, -1 }, // 10010000 -> 1/1, 3 bit used
	{ 3,  1,  1, -1 }, // 10010001 -> 1/1, 3 bit used
	{ 3,  1,  1, -1 }, // 10010010 -> 1/1, 3 bit used
	{ 3,  1,  1, -1 }, // 10010011 -> 1/1, 3 bit used
	{ 3,  1,  1, -1 }, // 10010100 -> 1/1, 3 bit used
	{ 3,  1,  1, -1 }, // 10010101 -> 1/1, 3 bit used
	{ 3,  1,  1, -1 }, // 10010110 -> 1/1, 3 bit used
	{ 3,  1,  1, -1 }, // 10010111 -> 1/1, 3 bit used
	{ 3,  1,  1, -1 }, // 10011000 -> 1/1, 3 bit used
	{ 3,  1,  1, -1 }, // 10011001 -> 1/1, 3 bit used
	{ 3,  1,  1, -1 }, // 10011010 -> 1/1, 3 bit used
	{ 3,  1,  1, -1 }, // 10011011 -> 1/1, 3 bit used
	{ 3,  1,  1, -1 }, // 10011100 -> 1/1, 3 bit used
	{ 3,  1,  1, -1 }, // 10011101 -> 1/1, 3 bit used
	{ 3,  1,  1, -1 }, // 10011110 -> 1/1, 3 bit used
	{ 3,  1,  1, -1 }, // 10011111 -> 1/1, 3 bit used
	{ 3,  0,  1, -1 }, // 10100000 -> 0/1, 3 bit used
	{ 3,  0,  1, -1 }, // 10100001 -> 0/1, 3 bit used
	{ 3,  0,  1, -1 }, // 10100010 -> 0/1, 3 bit used
	{ 3,  0,  1, -1 }, // 10100011 -> 0/1, 3 bit used
	{ 3,  0,  1, -1 }, // 10100100 -> 0/1, 3 bit used
	{ 3,  0,  1, -1 }, // 10100101 -> 0/1, 3 bit used
	{ 3,  0,  1, -1 }, // 10100110 -> 0/1, 3 bit used
	{ 3,  0,  1, -1 }, // 10100111 -> 0/1, 3 bit used
	{ 3,  0,  1, -1 }, // 10101000 -> 0/1, 3 bit used
	{ 3,  0,  1, -1 }, // 10101001 -> 0/1, 3 bit used
	{ 3,  0,  1, -1 }, // 10101010 -> 0/1, 3 bit used
	{ 3,  0,  1, -1 }, // 10101011 -> 0/1, 3 bit used
	{ 3,  0,  1, -1 }, // 10101100 -> 0/1, 3 bit used
	{ 3,  0,  1, -1 }, // 10101101 -> 0/1, 3 bit used
	{ 3,  0,  1, -1 }, // 10101110 -> 0/1, 3 bit used
	{ 3,  0,  1, -1 }, // 10101111 -> 0/1, 3 bit used
	{ 3,  0,  1, -1 }, // 10110000 -> 0/1, 3 bit used
	{ 3,  0,  1, -1 }, // 10110001 -> 0/1, 3 bit used
	{ 3,  0,  1, -1 }, // 10110010 -> 0/1, 3 bit used
	{ 3,  0,  1, -1 }, // 10110011 -> 0/1, 3 bit used
	{ 3,  0,  1, -1 }, // 10110100 -> 0/1, 3 bit used
	{ 3,  0,  1, -1 }, // 10110101 -> 0/1, 3 bit used
	{ 3,  0,  1, -1 }, // 10110110 -> 0/1, 3 bit used
	{ 3,  0,  1, -1 }, // 10110111 -> 0/1, 3 bit used
	{ 3,  0,  1, -1 }, // 10111000 -> 0/1, 3 bit used
	{ 3,  0,  1, -1 }, // 10111001 -> 0/1, 3 bit used
	{ 3,  0,  1, -1 }, // 10111010 -> 0/1, 3 bit used
	{ 3,  0,  1, -1 }, // 10111011 -> 0/1, 3 bit used
	{ 3,  0,  1, -1 }, // 10111100 -> 0/1, 3 bit used
	{ 3,  0,  1, -1 }, // 10111101 -> 0/1, 3 bit used
	{ 3,  0,  1, -1 }, // 10111110 -> 0/1, 3 bit used
	{ 3,  0,  1, -1 }, // 10111111 -> 0/1, 3 bit used
	{ 3,  1,  0, -1 }, // 11000000 -> 1/0, 3 bit used
	{ 3,  1,  0, -1 }, // 11000001 -> 1/0, 3 bit used
	{ 3,  1,  0, -1 }, // 11000010 -> 1/0, 3 bit used
	{ 3,  1,  0, -1 }, // 11000011 -> 1/0, 3 bit used
	{ 3,  1,  0, -1 }, // 11000100 -> 1/0, 3 bit used
	{ 3,  1,  0, -1 }, // 11000101 -> 1/0, 3 bit used
	{ 3,  1,  0, -1 }, // 11000110 -> 1/0, 3 bit used
	{ 3,  1,  0, -1 }, // 11000111 -> 1/0, 3 bit used
	{ 3,  1,  0, -1 }, // 11001000 -> 1/0, 3 bit used
	{ 3,  1,  0, -1 }, // 11001001 -> 1/0, 3 bit used
	{ 3,  1,  0, -1 }, // 11001010 -> 1/0, 3 bit used
	{ 3,  1,  0, -1 }, // 11001011 -> 1/0, 3 bit used
	{ 3,  1,  0, -1 }, // 11001100 -> 1/0, 3 bit used
	{ 3,  1,  0, -1 }, // 11001101 -> 1/0, 3 bit used
	{ 3,  1,  0, -1 }, // 11001110 -> 1/0, 3 bit used
	{ 3,  1,  0, -1 }, // 11001111 -> 1/0, 3 bit used
	{ 3,  1,  0, -1 }, // 11010000 -> 1/0, 3 bit used
	{ 3,  1,  0, -1 }, // 11010001 -> 1/0, 3 bit used
	{ 3,  1,  0, -1 }, // 11010010 -> 1/0, 3 bit used
	{ 3,  1,  0, -1 }, // 11010011 -> 1/0, 3 bit used
	{ 3,  1,  0, -1 }, // 11010100 -> 1/0, 3 bit used
	{ 3,  1,  0, -1 }, // 11010101 -> 1/0, 3 bit used
	{ 3,  1,  0, -1 }, // 11010110 -> 1/0, 3 bit used
	{ 3,  1,  0, -1 }, // 11010111 -> 1/0, 3 bit used
	{ 3,  1,  0, -1 }, // 11011000 -> 1/0, 3 bit used
	{ 3,  1,  0, -1 }, // 11011001 -> 1/0, 3 bit used
	{ 3,  1,  0, -1 }, // 11011010 -> 1/0, 3 bit used
	{ 3,  1,  0, -1 }, // 11011011 -> 1/0, 3 bit used
	{ 3,  1,  0, -1 }, // 11011100 -> 1/0, 3 bit used
	{ 3,  1,  0, -1 }, // 11011101 -> 1/0, 3 bit used
	{ 3,  1,  0, -1 }, // 11011110 -> 1/0, 3 bit used
	{ 3,  1,  0, -1 }, // 11011111 -> 1/0, 3 bit used
	{ 3,  0,  0, -1 }, // 11100000 -> 0/0, 3 bit used
	{ 3,  0,  0, -1 }, // 11100001 -> 0/0, 3 bit used
	{ 3,  0,  0, -1 }, // 11100010 -> 0/0, 3 bit used
	{ 3,  0,  0, -1 }, // 11100011 -> 0/0, 3 bit used
	{ 3,  0,  0, -1 }, // 11100100 -> 0/0, 3 bit used
	{ 3,  0,  0, -1 }, // 11100101 -> 0/0, 3 bit used
	{ 3,  0,  0, -1 }, // 11100110 -> 0/0, 3 bit used
	{ 3,  0,  0, -1 }, // 11100111 -> 0/0, 3 bit used
	{ 3,  0,  0, -1 }, // 11101000 -> 0/0, 3 bit used
	{ 3,  0,  0, -1 }, // 11101001 -> 0/0, 3 bit used
	{ 3,  0,  0, -1 }, // 11101010 -> 0/0, 3 bit used
	{ 3,  0,  0, -1 }, // 11101011 -> 0/0, 3 bit used
	{ 3,  0,  0, -1 }, // 11101100 -> 0/0, 3 bit used
	{ 3,  0,  0, -1 }, // 11101101 -> 0/0, 3 bit used
	{ 3,  0,  0, -1 }, // 11101110 -> 0/0, 3 bit used
	{ 3,  0,  0, -1 }, // 11101111 -> 0/0, 3 bit used
	{ 3,  0,  0, -1 }, // 11110000 -> 0/0, 3 bit used
	{ 3,  0,  0, -1 }, // 11110001 -> 0/0, 3 bit used
	{ 3,  0,  0, -1 }, // 11110010 -> 0/0, 3 bit used
	{ 3,  0,  0, -1 }, // 11110011 -> 0/0, 3 bit used
	{ 3,  0,  0, -1 }, // 11110100 -> 0/0, 3 bit used
	{ 3,  0,  0, -1 }, // 11110101 -> 0/0, 3 bit used
	{ 3,  0,  0, -1 }, // 11110110 -> 0/0, 3 bit used
	{ 3,  0,  0, -1 }, // 11110111 -> 0/0, 3 bit used
	{ 3,  0,  0, -1 }, // 11111000 -> 0/0, 3 bit used
	{ 3,  0,  0, -1 }, // 11111001 -> 0/0, 3 bit used
	{ 3,  0,  0, -1 }, // 11111010 -> 0/0, 3 bit used
	{ 3,  0,  0, -1 }, // 11111011 -> 0/0, 3 bit used
	{ 3,  0,  0, -1 }, // 11111100 -> 0/0, 3 bit used
	{ 3,  0,  0, -1 }, // 11111101 -> 0/0, 3 bit used
	{ 3,  0,  0, -1 }, // 11111110 -> 0/0, 3 bit used
	{ 3,  0,  0, -1 }  // 11111111 -> 0/0, 3 bit used
};
// extension table 1, prefix 00000000
static huffman_conv htab9_dec_ext1[ 2 ] = {
	{ 1,  5,  5, -1 }, // 0 -> 5/5, 1 bit used
	{ 1,  4,  5, -1 }  // 1 -> 4/5, 1 bit used
};
// extension table 2, prefix 00000011
static huffman_conv htab9_dec_ext2[ 2 ] = {
	{ 1,  5,  4, -1 }, // 0 -> 5/4, 1 bit used
	{ 1,  0,  5, -1 }  // 1 -> 0/5, 1 bit used
};
// big values conversion table #9, total size: 260, ext tables: 2
static huffman_conv_set htab9_dec[ 3 ] = {
	{ htab9_dec_start, 8 }, // start table
	{ htab9_dec_ext1, 1 }, // ext table #1
	{ htab9_dec_ext2, 1 }  // ext table #2
};

/* -----------------------------------------------
	big values conversion table 10
	----------------------------------------------- */
static huffman_conv htab10_dec_start[ 256 ] = {
	{ 8, -1, -1,  1 }, // 00000000 -> extension table #1
	{ 8, -1, -1,  2 }, // 00000001 -> extension table #2
	{ 8, -1, -1,  3 }, // 00000010 -> extension table #3
	{ 8, -1, -1,  4 }, // 00000011 -> extension table #4
	{ 8, -1, -1,  5 }, // 00000100 -> extension table #5
	{ 8, -1, -1,  6 }, // 00000101 -> extension table #6
	{ 8, -1, -1,  7 }, // 00000110 -> extension table #7
	{ 8,  1,  7, -1 }, // 00000111 -> 1/7, 8 bit used
	{ 8,  7,  1, -1 }, // 00001000 -> 7/1, 8 bit used
	{ 8, -1, -1,  8 }, // 00001001 -> extension table #8
	{ 8, -1, -1,  9 }, // 00001010 -> extension table #9
	{ 8, -1, -1, 10 }, // 00001011 -> extension table #10
	{ 8,  1,  6, -1 }, // 00001100 -> 1/6, 8 bit used
	{ 8,  6,  1, -1 }, // 00001101 -> 6/1, 8 bit used
	{ 8,  6,  0, -1 }, // 00001110 -> 6/0, 8 bit used
	{ 8, -1, -1, 11 }, // 00001111 -> extension table #11
	{ 8, -1, -1, 12 }, // 00010000 -> extension table #12
	{ 8, -1, -1, 13 }, // 00010001 -> extension table #13
	{ 8,  1,  4, -1 }, // 00010010 -> 1/4, 8 bit used
	{ 8,  4,  1, -1 }, // 00010011 -> 4/1, 8 bit used
	{ 8,  4,  0, -1 }, // 00010100 -> 4/0, 8 bit used
	{ 8,  2,  3, -1 }, // 00010101 -> 2/3, 8 bit used
	{ 8,  3,  2, -1 }, // 00010110 -> 3/2, 8 bit used
	{ 8,  0,  3, -1 }, // 00010111 -> 0/3, 8 bit used
	{ 7,  1,  3, -1 }, // 00011000 -> 1/3, 7 bit used
	{ 7,  1,  3, -1 }, // 00011001 -> 1/3, 7 bit used
	{ 7,  3,  1, -1 }, // 00011010 -> 3/1, 7 bit used
	{ 7,  3,  1, -1 }, // 00011011 -> 3/1, 7 bit used
	{ 7,  3,  0, -1 }, // 00011100 -> 3/0, 7 bit used
	{ 7,  3,  0, -1 }, // 00011101 -> 3/0, 7 bit used
	{ 7,  2,  2, -1 }, // 00011110 -> 2/2, 7 bit used
	{ 7,  2,  2, -1 }, // 00011111 -> 2/2, 7 bit used
	{ 6,  1,  2, -1 }, // 00100000 -> 1/2, 6 bit used
	{ 6,  1,  2, -1 }, // 00100001 -> 1/2, 6 bit used
	{ 6,  1,  2, -1 }, // 00100010 -> 1/2, 6 bit used
	{ 6,  1,  2, -1 }, // 00100011 -> 1/2, 6 bit used
	{ 6,  2,  1, -1 }, // 00100100 -> 2/1, 6 bit used
	{ 6,  2,  1, -1 }, // 00100101 -> 2/1, 6 bit used
	{ 6,  2,  1, -1 }, // 00100110 -> 2/1, 6 bit used
	{ 6,  2,  1, -1 }, // 00100111 -> 2/1, 6 bit used
	{ 6,  0,  2, -1 }, // 00101000 -> 0/2, 6 bit used
	{ 6,  0,  2, -1 }, // 00101001 -> 0/2, 6 bit used
	{ 6,  0,  2, -1 }, // 00101010 -> 0/2, 6 bit used
	{ 6,  0,  2, -1 }, // 00101011 -> 0/2, 6 bit used
	{ 6,  2,  0, -1 }, // 00101100 -> 2/0, 6 bit used
	{ 6,  2,  0, -1 }, // 00101101 -> 2/0, 6 bit used
	{ 6,  2,  0, -1 }, // 00101110 -> 2/0, 6 bit used
	{ 6,  2,  0, -1 }, // 00101111 -> 2/0, 6 bit used
	{ 4,  1,  1, -1 }, // 00110000 -> 1/1, 4 bit used
	{ 4,  1,  1, -1 }, // 00110001 -> 1/1, 4 bit used
	{ 4,  1,  1, -1 }, // 00110010 -> 1/1, 4 bit used
	{ 4,  1,  1, -1 }, // 00110011 -> 1/1, 4 bit used
	{ 4,  1,  1, -1 }, // 00110100 -> 1/1, 4 bit used
	{ 4,  1,  1, -1 }, // 00110101 -> 1/1, 4 bit used
	{ 4,  1,  1, -1 }, // 00110110 -> 1/1, 4 bit used
	{ 4,  1,  1, -1 }, // 00110111 -> 1/1, 4 bit used
	{ 4,  1,  1, -1 }, // 00111000 -> 1/1, 4 bit used
	{ 4,  1,  1, -1 }, // 00111001 -> 1/1, 4 bit used
	{ 4,  1,  1, -1 }, // 00111010 -> 1/1, 4 bit used
	{ 4,  1,  1, -1 }, // 00111011 -> 1/1, 4 bit used
	{ 4,  1,  1, -1 }, // 00111100 -> 1/1, 4 bit used
	{ 4,  1,  1, -1 }, // 00111101 -> 1/1, 4 bit used
	{ 4,  1,  1, -1 }, // 00111110 -> 1/1, 4 bit used
	{ 4,  1,  1, -1 }, // 00111111 -> 1/1, 4 bit used
	{ 3,  0,  1, -1 }, // 01000000 -> 0/1, 3 bit used
	{ 3,  0,  1, -1 }, // 01000001 -> 0/1, 3 bit used
	{ 3,  0,  1, -1 }, // 01000010 -> 0/1, 3 bit used
	{ 3,  0,  1, -1 }, // 01000011 -> 0/1, 3 bit used
	{ 3,  0,  1, -1 }, // 01000100 -> 0/1, 3 bit used
	{ 3,  0,  1, -1 }, // 01000101 -> 0/1, 3 bit used
	{ 3,  0,  1, -1 }, // 01000110 -> 0/1, 3 bit used
	{ 3,  0,  1, -1 }, // 01000111 -> 0/1, 3 bit used
	{ 3,  0,  1, -1 }, // 01001000 -> 0/1, 3 bit used
	{ 3,  0,  1, -1 }, // 01001001 -> 0/1, 3 bit used
	{ 3,  0,  1, -1 }, // 01001010 -> 0/1, 3 bit used
	{ 3,  0,  1, -1 }, // 01001011 -> 0/1, 3 bit used
	{ 3,  0,  1, -1 }, // 01001100 -> 0/1, 3 bit used
	{ 3,  0,  1, -1 }, // 01001101 -> 0/1, 3 bit used
	{ 3,  0,  1, -1 }, // 01001110 -> 0/1, 3 bit used
	{ 3,  0,  1, -1 }, // 01001111 -> 0/1, 3 bit used
	{ 3,  0,  1, -1 }, // 01010000 -> 0/1, 3 bit used
	{ 3,  0,  1, -1 }, // 01010001 -> 0/1, 3 bit used
	{ 3,  0,  1, -1 }, // 01010010 -> 0/1, 3 bit used
	{ 3,  0,  1, -1 }, // 01010011 -> 0/1, 3 bit used
	{ 3,  0,  1, -1 }, // 01010100 -> 0/1, 3 bit used
	{ 3,  0,  1, -1 }, // 01010101 -> 0/1, 3 bit used
	{ 3,  0,  1, -1 }, // 01010110 -> 0/1, 3 bit used
	{ 3,  0,  1, -1 }, // 01010111 -> 0/1, 3 bit used
	{ 3,  0,  1, -1 }, // 01011000 -> 0/1, 3 bit used
	{ 3,  0,  1, -1 }, // 01011001 -> 0/1, 3 bit used
	{ 3,  0,  1, -1 }, // 01011010 -> 0/1, 3 bit used
	{ 3,  0,  1, -1 }, // 01011011 -> 0/1, 3 bit used
	{ 3,  0,  1, -1 }, // 01011100 -> 0/1, 3 bit used
	{ 3,  0,  1, -1 }, // 01011101 -> 0/1, 3 bit used
	{ 3,  0,  1, -1 }, // 01011110 -> 0/1, 3 bit used
	{ 3,  0,  1, -1 }, // 01011111 -> 0/1, 3 bit used
	{ 3,  1,  0, -1 }, // 01100000 -> 1/0, 3 bit used
	{ 3,  1,  0, -1 }, // 01100001 -> 1/0, 3 bit used
	{ 3,  1,  0, -1 }, // 01100010 -> 1/0, 3 bit used
	{ 3,  1,  0, -1 }, // 01100011 -> 1/0, 3 bit used
	{ 3,  1,  0, -1 }, // 01100100 -> 1/0, 3 bit used
	{ 3,  1,  0, -1 }, // 01100101 -> 1/0, 3 bit used
	{ 3,  1,  0, -1 }, // 01100110 -> 1/0, 3 bit used
	{ 3,  1,  0, -1 }, // 01100111 -> 1/0, 3 bit used
	{ 3,  1,  0, -1 }, // 01101000 -> 1/0, 3 bit used
	{ 3,  1,  0, -1 }, // 01101001 -> 1/0, 3 bit used
	{ 3,  1,  0, -1 }, // 01101010 -> 1/0, 3 bit used
	{ 3,  1,  0, -1 }, // 01101011 -> 1/0, 3 bit used
	{ 3,  1,  0, -1 }, // 01101100 -> 1/0, 3 bit used
	{ 3,  1,  0, -1 }, // 01101101 -> 1/0, 3 bit used
	{ 3,  1,  0, -1 }, // 01101110 -> 1/0, 3 bit used
	{ 3,  1,  0, -1 }, // 01101111 -> 1/0, 3 bit used
	{ 3,  1,  0, -1 }, // 01110000 -> 1/0, 3 bit used
	{ 3,  1,  0, -1 }, // 01110001 -> 1/0, 3 bit used
	{ 3,  1,  0, -1 }, // 01110010 -> 1/0, 3 bit used
	{ 3,  1,  0, -1 }, // 01110011 -> 1/0, 3 bit used
	{ 3,  1,  0, -1 }, // 01110100 -> 1/0, 3 bit used
	{ 3,  1,  0, -1 }, // 01110101 -> 1/0, 3 bit used
	{ 3,  1,  0, -1 }, // 01110110 -> 1/0, 3 bit used
	{ 3,  1,  0, -1 }, // 01110111 -> 1/0, 3 bit used
	{ 3,  1,  0, -1 }, // 01111000 -> 1/0, 3 bit used
	{ 3,  1,  0, -1 }, // 01111001 -> 1/0, 3 bit used
	{ 3,  1,  0, -1 }, // 01111010 -> 1/0, 3 bit used
	{ 3,  1,  0, -1 }, // 01111011 -> 1/0, 3 bit used
	{ 3,  1,  0, -1 }, // 01111100 -> 1/0, 3 bit used
	{ 3,  1,  0, -1 }, // 01111101 -> 1/0, 3 bit used
	{ 3,  1,  0, -1 }, // 01111110 -> 1/0, 3 bit used
	{ 3,  1,  0, -1 }, // 01111111 -> 1/0, 3 bit used
	{ 1,  0,  0, -1 }, // 10000000 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 10000001 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 10000010 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 10000011 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 10000100 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 10000101 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 10000110 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 10000111 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 10001000 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 10001001 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 10001010 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 10001011 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 10001100 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 10001101 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 10001110 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 10001111 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 10010000 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 10010001 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 10010010 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 10010011 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 10010100 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 10010101 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 10010110 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 10010111 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 10011000 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 10011001 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 10011010 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 10011011 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 10011100 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 10011101 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 10011110 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 10011111 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 10100000 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 10100001 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 10100010 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 10100011 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 10100100 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 10100101 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 10100110 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 10100111 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 10101000 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 10101001 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 10101010 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 10101011 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 10101100 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 10101101 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 10101110 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 10101111 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 10110000 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 10110001 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 10110010 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 10110011 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 10110100 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 10110101 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 10110110 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 10110111 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 10111000 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 10111001 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 10111010 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 10111011 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 10111100 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 10111101 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 10111110 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 10111111 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 11000000 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 11000001 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 11000010 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 11000011 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 11000100 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 11000101 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 11000110 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 11000111 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 11001000 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 11001001 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 11001010 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 11001011 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 11001100 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 11001101 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 11001110 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 11001111 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 11010000 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 11010001 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 11010010 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 11010011 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 11010100 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 11010101 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 11010110 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 11010111 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 11011000 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 11011001 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 11011010 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 11011011 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 11011100 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 11011101 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 11011110 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 11011111 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 11100000 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 11100001 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 11100010 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 11100011 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 11100100 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 11100101 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 11100110 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 11100111 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 11101000 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 11101001 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 11101010 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 11101011 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 11101100 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 11101101 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 11101110 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 11101111 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 11110000 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 11110001 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 11110010 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 11110011 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 11110100 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 11110101 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 11110110 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 11110111 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 11111000 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 11111001 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 11111010 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 11111011 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 11111100 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 11111101 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 11111110 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }  // 11111111 -> 0/0, 1 bit used
};
// extension table 1, prefix 00000000
static huffman_conv htab10_dec_ext1[ 8 ] = {
	{ 3,  7,  7, -1 }, // 000 -> 7/7, 3 bit used
	{ 3,  6,  7, -1 }, // 001 -> 6/7, 3 bit used
	{ 3,  7,  6, -1 }, // 010 -> 7/6, 3 bit used
	{ 3,  5,  7, -1 }, // 011 -> 5/7, 3 bit used
	{ 3,  7,  5, -1 }, // 100 -> 7/5, 3 bit used
	{ 3,  6,  6, -1 }, // 101 -> 6/6, 3 bit used
	{ 2,  4,  7, -1 }, // 110 -> 4/7, 2 bit used
	{ 2,  4,  7, -1 }  // 111 -> 4/7, 2 bit used
};
// extension table 2, prefix 00000001
static huffman_conv htab10_dec_ext2[ 4 ] = {
	{ 2,  7,  4, -1 }, // 00 -> 7/4, 2 bit used
	{ 2,  5,  6, -1 }, // 01 -> 5/6, 2 bit used
	{ 2,  6,  5, -1 }, // 10 -> 6/5, 2 bit used
	{ 2,  3,  7, -1 }  // 11 -> 3/7, 2 bit used
};
// extension table 3, prefix 00000010
static huffman_conv htab10_dec_ext3[ 8 ] = {
	{ 2,  7,  3, -1 }, // 000 -> 7/3, 2 bit used
	{ 2,  7,  3, -1 }, // 001 -> 7/3, 2 bit used
	{ 2,  4,  6, -1 }, // 010 -> 4/6, 2 bit used
	{ 2,  4,  6, -1 }, // 011 -> 4/6, 2 bit used
	{ 3,  5,  5, -1 }, // 100 -> 5/5, 3 bit used
	{ 3,  5,  4, -1 }, // 101 -> 5/4, 3 bit used
	{ 2,  6,  3, -1 }, // 110 -> 6/3, 2 bit used
	{ 2,  6,  3, -1 }  // 111 -> 6/3, 2 bit used
};
// extension table 4, prefix 00000011
static huffman_conv htab10_dec_ext4[ 2 ] = {
	{ 1,  2,  7, -1 }, // 0 -> 2/7, 1 bit used
	{ 1,  7,  2, -1 }  // 1 -> 7/2, 1 bit used
};
// extension table 5, prefix 00000100
static huffman_conv htab10_dec_ext5[ 4 ] = {
	{ 2,  6,  4, -1 }, // 00 -> 6/4, 2 bit used
	{ 2,  0,  7, -1 }, // 01 -> 0/7, 2 bit used
	{ 1,  7,  0, -1 }, // 10 -> 7/0, 1 bit used
	{ 1,  7,  0, -1 }  // 11 -> 7/0, 1 bit used
};
// extension table 6, prefix 00000101
static huffman_conv htab10_dec_ext6[ 4 ] = {
	{ 1,  6,  2, -1 }, // 00 -> 6/2, 1 bit used
	{ 1,  6,  2, -1 }, // 01 -> 6/2, 1 bit used
	{ 2,  4,  5, -1 }, // 10 -> 4/5, 2 bit used
	{ 2,  3,  5, -1 }  // 11 -> 3/5, 2 bit used
};
// extension table 7, prefix 00000110
static huffman_conv htab10_dec_ext7[ 4 ] = {
	{ 1,  0,  6, -1 }, // 00 -> 0/6, 1 bit used
	{ 1,  0,  6, -1 }, // 01 -> 0/6, 1 bit used
	{ 2,  5,  3, -1 }, // 10 -> 5/3, 2 bit used
	{ 2,  4,  4, -1 }  // 11 -> 4/4, 2 bit used
};
// extension table 8, prefix 00001001
static huffman_conv htab10_dec_ext8[ 2 ] = {
	{ 1,  3,  6, -1 }, // 0 -> 3/6, 1 bit used
	{ 1,  2,  6, -1 }  // 1 -> 2/6, 1 bit used
};
// extension table 9, prefix 00001010
static huffman_conv htab10_dec_ext9[ 4 ] = {
	{ 2,  2,  5, -1 }, // 00 -> 2/5, 2 bit used
	{ 2,  5,  2, -1 }, // 01 -> 5/2, 2 bit used
	{ 1,  1,  5, -1 }, // 10 -> 1/5, 1 bit used
	{ 1,  1,  5, -1 }  // 11 -> 1/5, 1 bit used
};
// extension table 10, prefix 00001011
static huffman_conv htab10_dec_ext10[ 4 ] = {
	{ 1,  5,  1, -1 }, // 00 -> 5/1, 1 bit used
	{ 1,  5,  1, -1 }, // 01 -> 5/1, 1 bit used
	{ 2,  3,  4, -1 }, // 10 -> 3/4, 2 bit used
	{ 2,  4,  3, -1 }  // 11 -> 4/3, 2 bit used
};
// extension table 11, prefix 00001111
static huffman_conv htab10_dec_ext11[ 2 ] = {
	{ 1,  0,  5, -1 }, // 0 -> 0/5, 1 bit used
	{ 1,  5,  0, -1 }  // 1 -> 5/0, 1 bit used
};
// extension table 12, prefix 00010000
static huffman_conv htab10_dec_ext12[ 2 ] = {
	{ 1,  2,  4, -1 }, // 0 -> 2/4, 1 bit used
	{ 1,  4,  2, -1 }  // 1 -> 4/2, 1 bit used
};
// extension table 13, prefix 00010001
static huffman_conv htab10_dec_ext13[ 2 ] = {
	{ 1,  3,  3, -1 }, // 0 -> 3/3, 1 bit used
	{ 1,  0,  4, -1 }  // 1 -> 0/4, 1 bit used
};
// big values conversion table #10, total size: 306, ext tables: 13
static huffman_conv_set htab10_dec[ 14 ] = {
	{ htab10_dec_start, 8 }, // start table
	{ htab10_dec_ext1, 3 }, // ext table #1
	{ htab10_dec_ext2, 2 }, // ext table #2
	{ htab10_dec_ext3, 3 }, // ext table #3
	{ htab10_dec_ext4, 1 }, // ext table #4
	{ htab10_dec_ext5, 2 }, // ext table #5
	{ htab10_dec_ext6, 2 }, // ext table #6
	{ htab10_dec_ext7, 2 }, // ext table #7
	{ htab10_dec_ext8, 1 }, // ext table #8
	{ htab10_dec_ext9, 2 }, // ext table #9
	{ htab10_dec_ext10, 2 }, // ext table #10
	{ htab10_dec_ext11, 1 }, // ext table #11
	{ htab10_dec_ext12, 1 }, // ext table #12
	{ htab10_dec_ext13, 1 }  // ext table #13
};

/* -----------------------------------------------
	big values conversion table 11
	----------------------------------------------- */
static huffman_conv htab11_dec_start[ 256 ] = {
	{ 8, -1, -1,  1 }, // 00000000 -> extension table #1
	{ 8, -1, -1,  2 }, // 00000001 -> extension table #2
	{ 8, -1, -1,  3 }, // 00000010 -> extension table #3
	{ 8, -1, -1,  4 }, // 00000011 -> extension table #4
	{ 8, -1, -1,  5 }, // 00000100 -> extension table #5
	{ 8,  2,  7, -1 }, // 00000101 -> 2/7, 8 bit used
	{ 8,  7,  2, -1 }, // 00000110 -> 7/2, 8 bit used
	{ 8, -1, -1,  6 }, // 00000111 -> extension table #6
	{ 7,  7,  1, -1 }, // 00001000 -> 7/1, 7 bit used
	{ 7,  7,  1, -1 }, // 00001001 -> 7/1, 7 bit used
	{ 8,  1,  7, -1 }, // 00001010 -> 1/7, 8 bit used
	{ 8,  7,  0, -1 }, // 00001011 -> 7/0, 8 bit used
	{ 8,  3,  6, -1 }, // 00001100 -> 3/6, 8 bit used
	{ 8,  6,  3, -1 }, // 00001101 -> 6/3, 8 bit used
	{ 8,  6,  0, -1 }, // 00001110 -> 6/0, 8 bit used
	{ 8, -1, -1,  7 }, // 00001111 -> extension table #7
	{ 8, -1, -1,  8 }, // 00010000 -> extension table #8
	{ 8,  1,  5, -1 }, // 00010001 -> 1/5, 8 bit used
	{ 7,  6,  2, -1 }, // 00010010 -> 6/2, 7 bit used
	{ 7,  6,  2, -1 }, // 00010011 -> 6/2, 7 bit used
	{ 8,  2,  6, -1 }, // 00010100 -> 2/6, 8 bit used
	{ 8,  0,  6, -1 }, // 00010101 -> 0/6, 8 bit used
	{ 7,  1,  6, -1 }, // 00010110 -> 1/6, 7 bit used
	{ 7,  1,  6, -1 }, // 00010111 -> 1/6, 7 bit used
	{ 7,  6,  1, -1 }, // 00011000 -> 6/1, 7 bit used
	{ 7,  6,  1, -1 }, // 00011001 -> 6/1, 7 bit used
	{ 8,  5,  1, -1 }, // 00011010 -> 5/1, 8 bit used
	{ 8,  3,  4, -1 }, // 00011011 -> 3/4, 8 bit used
	{ 8,  5,  0, -1 }, // 00011100 -> 5/0, 8 bit used
	{ 8, -1, -1,  9 }, // 00011101 -> extension table #9
	{ 8,  2,  4, -1 }, // 00011110 -> 2/4, 8 bit used
	{ 8,  4,  2, -1 }, // 00011111 -> 4/2, 8 bit used
	{ 8,  1,  4, -1 }, // 00100000 -> 1/4, 8 bit used
	{ 8,  4,  1, -1 }, // 00100001 -> 4/1, 8 bit used
	{ 8,  0,  4, -1 }, // 00100010 -> 0/4, 8 bit used
	{ 8,  4,  0, -1 }, // 00100011 -> 4/0, 8 bit used
	{ 7,  2,  3, -1 }, // 00100100 -> 2/3, 7 bit used
	{ 7,  2,  3, -1 }, // 00100101 -> 2/3, 7 bit used
	{ 7,  3,  2, -1 }, // 00100110 -> 3/2, 7 bit used
	{ 7,  3,  2, -1 }, // 00100111 -> 3/2, 7 bit used
	{ 6,  1,  3, -1 }, // 00101000 -> 1/3, 6 bit used
	{ 6,  1,  3, -1 }, // 00101001 -> 1/3, 6 bit used
	{ 6,  1,  3, -1 }, // 00101010 -> 1/3, 6 bit used
	{ 6,  1,  3, -1 }, // 00101011 -> 1/3, 6 bit used
	{ 6,  3,  1, -1 }, // 00101100 -> 3/1, 6 bit used
	{ 6,  3,  1, -1 }, // 00101101 -> 3/1, 6 bit used
	{ 6,  3,  1, -1 }, // 00101110 -> 3/1, 6 bit used
	{ 6,  3,  1, -1 }, // 00101111 -> 3/1, 6 bit used
	{ 7,  0,  3, -1 }, // 00110000 -> 0/3, 7 bit used
	{ 7,  0,  3, -1 }, // 00110001 -> 0/3, 7 bit used
	{ 7,  3,  0, -1 }, // 00110010 -> 3/0, 7 bit used
	{ 7,  3,  0, -1 }, // 00110011 -> 3/0, 7 bit used
	{ 6,  2,  2, -1 }, // 00110100 -> 2/2, 6 bit used
	{ 6,  2,  2, -1 }, // 00110101 -> 2/2, 6 bit used
	{ 6,  2,  2, -1 }, // 00110110 -> 2/2, 6 bit used
	{ 6,  2,  2, -1 }, // 00110111 -> 2/2, 6 bit used
	{ 5,  2,  1, -1 }, // 00111000 -> 2/1, 5 bit used
	{ 5,  2,  1, -1 }, // 00111001 -> 2/1, 5 bit used
	{ 5,  2,  1, -1 }, // 00111010 -> 2/1, 5 bit used
	{ 5,  2,  1, -1 }, // 00111011 -> 2/1, 5 bit used
	{ 5,  2,  1, -1 }, // 00111100 -> 2/1, 5 bit used
	{ 5,  2,  1, -1 }, // 00111101 -> 2/1, 5 bit used
	{ 5,  2,  1, -1 }, // 00111110 -> 2/1, 5 bit used
	{ 5,  2,  1, -1 }, // 00111111 -> 2/1, 5 bit used
	{ 4,  1,  2, -1 }, // 01000000 -> 1/2, 4 bit used
	{ 4,  1,  2, -1 }, // 01000001 -> 1/2, 4 bit used
	{ 4,  1,  2, -1 }, // 01000010 -> 1/2, 4 bit used
	{ 4,  1,  2, -1 }, // 01000011 -> 1/2, 4 bit used
	{ 4,  1,  2, -1 }, // 01000100 -> 1/2, 4 bit used
	{ 4,  1,  2, -1 }, // 01000101 -> 1/2, 4 bit used
	{ 4,  1,  2, -1 }, // 01000110 -> 1/2, 4 bit used
	{ 4,  1,  2, -1 }, // 01000111 -> 1/2, 4 bit used
	{ 4,  1,  2, -1 }, // 01001000 -> 1/2, 4 bit used
	{ 4,  1,  2, -1 }, // 01001001 -> 1/2, 4 bit used
	{ 4,  1,  2, -1 }, // 01001010 -> 1/2, 4 bit used
	{ 4,  1,  2, -1 }, // 01001011 -> 1/2, 4 bit used
	{ 4,  1,  2, -1 }, // 01001100 -> 1/2, 4 bit used
	{ 4,  1,  2, -1 }, // 01001101 -> 1/2, 4 bit used
	{ 4,  1,  2, -1 }, // 01001110 -> 1/2, 4 bit used
	{ 4,  1,  2, -1 }, // 01001111 -> 1/2, 4 bit used
	{ 5,  0,  2, -1 }, // 01010000 -> 0/2, 5 bit used
	{ 5,  0,  2, -1 }, // 01010001 -> 0/2, 5 bit used
	{ 5,  0,  2, -1 }, // 01010010 -> 0/2, 5 bit used
	{ 5,  0,  2, -1 }, // 01010011 -> 0/2, 5 bit used
	{ 5,  0,  2, -1 }, // 01010100 -> 0/2, 5 bit used
	{ 5,  0,  2, -1 }, // 01010101 -> 0/2, 5 bit used
	{ 5,  0,  2, -1 }, // 01010110 -> 0/2, 5 bit used
	{ 5,  0,  2, -1 }, // 01010111 -> 0/2, 5 bit used
	{ 5,  2,  0, -1 }, // 01011000 -> 2/0, 5 bit used
	{ 5,  2,  0, -1 }, // 01011001 -> 2/0, 5 bit used
	{ 5,  2,  0, -1 }, // 01011010 -> 2/0, 5 bit used
	{ 5,  2,  0, -1 }, // 01011011 -> 2/0, 5 bit used
	{ 5,  2,  0, -1 }, // 01011100 -> 2/0, 5 bit used
	{ 5,  2,  0, -1 }, // 01011101 -> 2/0, 5 bit used
	{ 5,  2,  0, -1 }, // 01011110 -> 2/0, 5 bit used
	{ 5,  2,  0, -1 }, // 01011111 -> 2/0, 5 bit used
	{ 3,  1,  1, -1 }, // 01100000 -> 1/1, 3 bit used
	{ 3,  1,  1, -1 }, // 01100001 -> 1/1, 3 bit used
	{ 3,  1,  1, -1 }, // 01100010 -> 1/1, 3 bit used
	{ 3,  1,  1, -1 }, // 01100011 -> 1/1, 3 bit used
	{ 3,  1,  1, -1 }, // 01100100 -> 1/1, 3 bit used
	{ 3,  1,  1, -1 }, // 01100101 -> 1/1, 3 bit used
	{ 3,  1,  1, -1 }, // 01100110 -> 1/1, 3 bit used
	{ 3,  1,  1, -1 }, // 01100111 -> 1/1, 3 bit used
	{ 3,  1,  1, -1 }, // 01101000 -> 1/1, 3 bit used
	{ 3,  1,  1, -1 }, // 01101001 -> 1/1, 3 bit used
	{ 3,  1,  1, -1 }, // 01101010 -> 1/1, 3 bit used
	{ 3,  1,  1, -1 }, // 01101011 -> 1/1, 3 bit used
	{ 3,  1,  1, -1 }, // 01101100 -> 1/1, 3 bit used
	{ 3,  1,  1, -1 }, // 01101101 -> 1/1, 3 bit used
	{ 3,  1,  1, -1 }, // 01101110 -> 1/1, 3 bit used
	{ 3,  1,  1, -1 }, // 01101111 -> 1/1, 3 bit used
	{ 3,  1,  1, -1 }, // 01110000 -> 1/1, 3 bit used
	{ 3,  1,  1, -1 }, // 01110001 -> 1/1, 3 bit used
	{ 3,  1,  1, -1 }, // 01110010 -> 1/1, 3 bit used
	{ 3,  1,  1, -1 }, // 01110011 -> 1/1, 3 bit used
	{ 3,  1,  1, -1 }, // 01110100 -> 1/1, 3 bit used
	{ 3,  1,  1, -1 }, // 01110101 -> 1/1, 3 bit used
	{ 3,  1,  1, -1 }, // 01110110 -> 1/1, 3 bit used
	{ 3,  1,  1, -1 }, // 01110111 -> 1/1, 3 bit used
	{ 3,  1,  1, -1 }, // 01111000 -> 1/1, 3 bit used
	{ 3,  1,  1, -1 }, // 01111001 -> 1/1, 3 bit used
	{ 3,  1,  1, -1 }, // 01111010 -> 1/1, 3 bit used
	{ 3,  1,  1, -1 }, // 01111011 -> 1/1, 3 bit used
	{ 3,  1,  1, -1 }, // 01111100 -> 1/1, 3 bit used
	{ 3,  1,  1, -1 }, // 01111101 -> 1/1, 3 bit used
	{ 3,  1,  1, -1 }, // 01111110 -> 1/1, 3 bit used
	{ 3,  1,  1, -1 }, // 01111111 -> 1/1, 3 bit used
	{ 3,  0,  1, -1 }, // 10000000 -> 0/1, 3 bit used
	{ 3,  0,  1, -1 }, // 10000001 -> 0/1, 3 bit used
	{ 3,  0,  1, -1 }, // 10000010 -> 0/1, 3 bit used
	{ 3,  0,  1, -1 }, // 10000011 -> 0/1, 3 bit used
	{ 3,  0,  1, -1 }, // 10000100 -> 0/1, 3 bit used
	{ 3,  0,  1, -1 }, // 10000101 -> 0/1, 3 bit used
	{ 3,  0,  1, -1 }, // 10000110 -> 0/1, 3 bit used
	{ 3,  0,  1, -1 }, // 10000111 -> 0/1, 3 bit used
	{ 3,  0,  1, -1 }, // 10001000 -> 0/1, 3 bit used
	{ 3,  0,  1, -1 }, // 10001001 -> 0/1, 3 bit used
	{ 3,  0,  1, -1 }, // 10001010 -> 0/1, 3 bit used
	{ 3,  0,  1, -1 }, // 10001011 -> 0/1, 3 bit used
	{ 3,  0,  1, -1 }, // 10001100 -> 0/1, 3 bit used
	{ 3,  0,  1, -1 }, // 10001101 -> 0/1, 3 bit used
	{ 3,  0,  1, -1 }, // 10001110 -> 0/1, 3 bit used
	{ 3,  0,  1, -1 }, // 10001111 -> 0/1, 3 bit used
	{ 3,  0,  1, -1 }, // 10010000 -> 0/1, 3 bit used
	{ 3,  0,  1, -1 }, // 10010001 -> 0/1, 3 bit used
	{ 3,  0,  1, -1 }, // 10010010 -> 0/1, 3 bit used
	{ 3,  0,  1, -1 }, // 10010011 -> 0/1, 3 bit used
	{ 3,  0,  1, -1 }, // 10010100 -> 0/1, 3 bit used
	{ 3,  0,  1, -1 }, // 10010101 -> 0/1, 3 bit used
	{ 3,  0,  1, -1 }, // 10010110 -> 0/1, 3 bit used
	{ 3,  0,  1, -1 }, // 10010111 -> 0/1, 3 bit used
	{ 3,  0,  1, -1 }, // 10011000 -> 0/1, 3 bit used
	{ 3,  0,  1, -1 }, // 10011001 -> 0/1, 3 bit used
	{ 3,  0,  1, -1 }, // 10011010 -> 0/1, 3 bit used
	{ 3,  0,  1, -1 }, // 10011011 -> 0/1, 3 bit used
	{ 3,  0,  1, -1 }, // 10011100 -> 0/1, 3 bit used
	{ 3,  0,  1, -1 }, // 10011101 -> 0/1, 3 bit used
	{ 3,  0,  1, -1 }, // 10011110 -> 0/1, 3 bit used
	{ 3,  0,  1, -1 }, // 10011111 -> 0/1, 3 bit used
	{ 3,  1,  0, -1 }, // 10100000 -> 1/0, 3 bit used
	{ 3,  1,  0, -1 }, // 10100001 -> 1/0, 3 bit used
	{ 3,  1,  0, -1 }, // 10100010 -> 1/0, 3 bit used
	{ 3,  1,  0, -1 }, // 10100011 -> 1/0, 3 bit used
	{ 3,  1,  0, -1 }, // 10100100 -> 1/0, 3 bit used
	{ 3,  1,  0, -1 }, // 10100101 -> 1/0, 3 bit used
	{ 3,  1,  0, -1 }, // 10100110 -> 1/0, 3 bit used
	{ 3,  1,  0, -1 }, // 10100111 -> 1/0, 3 bit used
	{ 3,  1,  0, -1 }, // 10101000 -> 1/0, 3 bit used
	{ 3,  1,  0, -1 }, // 10101001 -> 1/0, 3 bit used
	{ 3,  1,  0, -1 }, // 10101010 -> 1/0, 3 bit used
	{ 3,  1,  0, -1 }, // 10101011 -> 1/0, 3 bit used
	{ 3,  1,  0, -1 }, // 10101100 -> 1/0, 3 bit used
	{ 3,  1,  0, -1 }, // 10101101 -> 1/0, 3 bit used
	{ 3,  1,  0, -1 }, // 10101110 -> 1/0, 3 bit used
	{ 3,  1,  0, -1 }, // 10101111 -> 1/0, 3 bit used
	{ 3,  1,  0, -1 }, // 10110000 -> 1/0, 3 bit used
	{ 3,  1,  0, -1 }, // 10110001 -> 1/0, 3 bit used
	{ 3,  1,  0, -1 }, // 10110010 -> 1/0, 3 bit used
	{ 3,  1,  0, -1 }, // 10110011 -> 1/0, 3 bit used
	{ 3,  1,  0, -1 }, // 10110100 -> 1/0, 3 bit used
	{ 3,  1,  0, -1 }, // 10110101 -> 1/0, 3 bit used
	{ 3,  1,  0, -1 }, // 10110110 -> 1/0, 3 bit used
	{ 3,  1,  0, -1 }, // 10110111 -> 1/0, 3 bit used
	{ 3,  1,  0, -1 }, // 10111000 -> 1/0, 3 bit used
	{ 3,  1,  0, -1 }, // 10111001 -> 1/0, 3 bit used
	{ 3,  1,  0, -1 }, // 10111010 -> 1/0, 3 bit used
	{ 3,  1,  0, -1 }, // 10111011 -> 1/0, 3 bit used
	{ 3,  1,  0, -1 }, // 10111100 -> 1/0, 3 bit used
	{ 3,  1,  0, -1 }, // 10111101 -> 1/0, 3 bit used
	{ 3,  1,  0, -1 }, // 10111110 -> 1/0, 3 bit used
	{ 3,  1,  0, -1 }, // 10111111 -> 1/0, 3 bit used
	{ 2,  0,  0, -1 }, // 11000000 -> 0/0, 2 bit used
	{ 2,  0,  0, -1 }, // 11000001 -> 0/0, 2 bit used
	{ 2,  0,  0, -1 }, // 11000010 -> 0/0, 2 bit used
	{ 2,  0,  0, -1 }, // 11000011 -> 0/0, 2 bit used
	{ 2,  0,  0, -1 }, // 11000100 -> 0/0, 2 bit used
	{ 2,  0,  0, -1 }, // 11000101 -> 0/0, 2 bit used
	{ 2,  0,  0, -1 }, // 11000110 -> 0/0, 2 bit used
	{ 2,  0,  0, -1 }, // 11000111 -> 0/0, 2 bit used
	{ 2,  0,  0, -1 }, // 11001000 -> 0/0, 2 bit used
	{ 2,  0,  0, -1 }, // 11001001 -> 0/0, 2 bit used
	{ 2,  0,  0, -1 }, // 11001010 -> 0/0, 2 bit used
	{ 2,  0,  0, -1 }, // 11001011 -> 0/0, 2 bit used
	{ 2,  0,  0, -1 }, // 11001100 -> 0/0, 2 bit used
	{ 2,  0,  0, -1 }, // 11001101 -> 0/0, 2 bit used
	{ 2,  0,  0, -1 }, // 11001110 -> 0/0, 2 bit used
	{ 2,  0,  0, -1 }, // 11001111 -> 0/0, 2 bit used
	{ 2,  0,  0, -1 }, // 11010000 -> 0/0, 2 bit used
	{ 2,  0,  0, -1 }, // 11010001 -> 0/0, 2 bit used
	{ 2,  0,  0, -1 }, // 11010010 -> 0/0, 2 bit used
	{ 2,  0,  0, -1 }, // 11010011 -> 0/0, 2 bit used
	{ 2,  0,  0, -1 }, // 11010100 -> 0/0, 2 bit used
	{ 2,  0,  0, -1 }, // 11010101 -> 0/0, 2 bit used
	{ 2,  0,  0, -1 }, // 11010110 -> 0/0, 2 bit used
	{ 2,  0,  0, -1 }, // 11010111 -> 0/0, 2 bit used
	{ 2,  0,  0, -1 }, // 11011000 -> 0/0, 2 bit used
	{ 2,  0,  0, -1 }, // 11011001 -> 0/0, 2 bit used
	{ 2,  0,  0, -1 }, // 11011010 -> 0/0, 2 bit used
	{ 2,  0,  0, -1 }, // 11011011 -> 0/0, 2 bit used
	{ 2,  0,  0, -1 }, // 11011100 -> 0/0, 2 bit used
	{ 2,  0,  0, -1 }, // 11011101 -> 0/0, 2 bit used
	{ 2,  0,  0, -1 }, // 11011110 -> 0/0, 2 bit used
	{ 2,  0,  0, -1 }, // 11011111 -> 0/0, 2 bit used
	{ 2,  0,  0, -1 }, // 11100000 -> 0/0, 2 bit used
	{ 2,  0,  0, -1 }, // 11100001 -> 0/0, 2 bit used
	{ 2,  0,  0, -1 }, // 11100010 -> 0/0, 2 bit used
	{ 2,  0,  0, -1 }, // 11100011 -> 0/0, 2 bit used
	{ 2,  0,  0, -1 }, // 11100100 -> 0/0, 2 bit used
	{ 2,  0,  0, -1 }, // 11100101 -> 0/0, 2 bit used
	{ 2,  0,  0, -1 }, // 11100110 -> 0/0, 2 bit used
	{ 2,  0,  0, -1 }, // 11100111 -> 0/0, 2 bit used
	{ 2,  0,  0, -1 }, // 11101000 -> 0/0, 2 bit used
	{ 2,  0,  0, -1 }, // 11101001 -> 0/0, 2 bit used
	{ 2,  0,  0, -1 }, // 11101010 -> 0/0, 2 bit used
	{ 2,  0,  0, -1 }, // 11101011 -> 0/0, 2 bit used
	{ 2,  0,  0, -1 }, // 11101100 -> 0/0, 2 bit used
	{ 2,  0,  0, -1 }, // 11101101 -> 0/0, 2 bit used
	{ 2,  0,  0, -1 }, // 11101110 -> 0/0, 2 bit used
	{ 2,  0,  0, -1 }, // 11101111 -> 0/0, 2 bit used
	{ 2,  0,  0, -1 }, // 11110000 -> 0/0, 2 bit used
	{ 2,  0,  0, -1 }, // 11110001 -> 0/0, 2 bit used
	{ 2,  0,  0, -1 }, // 11110010 -> 0/0, 2 bit used
	{ 2,  0,  0, -1 }, // 11110011 -> 0/0, 2 bit used
	{ 2,  0,  0, -1 }, // 11110100 -> 0/0, 2 bit used
	{ 2,  0,  0, -1 }, // 11110101 -> 0/0, 2 bit used
	{ 2,  0,  0, -1 }, // 11110110 -> 0/0, 2 bit used
	{ 2,  0,  0, -1 }, // 11110111 -> 0/0, 2 bit used
	{ 2,  0,  0, -1 }, // 11111000 -> 0/0, 2 bit used
	{ 2,  0,  0, -1 }, // 11111001 -> 0/0, 2 bit used
	{ 2,  0,  0, -1 }, // 11111010 -> 0/0, 2 bit used
	{ 2,  0,  0, -1 }, // 11111011 -> 0/0, 2 bit used
	{ 2,  0,  0, -1 }, // 11111100 -> 0/0, 2 bit used
	{ 2,  0,  0, -1 }, // 11111101 -> 0/0, 2 bit used
	{ 2,  0,  0, -1 }, // 11111110 -> 0/0, 2 bit used
	{ 2,  0,  0, -1 }  // 11111111 -> 0/0, 2 bit used
};
// extension table 1, prefix 00000000
static huffman_conv htab11_dec_ext1[ 4 ] = {
	{ 2,  7,  7, -1 }, // 00 -> 7/7, 2 bit used
	{ 2,  6,  7, -1 }, // 01 -> 6/7, 2 bit used
	{ 2,  7,  6, -1 }, // 10 -> 7/6, 2 bit used
	{ 2,  7,  5, -1 }  // 11 -> 7/5, 2 bit used
};
// extension table 2, prefix 00000001
static huffman_conv htab11_dec_ext2[ 8 ] = {
	{ 2,  6,  6, -1 }, // 000 -> 6/6, 2 bit used
	{ 2,  6,  6, -1 }, // 001 -> 6/6, 2 bit used
	{ 2,  4,  7, -1 }, // 010 -> 4/7, 2 bit used
	{ 2,  4,  7, -1 }, // 011 -> 4/7, 2 bit used
	{ 2,  7,  4, -1 }, // 100 -> 7/4, 2 bit used
	{ 2,  7,  4, -1 }, // 101 -> 7/4, 2 bit used
	{ 3,  5,  7, -1 }, // 110 -> 5/7, 3 bit used
	{ 3,  5,  5, -1 }  // 111 -> 5/5, 3 bit used
};
// extension table 3, prefix 00000010
static huffman_conv htab11_dec_ext3[ 4 ] = {
	{ 2,  5,  6, -1 }, // 00 -> 5/6, 2 bit used
	{ 2,  6,  5, -1 }, // 01 -> 6/5, 2 bit used
	{ 1,  3,  7, -1 }, // 10 -> 3/7, 1 bit used
	{ 1,  3,  7, -1 }  // 11 -> 3/7, 1 bit used
};
// extension table 4, prefix 00000011
static huffman_conv htab11_dec_ext4[ 2 ] = {
	{ 1,  7,  3, -1 }, // 0 -> 7/3, 1 bit used
	{ 1,  4,  6, -1 }  // 1 -> 4/6, 1 bit used
};
// extension table 5, prefix 00000100
static huffman_conv htab11_dec_ext5[ 4 ] = {
	{ 2,  4,  5, -1 }, // 00 -> 4/5, 2 bit used
	{ 2,  5,  4, -1 }, // 01 -> 5/4, 2 bit used
	{ 2,  3,  5, -1 }, // 10 -> 3/5, 2 bit used
	{ 2,  5,  3, -1 }  // 11 -> 5/3, 2 bit used
};
// extension table 6, prefix 00000111
static huffman_conv htab11_dec_ext6[ 2 ] = {
	{ 1,  6,  4, -1 }, // 0 -> 6/4, 1 bit used
	{ 1,  0,  7, -1 }  // 1 -> 0/7, 1 bit used
};
// extension table 7, prefix 00001111
static huffman_conv htab11_dec_ext7[ 2 ] = {
	{ 1,  4,  4, -1 }, // 0 -> 4/4, 1 bit used
	{ 1,  2,  5, -1 }  // 1 -> 2/5, 1 bit used
};
// extension table 8, prefix 00010000
static huffman_conv htab11_dec_ext8[ 2 ] = {
	{ 1,  5,  2, -1 }, // 0 -> 5/2, 1 bit used
	{ 1,  0,  5, -1 }  // 1 -> 0/5, 1 bit used
};
// extension table 9, prefix 00011101
static huffman_conv htab11_dec_ext9[ 2 ] = {
	{ 1,  4,  3, -1 }, // 0 -> 4/3, 1 bit used
	{ 1,  3,  3, -1 }  // 1 -> 3/3, 1 bit used
};
// big values conversion table #11, total size: 286, ext tables: 9
static huffman_conv_set htab11_dec[ 10 ] = {
	{ htab11_dec_start, 8 }, // start table
	{ htab11_dec_ext1, 2 }, // ext table #1
	{ htab11_dec_ext2, 3 }, // ext table #2
	{ htab11_dec_ext3, 2 }, // ext table #3
	{ htab11_dec_ext4, 1 }, // ext table #4
	{ htab11_dec_ext5, 2 }, // ext table #5
	{ htab11_dec_ext6, 1 }, // ext table #6
	{ htab11_dec_ext7, 1 }, // ext table #7
	{ htab11_dec_ext8, 1 }, // ext table #8
	{ htab11_dec_ext9, 1 }  // ext table #9
};

/* -----------------------------------------------
	big values conversion table 12
	----------------------------------------------- */
static huffman_conv htab12_dec_start[ 256 ] = {
	{ 8, -1, -1,  1 }, // 00000000 -> extension table #1
	{ 8, -1, -1,  2 }, // 00000001 -> extension table #2
	{ 8, -1, -1,  3 }, // 00000010 -> extension table #3
	{ 8, -1, -1,  4 }, // 00000011 -> extension table #4
	{ 8,  5,  6, -1 }, // 00000100 -> 5/6, 8 bit used
	{ 8,  3,  7, -1 }, // 00000101 -> 3/7, 8 bit used
	{ 8, -1, -1,  5 }, // 00000110 -> extension table #5
	{ 8,  2,  7, -1 }, // 00000111 -> 2/7, 8 bit used
	{ 8,  7,  2, -1 }, // 00001000 -> 7/2, 8 bit used
	{ 8,  4,  6, -1 }, // 00001001 -> 4/6, 8 bit used
	{ 8,  6,  4, -1 }, // 00001010 -> 6/4, 8 bit used
	{ 8,  1,  7, -1 }, // 00001011 -> 1/7, 8 bit used
	{ 8,  7,  1, -1 }, // 00001100 -> 7/1, 8 bit used
	{ 8, -1, -1,  6 }, // 00001101 -> extension table #6
	{ 8,  3,  6, -1 }, // 00001110 -> 3/6, 8 bit used
	{ 8,  6,  3, -1 }, // 00001111 -> 6/3, 8 bit used
	{ 8,  4,  5, -1 }, // 00010000 -> 4/5, 8 bit used
	{ 8,  5,  4, -1 }, // 00010001 -> 5/4, 8 bit used
	{ 8,  4,  4, -1 }, // 00010010 -> 4/4, 8 bit used
	{ 8, -1, -1,  7 }, // 00010011 -> extension table #7
	{ 7,  2,  6, -1 }, // 00010100 -> 2/6, 7 bit used
	{ 7,  2,  6, -1 }, // 00010101 -> 2/6, 7 bit used
	{ 7,  6,  2, -1 }, // 00010110 -> 6/2, 7 bit used
	{ 7,  6,  2, -1 }, // 00010111 -> 6/2, 7 bit used
	{ 7,  6,  1, -1 }, // 00011000 -> 6/1, 7 bit used
	{ 7,  6,  1, -1 }, // 00011001 -> 6/1, 7 bit used
	{ 8,  1,  6, -1 }, // 00011010 -> 1/6, 8 bit used
	{ 8,  6,  0, -1 }, // 00011011 -> 6/0, 8 bit used
	{ 8,  3,  5, -1 }, // 00011100 -> 3/5, 8 bit used
	{ 8,  5,  3, -1 }, // 00011101 -> 5/3, 8 bit used
	{ 8,  2,  5, -1 }, // 00011110 -> 2/5, 8 bit used
	{ 8,  5,  2, -1 }, // 00011111 -> 5/2, 8 bit used
	{ 7,  1,  5, -1 }, // 00100000 -> 1/5, 7 bit used
	{ 7,  1,  5, -1 }, // 00100001 -> 1/5, 7 bit used
	{ 7,  5,  1, -1 }, // 00100010 -> 5/1, 7 bit used
	{ 7,  5,  1, -1 }, // 00100011 -> 5/1, 7 bit used
	{ 7,  3,  4, -1 }, // 00100100 -> 3/4, 7 bit used
	{ 7,  3,  4, -1 }, // 00100101 -> 3/4, 7 bit used
	{ 7,  4,  3, -1 }, // 00100110 -> 4/3, 7 bit used
	{ 7,  4,  3, -1 }, // 00100111 -> 4/3, 7 bit used
	{ 8,  5,  0, -1 }, // 00101000 -> 5/0, 8 bit used
	{ 8,  0,  4, -1 }, // 00101001 -> 0/4, 8 bit used
	{ 7,  2,  4, -1 }, // 00101010 -> 2/4, 7 bit used
	{ 7,  2,  4, -1 }, // 00101011 -> 2/4, 7 bit used
	{ 7,  4,  2, -1 }, // 00101100 -> 4/2, 7 bit used
	{ 7,  4,  2, -1 }, // 00101101 -> 4/2, 7 bit used
	{ 7,  1,  4, -1 }, // 00101110 -> 1/4, 7 bit used
	{ 7,  1,  4, -1 }, // 00101111 -> 1/4, 7 bit used
	{ 6,  3,  3, -1 }, // 00110000 -> 3/3, 6 bit used
	{ 6,  3,  3, -1 }, // 00110001 -> 3/3, 6 bit used
	{ 6,  3,  3, -1 }, // 00110010 -> 3/3, 6 bit used
	{ 6,  3,  3, -1 }, // 00110011 -> 3/3, 6 bit used
	{ 6,  4,  1, -1 }, // 00110100 -> 4/1, 6 bit used
	{ 6,  4,  1, -1 }, // 00110101 -> 4/1, 6 bit used
	{ 6,  4,  1, -1 }, // 00110110 -> 4/1, 6 bit used
	{ 6,  4,  1, -1 }, // 00110111 -> 4/1, 6 bit used
	{ 6,  2,  3, -1 }, // 00111000 -> 2/3, 6 bit used
	{ 6,  2,  3, -1 }, // 00111001 -> 2/3, 6 bit used
	{ 6,  2,  3, -1 }, // 00111010 -> 2/3, 6 bit used
	{ 6,  2,  3, -1 }, // 00111011 -> 2/3, 6 bit used
	{ 6,  3,  2, -1 }, // 00111100 -> 3/2, 6 bit used
	{ 6,  3,  2, -1 }, // 00111101 -> 3/2, 6 bit used
	{ 6,  3,  2, -1 }, // 00111110 -> 3/2, 6 bit used
	{ 6,  3,  2, -1 }, // 00111111 -> 3/2, 6 bit used
	{ 7,  4,  0, -1 }, // 01000000 -> 4/0, 7 bit used
	{ 7,  4,  0, -1 }, // 01000001 -> 4/0, 7 bit used
	{ 7,  0,  3, -1 }, // 01000010 -> 0/3, 7 bit used
	{ 7,  0,  3, -1 }, // 01000011 -> 0/3, 7 bit used
	{ 6,  3,  0, -1 }, // 01000100 -> 3/0, 6 bit used
	{ 6,  3,  0, -1 }, // 01000101 -> 3/0, 6 bit used
	{ 6,  3,  0, -1 }, // 01000110 -> 3/0, 6 bit used
	{ 6,  3,  0, -1 }, // 01000111 -> 3/0, 6 bit used
	{ 5,  1,  3, -1 }, // 01001000 -> 1/3, 5 bit used
	{ 5,  1,  3, -1 }, // 01001001 -> 1/3, 5 bit used
	{ 5,  1,  3, -1 }, // 01001010 -> 1/3, 5 bit used
	{ 5,  1,  3, -1 }, // 01001011 -> 1/3, 5 bit used
	{ 5,  1,  3, -1 }, // 01001100 -> 1/3, 5 bit used
	{ 5,  1,  3, -1 }, // 01001101 -> 1/3, 5 bit used
	{ 5,  1,  3, -1 }, // 01001110 -> 1/3, 5 bit used
	{ 5,  1,  3, -1 }, // 01001111 -> 1/3, 5 bit used
	{ 5,  3,  1, -1 }, // 01010000 -> 3/1, 5 bit used
	{ 5,  3,  1, -1 }, // 01010001 -> 3/1, 5 bit used
	{ 5,  3,  1, -1 }, // 01010010 -> 3/1, 5 bit used
	{ 5,  3,  1, -1 }, // 01010011 -> 3/1, 5 bit used
	{ 5,  3,  1, -1 }, // 01010100 -> 3/1, 5 bit used
	{ 5,  3,  1, -1 }, // 01010101 -> 3/1, 5 bit used
	{ 5,  3,  1, -1 }, // 01010110 -> 3/1, 5 bit used
	{ 5,  3,  1, -1 }, // 01010111 -> 3/1, 5 bit used
	{ 5,  2,  2, -1 }, // 01011000 -> 2/2, 5 bit used
	{ 5,  2,  2, -1 }, // 01011001 -> 2/2, 5 bit used
	{ 5,  2,  2, -1 }, // 01011010 -> 2/2, 5 bit used
	{ 5,  2,  2, -1 }, // 01011011 -> 2/2, 5 bit used
	{ 5,  2,  2, -1 }, // 01011100 -> 2/2, 5 bit used
	{ 5,  2,  2, -1 }, // 01011101 -> 2/2, 5 bit used
	{ 5,  2,  2, -1 }, // 01011110 -> 2/2, 5 bit used
	{ 5,  2,  2, -1 }, // 01011111 -> 2/2, 5 bit used
	{ 4,  1,  2, -1 }, // 01100000 -> 1/2, 4 bit used
	{ 4,  1,  2, -1 }, // 01100001 -> 1/2, 4 bit used
	{ 4,  1,  2, -1 }, // 01100010 -> 1/2, 4 bit used
	{ 4,  1,  2, -1 }, // 01100011 -> 1/2, 4 bit used
	{ 4,  1,  2, -1 }, // 01100100 -> 1/2, 4 bit used
	{ 4,  1,  2, -1 }, // 01100101 -> 1/2, 4 bit used
	{ 4,  1,  2, -1 }, // 01100110 -> 1/2, 4 bit used
	{ 4,  1,  2, -1 }, // 01100111 -> 1/2, 4 bit used
	{ 4,  1,  2, -1 }, // 01101000 -> 1/2, 4 bit used
	{ 4,  1,  2, -1 }, // 01101001 -> 1/2, 4 bit used
	{ 4,  1,  2, -1 }, // 01101010 -> 1/2, 4 bit used
	{ 4,  1,  2, -1 }, // 01101011 -> 1/2, 4 bit used
	{ 4,  1,  2, -1 }, // 01101100 -> 1/2, 4 bit used
	{ 4,  1,  2, -1 }, // 01101101 -> 1/2, 4 bit used
	{ 4,  1,  2, -1 }, // 01101110 -> 1/2, 4 bit used
	{ 4,  1,  2, -1 }, // 01101111 -> 1/2, 4 bit used
	{ 4,  2,  1, -1 }, // 01110000 -> 2/1, 4 bit used
	{ 4,  2,  1, -1 }, // 01110001 -> 2/1, 4 bit used
	{ 4,  2,  1, -1 }, // 01110010 -> 2/1, 4 bit used
	{ 4,  2,  1, -1 }, // 01110011 -> 2/1, 4 bit used
	{ 4,  2,  1, -1 }, // 01110100 -> 2/1, 4 bit used
	{ 4,  2,  1, -1 }, // 01110101 -> 2/1, 4 bit used
	{ 4,  2,  1, -1 }, // 01110110 -> 2/1, 4 bit used
	{ 4,  2,  1, -1 }, // 01110111 -> 2/1, 4 bit used
	{ 4,  2,  1, -1 }, // 01111000 -> 2/1, 4 bit used
	{ 4,  2,  1, -1 }, // 01111001 -> 2/1, 4 bit used
	{ 4,  2,  1, -1 }, // 01111010 -> 2/1, 4 bit used
	{ 4,  2,  1, -1 }, // 01111011 -> 2/1, 4 bit used
	{ 4,  2,  1, -1 }, // 01111100 -> 2/1, 4 bit used
	{ 4,  2,  1, -1 }, // 01111101 -> 2/1, 4 bit used
	{ 4,  2,  1, -1 }, // 01111110 -> 2/1, 4 bit used
	{ 4,  2,  1, -1 }, // 01111111 -> 2/1, 4 bit used
	{ 5,  0,  2, -1 }, // 10000000 -> 0/2, 5 bit used
	{ 5,  0,  2, -1 }, // 10000001 -> 0/2, 5 bit used
	{ 5,  0,  2, -1 }, // 10000010 -> 0/2, 5 bit used
	{ 5,  0,  2, -1 }, // 10000011 -> 0/2, 5 bit used
	{ 5,  0,  2, -1 }, // 10000100 -> 0/2, 5 bit used
	{ 5,  0,  2, -1 }, // 10000101 -> 0/2, 5 bit used
	{ 5,  0,  2, -1 }, // 10000110 -> 0/2, 5 bit used
	{ 5,  0,  2, -1 }, // 10000111 -> 0/2, 5 bit used
	{ 5,  2,  0, -1 }, // 10001000 -> 2/0, 5 bit used
	{ 5,  2,  0, -1 }, // 10001001 -> 2/0, 5 bit used
	{ 5,  2,  0, -1 }, // 10001010 -> 2/0, 5 bit used
	{ 5,  2,  0, -1 }, // 10001011 -> 2/0, 5 bit used
	{ 5,  2,  0, -1 }, // 10001100 -> 2/0, 5 bit used
	{ 5,  2,  0, -1 }, // 10001101 -> 2/0, 5 bit used
	{ 5,  2,  0, -1 }, // 10001110 -> 2/0, 5 bit used
	{ 5,  2,  0, -1 }, // 10001111 -> 2/0, 5 bit used
	{ 4,  0,  0, -1 }, // 10010000 -> 0/0, 4 bit used
	{ 4,  0,  0, -1 }, // 10010001 -> 0/0, 4 bit used
	{ 4,  0,  0, -1 }, // 10010010 -> 0/0, 4 bit used
	{ 4,  0,  0, -1 }, // 10010011 -> 0/0, 4 bit used
	{ 4,  0,  0, -1 }, // 10010100 -> 0/0, 4 bit used
	{ 4,  0,  0, -1 }, // 10010101 -> 0/0, 4 bit used
	{ 4,  0,  0, -1 }, // 10010110 -> 0/0, 4 bit used
	{ 4,  0,  0, -1 }, // 10010111 -> 0/0, 4 bit used
	{ 4,  0,  0, -1 }, // 10011000 -> 0/0, 4 bit used
	{ 4,  0,  0, -1 }, // 10011001 -> 0/0, 4 bit used
	{ 4,  0,  0, -1 }, // 10011010 -> 0/0, 4 bit used
	{ 4,  0,  0, -1 }, // 10011011 -> 0/0, 4 bit used
	{ 4,  0,  0, -1 }, // 10011100 -> 0/0, 4 bit used
	{ 4,  0,  0, -1 }, // 10011101 -> 0/0, 4 bit used
	{ 4,  0,  0, -1 }, // 10011110 -> 0/0, 4 bit used
	{ 4,  0,  0, -1 }, // 10011111 -> 0/0, 4 bit used
	{ 3,  1,  1, -1 }, // 10100000 -> 1/1, 3 bit used
	{ 3,  1,  1, -1 }, // 10100001 -> 1/1, 3 bit used
	{ 3,  1,  1, -1 }, // 10100010 -> 1/1, 3 bit used
	{ 3,  1,  1, -1 }, // 10100011 -> 1/1, 3 bit used
	{ 3,  1,  1, -1 }, // 10100100 -> 1/1, 3 bit used
	{ 3,  1,  1, -1 }, // 10100101 -> 1/1, 3 bit used
	{ 3,  1,  1, -1 }, // 10100110 -> 1/1, 3 bit used
	{ 3,  1,  1, -1 }, // 10100111 -> 1/1, 3 bit used
	{ 3,  1,  1, -1 }, // 10101000 -> 1/1, 3 bit used
	{ 3,  1,  1, -1 }, // 10101001 -> 1/1, 3 bit used
	{ 3,  1,  1, -1 }, // 10101010 -> 1/1, 3 bit used
	{ 3,  1,  1, -1 }, // 10101011 -> 1/1, 3 bit used
	{ 3,  1,  1, -1 }, // 10101100 -> 1/1, 3 bit used
	{ 3,  1,  1, -1 }, // 10101101 -> 1/1, 3 bit used
	{ 3,  1,  1, -1 }, // 10101110 -> 1/1, 3 bit used
	{ 3,  1,  1, -1 }, // 10101111 -> 1/1, 3 bit used
	{ 3,  1,  1, -1 }, // 10110000 -> 1/1, 3 bit used
	{ 3,  1,  1, -1 }, // 10110001 -> 1/1, 3 bit used
	{ 3,  1,  1, -1 }, // 10110010 -> 1/1, 3 bit used
	{ 3,  1,  1, -1 }, // 10110011 -> 1/1, 3 bit used
	{ 3,  1,  1, -1 }, // 10110100 -> 1/1, 3 bit used
	{ 3,  1,  1, -1 }, // 10110101 -> 1/1, 3 bit used
	{ 3,  1,  1, -1 }, // 10110110 -> 1/1, 3 bit used
	{ 3,  1,  1, -1 }, // 10110111 -> 1/1, 3 bit used
	{ 3,  1,  1, -1 }, // 10111000 -> 1/1, 3 bit used
	{ 3,  1,  1, -1 }, // 10111001 -> 1/1, 3 bit used
	{ 3,  1,  1, -1 }, // 10111010 -> 1/1, 3 bit used
	{ 3,  1,  1, -1 }, // 10111011 -> 1/1, 3 bit used
	{ 3,  1,  1, -1 }, // 10111100 -> 1/1, 3 bit used
	{ 3,  1,  1, -1 }, // 10111101 -> 1/1, 3 bit used
	{ 3,  1,  1, -1 }, // 10111110 -> 1/1, 3 bit used
	{ 3,  1,  1, -1 }, // 10111111 -> 1/1, 3 bit used
	{ 3,  0,  1, -1 }, // 11000000 -> 0/1, 3 bit used
	{ 3,  0,  1, -1 }, // 11000001 -> 0/1, 3 bit used
	{ 3,  0,  1, -1 }, // 11000010 -> 0/1, 3 bit used
	{ 3,  0,  1, -1 }, // 11000011 -> 0/1, 3 bit used
	{ 3,  0,  1, -1 }, // 11000100 -> 0/1, 3 bit used
	{ 3,  0,  1, -1 }, // 11000101 -> 0/1, 3 bit used
	{ 3,  0,  1, -1 }, // 11000110 -> 0/1, 3 bit used
	{ 3,  0,  1, -1 }, // 11000111 -> 0/1, 3 bit used
	{ 3,  0,  1, -1 }, // 11001000 -> 0/1, 3 bit used
	{ 3,  0,  1, -1 }, // 11001001 -> 0/1, 3 bit used
	{ 3,  0,  1, -1 }, // 11001010 -> 0/1, 3 bit used
	{ 3,  0,  1, -1 }, // 11001011 -> 0/1, 3 bit used
	{ 3,  0,  1, -1 }, // 11001100 -> 0/1, 3 bit used
	{ 3,  0,  1, -1 }, // 11001101 -> 0/1, 3 bit used
	{ 3,  0,  1, -1 }, // 11001110 -> 0/1, 3 bit used
	{ 3,  0,  1, -1 }, // 11001111 -> 0/1, 3 bit used
	{ 3,  0,  1, -1 }, // 11010000 -> 0/1, 3 bit used
	{ 3,  0,  1, -1 }, // 11010001 -> 0/1, 3 bit used
	{ 3,  0,  1, -1 }, // 11010010 -> 0/1, 3 bit used
	{ 3,  0,  1, -1 }, // 11010011 -> 0/1, 3 bit used
	{ 3,  0,  1, -1 }, // 11010100 -> 0/1, 3 bit used
	{ 3,  0,  1, -1 }, // 11010101 -> 0/1, 3 bit used
	{ 3,  0,  1, -1 }, // 11010110 -> 0/1, 3 bit used
	{ 3,  0,  1, -1 }, // 11010111 -> 0/1, 3 bit used
	{ 3,  0,  1, -1 }, // 11011000 -> 0/1, 3 bit used
	{ 3,  0,  1, -1 }, // 11011001 -> 0/1, 3 bit used
	{ 3,  0,  1, -1 }, // 11011010 -> 0/1, 3 bit used
	{ 3,  0,  1, -1 }, // 11011011 -> 0/1, 3 bit used
	{ 3,  0,  1, -1 }, // 11011100 -> 0/1, 3 bit used
	{ 3,  0,  1, -1 }, // 11011101 -> 0/1, 3 bit used
	{ 3,  0,  1, -1 }, // 11011110 -> 0/1, 3 bit used
	{ 3,  0,  1, -1 }, // 11011111 -> 0/1, 3 bit used
	{ 3,  1,  0, -1 }, // 11100000 -> 1/0, 3 bit used
	{ 3,  1,  0, -1 }, // 11100001 -> 1/0, 3 bit used
	{ 3,  1,  0, -1 }, // 11100010 -> 1/0, 3 bit used
	{ 3,  1,  0, -1 }, // 11100011 -> 1/0, 3 bit used
	{ 3,  1,  0, -1 }, // 11100100 -> 1/0, 3 bit used
	{ 3,  1,  0, -1 }, // 11100101 -> 1/0, 3 bit used
	{ 3,  1,  0, -1 }, // 11100110 -> 1/0, 3 bit used
	{ 3,  1,  0, -1 }, // 11100111 -> 1/0, 3 bit used
	{ 3,  1,  0, -1 }, // 11101000 -> 1/0, 3 bit used
	{ 3,  1,  0, -1 }, // 11101001 -> 1/0, 3 bit used
	{ 3,  1,  0, -1 }, // 11101010 -> 1/0, 3 bit used
	{ 3,  1,  0, -1 }, // 11101011 -> 1/0, 3 bit used
	{ 3,  1,  0, -1 }, // 11101100 -> 1/0, 3 bit used
	{ 3,  1,  0, -1 }, // 11101101 -> 1/0, 3 bit used
	{ 3,  1,  0, -1 }, // 11101110 -> 1/0, 3 bit used
	{ 3,  1,  0, -1 }, // 11101111 -> 1/0, 3 bit used
	{ 3,  1,  0, -1 }, // 11110000 -> 1/0, 3 bit used
	{ 3,  1,  0, -1 }, // 11110001 -> 1/0, 3 bit used
	{ 3,  1,  0, -1 }, // 11110010 -> 1/0, 3 bit used
	{ 3,  1,  0, -1 }, // 11110011 -> 1/0, 3 bit used
	{ 3,  1,  0, -1 }, // 11110100 -> 1/0, 3 bit used
	{ 3,  1,  0, -1 }, // 11110101 -> 1/0, 3 bit used
	{ 3,  1,  0, -1 }, // 11110110 -> 1/0, 3 bit used
	{ 3,  1,  0, -1 }, // 11110111 -> 1/0, 3 bit used
	{ 3,  1,  0, -1 }, // 11111000 -> 1/0, 3 bit used
	{ 3,  1,  0, -1 }, // 11111001 -> 1/0, 3 bit used
	{ 3,  1,  0, -1 }, // 11111010 -> 1/0, 3 bit used
	{ 3,  1,  0, -1 }, // 11111011 -> 1/0, 3 bit used
	{ 3,  1,  0, -1 }, // 11111100 -> 1/0, 3 bit used
	{ 3,  1,  0, -1 }, // 11111101 -> 1/0, 3 bit used
	{ 3,  1,  0, -1 }, // 11111110 -> 1/0, 3 bit used
	{ 3,  1,  0, -1 }  // 11111111 -> 1/0, 3 bit used
};
// extension table 1, prefix 00000000
static huffman_conv htab12_dec_ext1[ 4 ] = {
	{ 2,  7,  7, -1 }, // 00 -> 7/7, 2 bit used
	{ 2,  6,  7, -1 }, // 01 -> 6/7, 2 bit used
	{ 1,  7,  6, -1 }, // 10 -> 7/6, 1 bit used
	{ 1,  7,  6, -1 }  // 11 -> 7/6, 1 bit used
};
// extension table 2, prefix 00000001
static huffman_conv htab12_dec_ext2[ 2 ] = {
	{ 1,  5,  7, -1 }, // 0 -> 5/7, 1 bit used
	{ 1,  7,  5, -1 }  // 1 -> 7/5, 1 bit used
};
// extension table 3, prefix 00000010
static huffman_conv htab12_dec_ext3[ 2 ] = {
	{ 1,  6,  6, -1 }, // 0 -> 6/6, 1 bit used
	{ 1,  4,  7, -1 }  // 1 -> 4/7, 1 bit used
};
// extension table 4, prefix 00000011
static huffman_conv htab12_dec_ext4[ 2 ] = {
	{ 1,  7,  4, -1 }, // 0 -> 7/4, 1 bit used
	{ 1,  6,  5, -1 }  // 1 -> 6/5, 1 bit used
};
// extension table 5, prefix 00000110
static huffman_conv htab12_dec_ext5[ 2 ] = {
	{ 1,  7,  3, -1 }, // 0 -> 7/3, 1 bit used
	{ 1,  5,  5, -1 }  // 1 -> 5/5, 1 bit used
};
// extension table 6, prefix 00001101
static huffman_conv htab12_dec_ext6[ 2 ] = {
	{ 1,  0,  7, -1 }, // 0 -> 0/7, 1 bit used
	{ 1,  7,  0, -1 }  // 1 -> 7/0, 1 bit used
};
// extension table 7, prefix 00010011
static huffman_conv htab12_dec_ext7[ 2 ] = {
	{ 1,  0,  6, -1 }, // 0 -> 0/6, 1 bit used
	{ 1,  0,  5, -1 }  // 1 -> 0/5, 1 bit used
};
// big values conversion table #12, total size: 272, ext tables: 7
static huffman_conv_set htab12_dec[ 8 ] = {
	{ htab12_dec_start, 8 }, // start table
	{ htab12_dec_ext1, 2 }, // ext table #1
	{ htab12_dec_ext2, 1 }, // ext table #2
	{ htab12_dec_ext3, 1 }, // ext table #3
	{ htab12_dec_ext4, 1 }, // ext table #4
	{ htab12_dec_ext5, 1 }, // ext table #5
	{ htab12_dec_ext6, 1 }, // ext table #6
	{ htab12_dec_ext7, 1 }  // ext table #7
};

/* -----------------------------------------------
	big values conversion table 13
	----------------------------------------------- */
static huffman_conv htab13_dec_start[ 256 ] = {
	{ 8, -1, -1,  1 }, // 00000000 -> extension table #1
	{ 8, -1, -1,  2 }, // 00000001 -> extension table #2
	{ 8, -1, -1,  3 }, // 00000010 -> extension table #3
	{ 8, -1, -1,  4 }, // 00000011 -> extension table #4
	{ 8, -1, -1,  5 }, // 00000100 -> extension table #5
	{ 8, -1, -1,  6 }, // 00000101 -> extension table #6
	{ 8, -1, -1,  7 }, // 00000110 -> extension table #7
	{ 8, -1, -1,  8 }, // 00000111 -> extension table #8
	{ 8, -1, -1,  9 }, // 00001000 -> extension table #9
	{ 8, -1, -1, 10 }, // 00001001 -> extension table #10
	{ 8, -1, -1, 11 }, // 00001010 -> extension table #11
	{ 8, -1, -1, 12 }, // 00001011 -> extension table #12
	{ 8, -1, -1, 13 }, // 00001100 -> extension table #13
	{ 8, -1, -1, 14 }, // 00001101 -> extension table #14
	{ 8, -1, -1, 15 }, // 00001110 -> extension table #15
	{ 8, -1, -1, 16 }, // 00001111 -> extension table #16
	{ 8, -1, -1, 17 }, // 00010000 -> extension table #17
	{ 8, -1, -1, 18 }, // 00010001 -> extension table #18
	{ 8, -1, -1, 19 }, // 00010010 -> extension table #19
	{ 8, -1, -1, 20 }, // 00010011 -> extension table #20
	{ 8,  8,  1, -1 }, // 00010100 -> 8/1, 8 bit used
	{ 8, -1, -1, 21 }, // 00010101 -> extension table #21
	{ 8, -1, -1, 22 }, // 00010110 -> extension table #22
	{ 8, -1, -1, 23 }, // 00010111 -> extension table #23
	{ 8, -1, -1, 24 }, // 00011000 -> extension table #24
	{ 8, -1, -1, 25 }, // 00011001 -> extension table #25
	{ 8,  1,  5, -1 }, // 00011010 -> 1/5, 8 bit used
	{ 8,  5,  1, -1 }, // 00011011 -> 5/1, 8 bit used
	{ 8, -1, -1, 26 }, // 00011100 -> extension table #26
	{ 8, -1, -1, 27 }, // 00011101 -> extension table #27
	{ 8, -1, -1, 28 }, // 00011110 -> extension table #28
	{ 8,  1,  4, -1 }, // 00011111 -> 1/4, 8 bit used
	{ 7,  4,  1, -1 }, // 00100000 -> 4/1, 7 bit used
	{ 7,  4,  1, -1 }, // 00100001 -> 4/1, 7 bit used
	{ 8,  0,  4, -1 }, // 00100010 -> 0/4, 8 bit used
	{ 8,  4,  0, -1 }, // 00100011 -> 4/0, 8 bit used
	{ 8,  2,  3, -1 }, // 00100100 -> 2/3, 8 bit used
	{ 8,  3,  2, -1 }, // 00100101 -> 3/2, 8 bit used
	{ 7,  1,  3, -1 }, // 00100110 -> 1/3, 7 bit used
	{ 7,  1,  3, -1 }, // 00100111 -> 1/3, 7 bit used
	{ 7,  3,  1, -1 }, // 00101000 -> 3/1, 7 bit used
	{ 7,  3,  1, -1 }, // 00101001 -> 3/1, 7 bit used
	{ 7,  0,  3, -1 }, // 00101010 -> 0/3, 7 bit used
	{ 7,  0,  3, -1 }, // 00101011 -> 0/3, 7 bit used
	{ 7,  3,  0, -1 }, // 00101100 -> 3/0, 7 bit used
	{ 7,  3,  0, -1 }, // 00101101 -> 3/0, 7 bit used
	{ 7,  2,  2, -1 }, // 00101110 -> 2/2, 7 bit used
	{ 7,  2,  2, -1 }, // 00101111 -> 2/2, 7 bit used
	{ 6,  1,  2, -1 }, // 00110000 -> 1/2, 6 bit used
	{ 6,  1,  2, -1 }, // 00110001 -> 1/2, 6 bit used
	{ 6,  1,  2, -1 }, // 00110010 -> 1/2, 6 bit used
	{ 6,  1,  2, -1 }, // 00110011 -> 1/2, 6 bit used
	{ 6,  2,  1, -1 }, // 00110100 -> 2/1, 6 bit used
	{ 6,  2,  1, -1 }, // 00110101 -> 2/1, 6 bit used
	{ 6,  2,  1, -1 }, // 00110110 -> 2/1, 6 bit used
	{ 6,  2,  1, -1 }, // 00110111 -> 2/1, 6 bit used
	{ 6,  0,  2, -1 }, // 00111000 -> 0/2, 6 bit used
	{ 6,  0,  2, -1 }, // 00111001 -> 0/2, 6 bit used
	{ 6,  0,  2, -1 }, // 00111010 -> 0/2, 6 bit used
	{ 6,  0,  2, -1 }, // 00111011 -> 0/2, 6 bit used
	{ 6,  2,  0, -1 }, // 00111100 -> 2/0, 6 bit used
	{ 6,  2,  0, -1 }, // 00111101 -> 2/0, 6 bit used
	{ 6,  2,  0, -1 }, // 00111110 -> 2/0, 6 bit used
	{ 6,  2,  0, -1 }, // 00111111 -> 2/0, 6 bit used
	{ 4,  1,  1, -1 }, // 01000000 -> 1/1, 4 bit used
	{ 4,  1,  1, -1 }, // 01000001 -> 1/1, 4 bit used
	{ 4,  1,  1, -1 }, // 01000010 -> 1/1, 4 bit used
	{ 4,  1,  1, -1 }, // 01000011 -> 1/1, 4 bit used
	{ 4,  1,  1, -1 }, // 01000100 -> 1/1, 4 bit used
	{ 4,  1,  1, -1 }, // 01000101 -> 1/1, 4 bit used
	{ 4,  1,  1, -1 }, // 01000110 -> 1/1, 4 bit used
	{ 4,  1,  1, -1 }, // 01000111 -> 1/1, 4 bit used
	{ 4,  1,  1, -1 }, // 01001000 -> 1/1, 4 bit used
	{ 4,  1,  1, -1 }, // 01001001 -> 1/1, 4 bit used
	{ 4,  1,  1, -1 }, // 01001010 -> 1/1, 4 bit used
	{ 4,  1,  1, -1 }, // 01001011 -> 1/1, 4 bit used
	{ 4,  1,  1, -1 }, // 01001100 -> 1/1, 4 bit used
	{ 4,  1,  1, -1 }, // 01001101 -> 1/1, 4 bit used
	{ 4,  1,  1, -1 }, // 01001110 -> 1/1, 4 bit used
	{ 4,  1,  1, -1 }, // 01001111 -> 1/1, 4 bit used
	{ 4,  0,  1, -1 }, // 01010000 -> 0/1, 4 bit used
	{ 4,  0,  1, -1 }, // 01010001 -> 0/1, 4 bit used
	{ 4,  0,  1, -1 }, // 01010010 -> 0/1, 4 bit used
	{ 4,  0,  1, -1 }, // 01010011 -> 0/1, 4 bit used
	{ 4,  0,  1, -1 }, // 01010100 -> 0/1, 4 bit used
	{ 4,  0,  1, -1 }, // 01010101 -> 0/1, 4 bit used
	{ 4,  0,  1, -1 }, // 01010110 -> 0/1, 4 bit used
	{ 4,  0,  1, -1 }, // 01010111 -> 0/1, 4 bit used
	{ 4,  0,  1, -1 }, // 01011000 -> 0/1, 4 bit used
	{ 4,  0,  1, -1 }, // 01011001 -> 0/1, 4 bit used
	{ 4,  0,  1, -1 }, // 01011010 -> 0/1, 4 bit used
	{ 4,  0,  1, -1 }, // 01011011 -> 0/1, 4 bit used
	{ 4,  0,  1, -1 }, // 01011100 -> 0/1, 4 bit used
	{ 4,  0,  1, -1 }, // 01011101 -> 0/1, 4 bit used
	{ 4,  0,  1, -1 }, // 01011110 -> 0/1, 4 bit used
	{ 4,  0,  1, -1 }, // 01011111 -> 0/1, 4 bit used
	{ 3,  1,  0, -1 }, // 01100000 -> 1/0, 3 bit used
	{ 3,  1,  0, -1 }, // 01100001 -> 1/0, 3 bit used
	{ 3,  1,  0, -1 }, // 01100010 -> 1/0, 3 bit used
	{ 3,  1,  0, -1 }, // 01100011 -> 1/0, 3 bit used
	{ 3,  1,  0, -1 }, // 01100100 -> 1/0, 3 bit used
	{ 3,  1,  0, -1 }, // 01100101 -> 1/0, 3 bit used
	{ 3,  1,  0, -1 }, // 01100110 -> 1/0, 3 bit used
	{ 3,  1,  0, -1 }, // 01100111 -> 1/0, 3 bit used
	{ 3,  1,  0, -1 }, // 01101000 -> 1/0, 3 bit used
	{ 3,  1,  0, -1 }, // 01101001 -> 1/0, 3 bit used
	{ 3,  1,  0, -1 }, // 01101010 -> 1/0, 3 bit used
	{ 3,  1,  0, -1 }, // 01101011 -> 1/0, 3 bit used
	{ 3,  1,  0, -1 }, // 01101100 -> 1/0, 3 bit used
	{ 3,  1,  0, -1 }, // 01101101 -> 1/0, 3 bit used
	{ 3,  1,  0, -1 }, // 01101110 -> 1/0, 3 bit used
	{ 3,  1,  0, -1 }, // 01101111 -> 1/0, 3 bit used
	{ 3,  1,  0, -1 }, // 01110000 -> 1/0, 3 bit used
	{ 3,  1,  0, -1 }, // 01110001 -> 1/0, 3 bit used
	{ 3,  1,  0, -1 }, // 01110010 -> 1/0, 3 bit used
	{ 3,  1,  0, -1 }, // 01110011 -> 1/0, 3 bit used
	{ 3,  1,  0, -1 }, // 01110100 -> 1/0, 3 bit used
	{ 3,  1,  0, -1 }, // 01110101 -> 1/0, 3 bit used
	{ 3,  1,  0, -1 }, // 01110110 -> 1/0, 3 bit used
	{ 3,  1,  0, -1 }, // 01110111 -> 1/0, 3 bit used
	{ 3,  1,  0, -1 }, // 01111000 -> 1/0, 3 bit used
	{ 3,  1,  0, -1 }, // 01111001 -> 1/0, 3 bit used
	{ 3,  1,  0, -1 }, // 01111010 -> 1/0, 3 bit used
	{ 3,  1,  0, -1 }, // 01111011 -> 1/0, 3 bit used
	{ 3,  1,  0, -1 }, // 01111100 -> 1/0, 3 bit used
	{ 3,  1,  0, -1 }, // 01111101 -> 1/0, 3 bit used
	{ 3,  1,  0, -1 }, // 01111110 -> 1/0, 3 bit used
	{ 3,  1,  0, -1 }, // 01111111 -> 1/0, 3 bit used
	{ 1,  0,  0, -1 }, // 10000000 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 10000001 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 10000010 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 10000011 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 10000100 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 10000101 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 10000110 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 10000111 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 10001000 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 10001001 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 10001010 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 10001011 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 10001100 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 10001101 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 10001110 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 10001111 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 10010000 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 10010001 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 10010010 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 10010011 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 10010100 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 10010101 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 10010110 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 10010111 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 10011000 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 10011001 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 10011010 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 10011011 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 10011100 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 10011101 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 10011110 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 10011111 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 10100000 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 10100001 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 10100010 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 10100011 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 10100100 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 10100101 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 10100110 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 10100111 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 10101000 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 10101001 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 10101010 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 10101011 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 10101100 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 10101101 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 10101110 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 10101111 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 10110000 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 10110001 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 10110010 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 10110011 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 10110100 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 10110101 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 10110110 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 10110111 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 10111000 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 10111001 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 10111010 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 10111011 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 10111100 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 10111101 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 10111110 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 10111111 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 11000000 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 11000001 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 11000010 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 11000011 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 11000100 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 11000101 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 11000110 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 11000111 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 11001000 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 11001001 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 11001010 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 11001011 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 11001100 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 11001101 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 11001110 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 11001111 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 11010000 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 11010001 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 11010010 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 11010011 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 11010100 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 11010101 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 11010110 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 11010111 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 11011000 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 11011001 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 11011010 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 11011011 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 11011100 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 11011101 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 11011110 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 11011111 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 11100000 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 11100001 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 11100010 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 11100011 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 11100100 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 11100101 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 11100110 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 11100111 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 11101000 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 11101001 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 11101010 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 11101011 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 11101100 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 11101101 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 11101110 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 11101111 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 11110000 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 11110001 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 11110010 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 11110011 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 11110100 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 11110101 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 11110110 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 11110111 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 11111000 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 11111001 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 11111010 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 11111011 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 11111100 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 11111101 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 11111110 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }  // 11111111 -> 0/0, 1 bit used
};
// extension table 1, prefix 00000000
static huffman_conv htab13_dec_ext1[ 256 ] = {
	{ 8, -1, -1, 29 }, // 00000000 -> extension table #29
	{ 8, 15, 15, -1 }, // 00000001 -> 15/15, 8 bit used
	{ 8, 14, 15, -1 }, // 00000010 -> 14/15, 8 bit used
	{ 8, 13, 15, -1 }, // 00000011 -> 13/15, 8 bit used
	{ 8, 14, 14, -1 }, // 00000100 -> 14/14, 8 bit used
	{ 8, 12, 15, -1 }, // 00000101 -> 12/15, 8 bit used
	{ 8, 13, 14, -1 }, // 00000110 -> 13/14, 8 bit used
	{ 8, 11, 15, -1 }, // 00000111 -> 11/15, 8 bit used
	{ 8, 15, 11, -1 }, // 00001000 -> 15/11, 8 bit used
	{ 8, 12, 14, -1 }, // 00001001 -> 12/14, 8 bit used
	{ 8, 13, 12, -1 }, // 00001010 -> 13/12, 8 bit used
	{ 8, -1, -1, 30 }, // 00001011 -> extension table #30
	{ 7, 14, 12, -1 }, // 00001100 -> 14/12, 7 bit used
	{ 7, 14, 12, -1 }, // 00001101 -> 14/12, 7 bit used
	{ 7, 13, 13, -1 }, // 00001110 -> 13/13, 7 bit used
	{ 7, 13, 13, -1 }, // 00001111 -> 13/13, 7 bit used
	{ 8, 15, 10, -1 }, // 00010000 -> 15/10, 8 bit used
	{ 8, 12, 13, -1 }, // 00010001 -> 12/13, 8 bit used
	{ 7, 11, 14, -1 }, // 00010010 -> 11/14, 7 bit used
	{ 7, 11, 14, -1 }, // 00010011 -> 11/14, 7 bit used
	{ 7, 14, 11, -1 }, // 00010100 -> 14/11, 7 bit used
	{ 7, 14, 11, -1 }, // 00010101 -> 14/11, 7 bit used
	{ 7,  9, 15, -1 }, // 00010110 -> 9/15, 7 bit used
	{ 7,  9, 15, -1 }, // 00010111 -> 9/15, 7 bit used
	{ 7, 15,  9, -1 }, // 00011000 -> 15/9, 7 bit used
	{ 7, 15,  9, -1 }, // 00011001 -> 15/9, 7 bit used
	{ 7, 14, 10, -1 }, // 00011010 -> 14/10, 7 bit used
	{ 7, 14, 10, -1 }, // 00011011 -> 14/10, 7 bit used
	{ 7, 11, 13, -1 }, // 00011100 -> 11/13, 7 bit used
	{ 7, 11, 13, -1 }, // 00011101 -> 11/13, 7 bit used
	{ 7, 13, 11, -1 }, // 00011110 -> 13/11, 7 bit used
	{ 7, 13, 11, -1 }, // 00011111 -> 13/11, 7 bit used
	{ 7,  8, 15, -1 }, // 00100000 -> 8/15, 7 bit used
	{ 7,  8, 15, -1 }, // 00100001 -> 8/15, 7 bit used
	{ 7, 15,  8, -1 }, // 00100010 -> 15/8, 7 bit used
	{ 7, 15,  8, -1 }, // 00100011 -> 15/8, 7 bit used
	{ 7, 12, 12, -1 }, // 00100100 -> 12/12, 7 bit used
	{ 7, 12, 12, -1 }, // 00100101 -> 12/12, 7 bit used
	{ 8, 10, 14, -1 }, // 00100110 -> 10/14, 8 bit used
	{ 8,  9, 14, -1 }, // 00100111 -> 9/14, 8 bit used
	{ 7,  8, 14, -1 }, // 00101000 -> 8/14, 7 bit used
	{ 7,  8, 14, -1 }, // 00101001 -> 8/14, 7 bit used
	{ 8,  7, 15, -1 }, // 00101010 -> 7/15, 8 bit used
	{ 8,  7, 14, -1 }, // 00101011 -> 7/14, 8 bit used
	{ 6, 15,  7, -1 }, // 00101100 -> 15/7, 6 bit used
	{ 6, 15,  7, -1 }, // 00101101 -> 15/7, 6 bit used
	{ 6, 15,  7, -1 }, // 00101110 -> 15/7, 6 bit used
	{ 6, 15,  7, -1 }, // 00101111 -> 15/7, 6 bit used
	{ 6, 13, 10, -1 }, // 00110000 -> 13/10, 6 bit used
	{ 6, 13, 10, -1 }, // 00110001 -> 13/10, 6 bit used
	{ 6, 13, 10, -1 }, // 00110010 -> 13/10, 6 bit used
	{ 6, 13, 10, -1 }, // 00110011 -> 13/10, 6 bit used
	{ 7, 10, 13, -1 }, // 00110100 -> 10/13, 7 bit used
	{ 7, 10, 13, -1 }, // 00110101 -> 10/13, 7 bit used
	{ 7, 11, 12, -1 }, // 00110110 -> 11/12, 7 bit used
	{ 7, 11, 12, -1 }, // 00110111 -> 11/12, 7 bit used
	{ 7, 12, 11, -1 }, // 00111000 -> 12/11, 7 bit used
	{ 7, 12, 11, -1 }, // 00111001 -> 12/11, 7 bit used
	{ 7, 15,  6, -1 }, // 00111010 -> 15/6, 7 bit used
	{ 7, 15,  6, -1 }, // 00111011 -> 15/6, 7 bit used
	{ 6,  6, 15, -1 }, // 00111100 -> 6/15, 6 bit used
	{ 6,  6, 15, -1 }, // 00111101 -> 6/15, 6 bit used
	{ 6,  6, 15, -1 }, // 00111110 -> 6/15, 6 bit used
	{ 6,  6, 15, -1 }, // 00111111 -> 6/15, 6 bit used
	{ 6, 14,  8, -1 }, // 01000000 -> 14/8, 6 bit used
	{ 6, 14,  8, -1 }, // 01000001 -> 14/8, 6 bit used
	{ 6, 14,  8, -1 }, // 01000010 -> 14/8, 6 bit used
	{ 6, 14,  8, -1 }, // 01000011 -> 14/8, 6 bit used
	{ 6,  5, 15, -1 }, // 01000100 -> 5/15, 6 bit used
	{ 6,  5, 15, -1 }, // 01000101 -> 5/15, 6 bit used
	{ 6,  5, 15, -1 }, // 01000110 -> 5/15, 6 bit used
	{ 6,  5, 15, -1 }, // 01000111 -> 5/15, 6 bit used
	{ 6,  9, 13, -1 }, // 01001000 -> 9/13, 6 bit used
	{ 6,  9, 13, -1 }, // 01001001 -> 9/13, 6 bit used
	{ 6,  9, 13, -1 }, // 01001010 -> 9/13, 6 bit used
	{ 6,  9, 13, -1 }, // 01001011 -> 9/13, 6 bit used
	{ 6, 13,  9, -1 }, // 01001100 -> 13/9, 6 bit used
	{ 6, 13,  9, -1 }, // 01001101 -> 13/9, 6 bit used
	{ 6, 13,  9, -1 }, // 01001110 -> 13/9, 6 bit used
	{ 6, 13,  9, -1 }, // 01001111 -> 13/9, 6 bit used
	{ 6, 15,  5, -1 }, // 01010000 -> 15/5, 6 bit used
	{ 6, 15,  5, -1 }, // 01010001 -> 15/5, 6 bit used
	{ 6, 15,  5, -1 }, // 01010010 -> 15/5, 6 bit used
	{ 6, 15,  5, -1 }, // 01010011 -> 15/5, 6 bit used
	{ 6, 14,  7, -1 }, // 01010100 -> 14/7, 6 bit used
	{ 6, 14,  7, -1 }, // 01010101 -> 14/7, 6 bit used
	{ 6, 14,  7, -1 }, // 01010110 -> 14/7, 6 bit used
	{ 6, 14,  7, -1 }, // 01010111 -> 14/7, 6 bit used
	{ 6, 10, 12, -1 }, // 01011000 -> 10/12, 6 bit used
	{ 6, 10, 12, -1 }, // 01011001 -> 10/12, 6 bit used
	{ 6, 10, 12, -1 }, // 01011010 -> 10/12, 6 bit used
	{ 6, 10, 12, -1 }, // 01011011 -> 10/12, 6 bit used
	{ 6, 11, 11, -1 }, // 01011100 -> 11/11, 6 bit used
	{ 6, 11, 11, -1 }, // 01011101 -> 11/11, 6 bit used
	{ 6, 11, 11, -1 }, // 01011110 -> 11/11, 6 bit used
	{ 6, 11, 11, -1 }, // 01011111 -> 11/11, 6 bit used
	{ 6,  4, 15, -1 }, // 01100000 -> 4/15, 6 bit used
	{ 6,  4, 15, -1 }, // 01100001 -> 4/15, 6 bit used
	{ 6,  4, 15, -1 }, // 01100010 -> 4/15, 6 bit used
	{ 6,  4, 15, -1 }, // 01100011 -> 4/15, 6 bit used
	{ 6, 15,  4, -1 }, // 01100100 -> 15/4, 6 bit used
	{ 6, 15,  4, -1 }, // 01100101 -> 15/4, 6 bit used
	{ 6, 15,  4, -1 }, // 01100110 -> 15/4, 6 bit used
	{ 6, 15,  4, -1 }, // 01100111 -> 15/4, 6 bit used
	{ 7, 12, 10, -1 }, // 01101000 -> 12/10, 7 bit used
	{ 7, 12, 10, -1 }, // 01101001 -> 12/10, 7 bit used
	{ 7, 14,  6, -1 }, // 01101010 -> 14/6, 7 bit used
	{ 7, 14,  6, -1 }, // 01101011 -> 14/6, 7 bit used
	{ 6, 15,  3, -1 }, // 01101100 -> 15/3, 6 bit used
	{ 6, 15,  3, -1 }, // 01101101 -> 15/3, 6 bit used
	{ 6, 15,  3, -1 }, // 01101110 -> 15/3, 6 bit used
	{ 6, 15,  3, -1 }, // 01101111 -> 15/3, 6 bit used
	{ 5,  3, 15, -1 }, // 01110000 -> 3/15, 5 bit used
	{ 5,  3, 15, -1 }, // 01110001 -> 3/15, 5 bit used
	{ 5,  3, 15, -1 }, // 01110010 -> 3/15, 5 bit used
	{ 5,  3, 15, -1 }, // 01110011 -> 3/15, 5 bit used
	{ 5,  3, 15, -1 }, // 01110100 -> 3/15, 5 bit used
	{ 5,  3, 15, -1 }, // 01110101 -> 3/15, 5 bit used
	{ 5,  3, 15, -1 }, // 01110110 -> 3/15, 5 bit used
	{ 5,  3, 15, -1 }, // 01110111 -> 3/15, 5 bit used
	{ 6,  8, 13, -1 }, // 01111000 -> 8/13, 6 bit used
	{ 6,  8, 13, -1 }, // 01111001 -> 8/13, 6 bit used
	{ 6,  8, 13, -1 }, // 01111010 -> 8/13, 6 bit used
	{ 6,  8, 13, -1 }, // 01111011 -> 8/13, 6 bit used
	{ 6, 13,  8, -1 }, // 01111100 -> 13/8, 6 bit used
	{ 6, 13,  8, -1 }, // 01111101 -> 13/8, 6 bit used
	{ 6, 13,  8, -1 }, // 01111110 -> 13/8, 6 bit used
	{ 6, 13,  8, -1 }, // 01111111 -> 13/8, 6 bit used
	{ 5,  2, 15, -1 }, // 10000000 -> 2/15, 5 bit used
	{ 5,  2, 15, -1 }, // 10000001 -> 2/15, 5 bit used
	{ 5,  2, 15, -1 }, // 10000010 -> 2/15, 5 bit used
	{ 5,  2, 15, -1 }, // 10000011 -> 2/15, 5 bit used
	{ 5,  2, 15, -1 }, // 10000100 -> 2/15, 5 bit used
	{ 5,  2, 15, -1 }, // 10000101 -> 2/15, 5 bit used
	{ 5,  2, 15, -1 }, // 10000110 -> 2/15, 5 bit used
	{ 5,  2, 15, -1 }, // 10000111 -> 2/15, 5 bit used
	{ 5, 15,  2, -1 }, // 10001000 -> 15/2, 5 bit used
	{ 5, 15,  2, -1 }, // 10001001 -> 15/2, 5 bit used
	{ 5, 15,  2, -1 }, // 10001010 -> 15/2, 5 bit used
	{ 5, 15,  2, -1 }, // 10001011 -> 15/2, 5 bit used
	{ 5, 15,  2, -1 }, // 10001100 -> 15/2, 5 bit used
	{ 5, 15,  2, -1 }, // 10001101 -> 15/2, 5 bit used
	{ 5, 15,  2, -1 }, // 10001110 -> 15/2, 5 bit used
	{ 5, 15,  2, -1 }, // 10001111 -> 15/2, 5 bit used
	{ 6,  6, 14, -1 }, // 10010000 -> 6/14, 6 bit used
	{ 6,  6, 14, -1 }, // 10010001 -> 6/14, 6 bit used
	{ 6,  6, 14, -1 }, // 10010010 -> 6/14, 6 bit used
	{ 6,  6, 14, -1 }, // 10010011 -> 6/14, 6 bit used
	{ 6,  9, 12, -1 }, // 10010100 -> 9/12, 6 bit used
	{ 6,  9, 12, -1 }, // 10010101 -> 9/12, 6 bit used
	{ 6,  9, 12, -1 }, // 10010110 -> 9/12, 6 bit used
	{ 6,  9, 12, -1 }, // 10010111 -> 9/12, 6 bit used
	{ 5,  0, 15, -1 }, // 10011000 -> 0/15, 5 bit used
	{ 5,  0, 15, -1 }, // 10011001 -> 0/15, 5 bit used
	{ 5,  0, 15, -1 }, // 10011010 -> 0/15, 5 bit used
	{ 5,  0, 15, -1 }, // 10011011 -> 0/15, 5 bit used
	{ 5,  0, 15, -1 }, // 10011100 -> 0/15, 5 bit used
	{ 5,  0, 15, -1 }, // 10011101 -> 0/15, 5 bit used
	{ 5,  0, 15, -1 }, // 10011110 -> 0/15, 5 bit used
	{ 5,  0, 15, -1 }, // 10011111 -> 0/15, 5 bit used
	{ 6, 12,  9, -1 }, // 10100000 -> 12/9, 6 bit used
	{ 6, 12,  9, -1 }, // 10100001 -> 12/9, 6 bit used
	{ 6, 12,  9, -1 }, // 10100010 -> 12/9, 6 bit used
	{ 6, 12,  9, -1 }, // 10100011 -> 12/9, 6 bit used
	{ 6,  5, 14, -1 }, // 10100100 -> 5/14, 6 bit used
	{ 6,  5, 14, -1 }, // 10100101 -> 5/14, 6 bit used
	{ 6,  5, 14, -1 }, // 10100110 -> 5/14, 6 bit used
	{ 6,  5, 14, -1 }, // 10100111 -> 5/14, 6 bit used
	{ 5, 10, 11, -1 }, // 10101000 -> 10/11, 5 bit used
	{ 5, 10, 11, -1 }, // 10101001 -> 10/11, 5 bit used
	{ 5, 10, 11, -1 }, // 10101010 -> 10/11, 5 bit used
	{ 5, 10, 11, -1 }, // 10101011 -> 10/11, 5 bit used
	{ 5, 10, 11, -1 }, // 10101100 -> 10/11, 5 bit used
	{ 5, 10, 11, -1 }, // 10101101 -> 10/11, 5 bit used
	{ 5, 10, 11, -1 }, // 10101110 -> 10/11, 5 bit used
	{ 5, 10, 11, -1 }, // 10101111 -> 10/11, 5 bit used
	{ 6,  7, 13, -1 }, // 10110000 -> 7/13, 6 bit used
	{ 6,  7, 13, -1 }, // 10110001 -> 7/13, 6 bit used
	{ 6,  7, 13, -1 }, // 10110010 -> 7/13, 6 bit used
	{ 6,  7, 13, -1 }, // 10110011 -> 7/13, 6 bit used
	{ 6, 13,  7, -1 }, // 10110100 -> 13/7, 6 bit used
	{ 6, 13,  7, -1 }, // 10110101 -> 13/7, 6 bit used
	{ 6, 13,  7, -1 }, // 10110110 -> 13/7, 6 bit used
	{ 6, 13,  7, -1 }, // 10110111 -> 13/7, 6 bit used
	{ 5,  4, 14, -1 }, // 10111000 -> 4/14, 5 bit used
	{ 5,  4, 14, -1 }, // 10111001 -> 4/14, 5 bit used
	{ 5,  4, 14, -1 }, // 10111010 -> 4/14, 5 bit used
	{ 5,  4, 14, -1 }, // 10111011 -> 4/14, 5 bit used
	{ 5,  4, 14, -1 }, // 10111100 -> 4/14, 5 bit used
	{ 5,  4, 14, -1 }, // 10111101 -> 4/14, 5 bit used
	{ 5,  4, 14, -1 }, // 10111110 -> 4/14, 5 bit used
	{ 5,  4, 14, -1 }, // 10111111 -> 4/14, 5 bit used
	{ 6, 12,  8, -1 }, // 11000000 -> 12/8, 6 bit used
	{ 6, 12,  8, -1 }, // 11000001 -> 12/8, 6 bit used
	{ 6, 12,  8, -1 }, // 11000010 -> 12/8, 6 bit used
	{ 6, 12,  8, -1 }, // 11000011 -> 12/8, 6 bit used
	{ 6, 13,  6, -1 }, // 11000100 -> 13/6, 6 bit used
	{ 6, 13,  6, -1 }, // 11000101 -> 13/6, 6 bit used
	{ 6, 13,  6, -1 }, // 11000110 -> 13/6, 6 bit used
	{ 6, 13,  6, -1 }, // 11000111 -> 13/6, 6 bit used
	{ 5,  3, 14, -1 }, // 11001000 -> 3/14, 5 bit used
	{ 5,  3, 14, -1 }, // 11001001 -> 3/14, 5 bit used
	{ 5,  3, 14, -1 }, // 11001010 -> 3/14, 5 bit used
	{ 5,  3, 14, -1 }, // 11001011 -> 3/14, 5 bit used
	{ 5,  3, 14, -1 }, // 11001100 -> 3/14, 5 bit used
	{ 5,  3, 14, -1 }, // 11001101 -> 3/14, 5 bit used
	{ 5,  3, 14, -1 }, // 11001110 -> 3/14, 5 bit used
	{ 5,  3, 14, -1 }, // 11001111 -> 3/14, 5 bit used
	{ 5, 11,  9, -1 }, // 11010000 -> 11/9, 5 bit used
	{ 5, 11,  9, -1 }, // 11010001 -> 11/9, 5 bit used
	{ 5, 11,  9, -1 }, // 11010010 -> 11/9, 5 bit used
	{ 5, 11,  9, -1 }, // 11010011 -> 11/9, 5 bit used
	{ 5, 11,  9, -1 }, // 11010100 -> 11/9, 5 bit used
	{ 5, 11,  9, -1 }, // 11010101 -> 11/9, 5 bit used
	{ 5, 11,  9, -1 }, // 11010110 -> 11/9, 5 bit used
	{ 5, 11,  9, -1 }, // 11010111 -> 11/9, 5 bit used
	{ 6,  9, 11, -1 }, // 11011000 -> 9/11, 6 bit used
	{ 6,  9, 11, -1 }, // 11011001 -> 9/11, 6 bit used
	{ 6,  9, 11, -1 }, // 11011010 -> 9/11, 6 bit used
	{ 6,  9, 11, -1 }, // 11011011 -> 9/11, 6 bit used
	{ 6, 10, 10, -1 }, // 11011100 -> 10/10, 6 bit used
	{ 6, 10, 10, -1 }, // 11011101 -> 10/10, 6 bit used
	{ 6, 10, 10, -1 }, // 11011110 -> 10/10, 6 bit used
	{ 6, 10, 10, -1 }, // 11011111 -> 10/10, 6 bit used
	{ 4,  1, 15, -1 }, // 11100000 -> 1/15, 4 bit used
	{ 4,  1, 15, -1 }, // 11100001 -> 1/15, 4 bit used
	{ 4,  1, 15, -1 }, // 11100010 -> 1/15, 4 bit used
	{ 4,  1, 15, -1 }, // 11100011 -> 1/15, 4 bit used
	{ 4,  1, 15, -1 }, // 11100100 -> 1/15, 4 bit used
	{ 4,  1, 15, -1 }, // 11100101 -> 1/15, 4 bit used
	{ 4,  1, 15, -1 }, // 11100110 -> 1/15, 4 bit used
	{ 4,  1, 15, -1 }, // 11100111 -> 1/15, 4 bit used
	{ 4,  1, 15, -1 }, // 11101000 -> 1/15, 4 bit used
	{ 4,  1, 15, -1 }, // 11101001 -> 1/15, 4 bit used
	{ 4,  1, 15, -1 }, // 11101010 -> 1/15, 4 bit used
	{ 4,  1, 15, -1 }, // 11101011 -> 1/15, 4 bit used
	{ 4,  1, 15, -1 }, // 11101100 -> 1/15, 4 bit used
	{ 4,  1, 15, -1 }, // 11101101 -> 1/15, 4 bit used
	{ 4,  1, 15, -1 }, // 11101110 -> 1/15, 4 bit used
	{ 4,  1, 15, -1 }, // 11101111 -> 1/15, 4 bit used
	{ 4, 15,  1, -1 }, // 11110000 -> 15/1, 4 bit used
	{ 4, 15,  1, -1 }, // 11110001 -> 15/1, 4 bit used
	{ 4, 15,  1, -1 }, // 11110010 -> 15/1, 4 bit used
	{ 4, 15,  1, -1 }, // 11110011 -> 15/1, 4 bit used
	{ 4, 15,  1, -1 }, // 11110100 -> 15/1, 4 bit used
	{ 4, 15,  1, -1 }, // 11110101 -> 15/1, 4 bit used
	{ 4, 15,  1, -1 }, // 11110110 -> 15/1, 4 bit used
	{ 4, 15,  1, -1 }, // 11110111 -> 15/1, 4 bit used
	{ 4, 15,  1, -1 }, // 11111000 -> 15/1, 4 bit used
	{ 4, 15,  1, -1 }, // 11111001 -> 15/1, 4 bit used
	{ 4, 15,  1, -1 }, // 11111010 -> 15/1, 4 bit used
	{ 4, 15,  1, -1 }, // 11111011 -> 15/1, 4 bit used
	{ 4, 15,  1, -1 }, // 11111100 -> 15/1, 4 bit used
	{ 4, 15,  1, -1 }, // 11111101 -> 15/1, 4 bit used
	{ 4, 15,  1, -1 }, // 11111110 -> 15/1, 4 bit used
	{ 4, 15,  1, -1 }  // 11111111 -> 15/1, 4 bit used
};
// extension table 2, prefix 00000001
static huffman_conv htab13_dec_ext2[ 32 ] = {
	{ 4, 15,  0, -1 }, // 00000 -> 15/0, 4 bit used
	{ 4, 15,  0, -1 }, // 00001 -> 15/0, 4 bit used
	{ 5, 11, 10, -1 }, // 00010 -> 11/10, 5 bit used
	{ 5, 14,  5, -1 }, // 00011 -> 14/5, 5 bit used
	{ 5, 14,  4, -1 }, // 00100 -> 14/4, 5 bit used
	{ 5,  8, 12, -1 }, // 00101 -> 8/12, 5 bit used
	{ 5,  6, 13, -1 }, // 00110 -> 6/13, 5 bit used
	{ 5, 14,  3, -1 }, // 00111 -> 14/3, 5 bit used
	{ 4, 14,  2, -1 }, // 01000 -> 14/2, 4 bit used
	{ 4, 14,  2, -1 }, // 01001 -> 14/2, 4 bit used
	{ 5,  2, 14, -1 }, // 01010 -> 2/14, 5 bit used
	{ 5,  0, 14, -1 }, // 01011 -> 0/14, 5 bit used
	{ 4,  1, 14, -1 }, // 01100 -> 1/14, 4 bit used
	{ 4,  1, 14, -1 }, // 01101 -> 1/14, 4 bit used
	{ 4, 14,  1, -1 }, // 01110 -> 14/1, 4 bit used
	{ 4, 14,  1, -1 }, // 01111 -> 14/1, 4 bit used
	{ 5, 14,  0, -1 }, // 10000 -> 14/0, 5 bit used
	{ 5,  5, 13, -1 }, // 10001 -> 5/13, 5 bit used
	{ 5, 13,  5, -1 }, // 10010 -> 13/5, 5 bit used
	{ 5,  7, 12, -1 }, // 10011 -> 7/12, 5 bit used
	{ 5, 12,  7, -1 }, // 10100 -> 12/7, 5 bit used
	{ 5,  4, 13, -1 }, // 10101 -> 4/13, 5 bit used
	{ 5,  8, 11, -1 }, // 10110 -> 8/11, 5 bit used
	{ 5, 11,  8, -1 }, // 10111 -> 11/8, 5 bit used
	{ 5, 13,  4, -1 }, // 11000 -> 13/4, 5 bit used
	{ 5,  9, 10, -1 }, // 11001 -> 9/10, 5 bit used
	{ 5, 10,  9, -1 }, // 11010 -> 10/9, 5 bit used
	{ 5,  6, 12, -1 }, // 11011 -> 6/12, 5 bit used
	{ 4, 12,  6, -1 }, // 11100 -> 12/6, 4 bit used
	{ 4, 12,  6, -1 }, // 11101 -> 12/6, 4 bit used
	{ 4,  3, 13, -1 }, // 11110 -> 3/13, 4 bit used
	{ 4,  3, 13, -1 }  // 11111 -> 3/13, 4 bit used
};
// extension table 3, prefix 00000010
static huffman_conv htab13_dec_ext3[ 32 ] = {
	{ 5, 13,  3, -1 }, // 00000 -> 13/3, 5 bit used
	{ 5,  7, 11, -1 }, // 00001 -> 7/11, 5 bit used
	{ 4,  2, 13, -1 }, // 00010 -> 2/13, 4 bit used
	{ 4,  2, 13, -1 }, // 00011 -> 2/13, 4 bit used
	{ 4, 13,  2, -1 }, // 00100 -> 13/2, 4 bit used
	{ 4, 13,  2, -1 }, // 00101 -> 13/2, 4 bit used
	{ 4,  1, 13, -1 }, // 00110 -> 1/13, 4 bit used
	{ 4,  1, 13, -1 }, // 00111 -> 1/13, 4 bit used
	{ 4, 11,  7, -1 }, // 01000 -> 11/7, 4 bit used
	{ 4, 11,  7, -1 }, // 01001 -> 11/7, 4 bit used
	{ 5,  5, 12, -1 }, // 01010 -> 5/12, 5 bit used
	{ 5, 12,  5, -1 }, // 01011 -> 12/5, 5 bit used
	{ 5,  9,  9, -1 }, // 01100 -> 9/9, 5 bit used
	{ 5,  7, 10, -1 }, // 01101 -> 7/10, 5 bit used
	{ 4, 12,  3, -1 }, // 01110 -> 12/3, 4 bit used
	{ 4, 12,  3, -1 }, // 01111 -> 12/3, 4 bit used
	{ 5, 10,  7, -1 }, // 10000 -> 10/7, 5 bit used
	{ 5,  9,  7, -1 }, // 10001 -> 9/7, 5 bit used
	{ 4,  4, 11, -1 }, // 10010 -> 4/11, 4 bit used
	{ 4,  4, 11, -1 }, // 10011 -> 4/11, 4 bit used
	{ 3, 13,  1, -1 }, // 10100 -> 13/1, 3 bit used
	{ 3, 13,  1, -1 }, // 10101 -> 13/1, 3 bit used
	{ 3, 13,  1, -1 }, // 10110 -> 13/1, 3 bit used
	{ 3, 13,  1, -1 }, // 10111 -> 13/1, 3 bit used
	{ 4,  0, 13, -1 }, // 11000 -> 0/13, 4 bit used
	{ 4,  0, 13, -1 }, // 11001 -> 0/13, 4 bit used
	{ 4, 13,  0, -1 }, // 11010 -> 13/0, 4 bit used
	{ 4, 13,  0, -1 }, // 11011 -> 13/0, 4 bit used
	{ 4,  8, 10, -1 }, // 11100 -> 8/10, 4 bit used
	{ 4,  8, 10, -1 }, // 11101 -> 8/10, 4 bit used
	{ 4, 10,  8, -1 }, // 11110 -> 10/8, 4 bit used
	{ 4, 10,  8, -1 }  // 11111 -> 10/8, 4 bit used
};
// extension table 4, prefix 00000011
static huffman_conv htab13_dec_ext4[ 16 ] = {
	{ 4,  4, 12, -1 }, // 0000 -> 4/12, 4 bit used
	{ 4, 12,  4, -1 }, // 0001 -> 12/4, 4 bit used
	{ 4,  6, 11, -1 }, // 0010 -> 6/11, 4 bit used
	{ 4, 11,  6, -1 }, // 0011 -> 11/6, 4 bit used
	{ 3,  3, 12, -1 }, // 0100 -> 3/12, 3 bit used
	{ 3,  3, 12, -1 }, // 0101 -> 3/12, 3 bit used
	{ 3,  2, 12, -1 }, // 0110 -> 2/12, 3 bit used
	{ 3,  2, 12, -1 }, // 0111 -> 2/12, 3 bit used
	{ 3, 12,  2, -1 }, // 1000 -> 12/2, 3 bit used
	{ 3, 12,  2, -1 }, // 1001 -> 12/2, 3 bit used
	{ 3,  5, 11, -1 }, // 1010 -> 5/11, 3 bit used
	{ 3,  5, 11, -1 }, // 1011 -> 5/11, 3 bit used
	{ 4, 11,  5, -1 }, // 1100 -> 11/5, 4 bit used
	{ 4,  8,  9, -1 }, // 1101 -> 8/9, 4 bit used
	{ 3,  1, 12, -1 }, // 1110 -> 1/12, 3 bit used
	{ 3,  1, 12, -1 }  // 1111 -> 1/12, 3 bit used
};
// extension table 5, prefix 00000100
static huffman_conv htab13_dec_ext5[ 16 ] = {
	{ 3, 12,  1, -1 }, // 0000 -> 12/1, 3 bit used
	{ 3, 12,  1, -1 }, // 0001 -> 12/1, 3 bit used
	{ 4,  9,  8, -1 }, // 0010 -> 9/8, 4 bit used
	{ 4,  0, 12, -1 }, // 0011 -> 0/12, 4 bit used
	{ 3, 12,  0, -1 }, // 0100 -> 12/0, 3 bit used
	{ 3, 12,  0, -1 }, // 0101 -> 12/0, 3 bit used
	{ 4, 11,  4, -1 }, // 0110 -> 11/4, 4 bit used
	{ 4,  6, 10, -1 }, // 0111 -> 6/10, 4 bit used
	{ 4, 10,  6, -1 }, // 1000 -> 10/6, 4 bit used
	{ 4,  7,  9, -1 }, // 1001 -> 7/9, 4 bit used
	{ 3,  3, 11, -1 }, // 1010 -> 3/11, 3 bit used
	{ 3,  3, 11, -1 }, // 1011 -> 3/11, 3 bit used
	{ 3, 11,  3, -1 }, // 1100 -> 11/3, 3 bit used
	{ 3, 11,  3, -1 }, // 1101 -> 11/3, 3 bit used
	{ 4,  8,  8, -1 }, // 1110 -> 8/8, 4 bit used
	{ 4,  5, 10, -1 }  // 1111 -> 5/10, 4 bit used
};
// extension table 6, prefix 00000101
static huffman_conv htab13_dec_ext6[ 16 ] = {
	{ 3,  2, 11, -1 }, // 0000 -> 2/11, 3 bit used
	{ 3,  2, 11, -1 }, // 0001 -> 2/11, 3 bit used
	{ 4, 10,  5, -1 }, // 0010 -> 10/5, 4 bit used
	{ 4,  6,  9, -1 }, // 0011 -> 6/9, 4 bit used
	{ 3, 10,  4, -1 }, // 0100 -> 10/4, 3 bit used
	{ 3, 10,  4, -1 }, // 0101 -> 10/4, 3 bit used
	{ 4,  7,  8, -1 }, // 0110 -> 7/8, 4 bit used
	{ 4,  8,  7, -1 }, // 0111 -> 8/7, 4 bit used
	{ 3,  9,  4, -1 }, // 1000 -> 9/4, 3 bit used
	{ 3,  9,  4, -1 }, // 1001 -> 9/4, 3 bit used
	{ 4,  7,  7, -1 }, // 1010 -> 7/7, 4 bit used
	{ 4,  7,  6, -1 }, // 1011 -> 7/6, 4 bit used
	{ 2, 11,  2, -1 }, // 1100 -> 11/2, 2 bit used
	{ 2, 11,  2, -1 }, // 1101 -> 11/2, 2 bit used
	{ 2, 11,  2, -1 }, // 1110 -> 11/2, 2 bit used
	{ 2, 11,  2, -1 }  // 1111 -> 11/2, 2 bit used
};
// extension table 7, prefix 00000110
static huffman_conv htab13_dec_ext7[ 8 ] = {
	{ 2,  1, 11, -1 }, // 000 -> 1/11, 2 bit used
	{ 2,  1, 11, -1 }, // 001 -> 1/11, 2 bit used
	{ 2, 11,  1, -1 }, // 010 -> 11/1, 2 bit used
	{ 2, 11,  1, -1 }, // 011 -> 11/1, 2 bit used
	{ 3,  0, 11, -1 }, // 100 -> 0/11, 3 bit used
	{ 3, 11,  0, -1 }, // 101 -> 11/0, 3 bit used
	{ 3,  9,  6, -1 }, // 110 -> 9/6, 3 bit used
	{ 3,  4, 10, -1 }  // 111 -> 4/10, 3 bit used
};
// extension table 8, prefix 00000111
static huffman_conv htab13_dec_ext8[ 8 ] = {
	{ 3,  3, 10, -1 }, // 000 -> 3/10, 3 bit used
	{ 3, 10,  3, -1 }, // 001 -> 10/3, 3 bit used
	{ 3,  5,  9, -1 }, // 010 -> 5/9, 3 bit used
	{ 3,  9,  5, -1 }, // 011 -> 9/5, 3 bit used
	{ 2,  2, 10, -1 }, // 100 -> 2/10, 2 bit used
	{ 2,  2, 10, -1 }, // 101 -> 2/10, 2 bit used
	{ 2, 10,  2, -1 }, // 110 -> 10/2, 2 bit used
	{ 2, 10,  2, -1 }  // 111 -> 10/2, 2 bit used
};
// extension table 9, prefix 00001000
static huffman_conv htab13_dec_ext9[ 8 ] = {
	{ 2,  1, 10, -1 }, // 000 -> 1/10, 2 bit used
	{ 2,  1, 10, -1 }, // 001 -> 1/10, 2 bit used
	{ 2, 10,  1, -1 }, // 010 -> 10/1, 2 bit used
	{ 2, 10,  1, -1 }, // 011 -> 10/1, 2 bit used
	{ 3,  0, 10, -1 }, // 100 -> 0/10, 3 bit used
	{ 3,  6,  8, -1 }, // 101 -> 6/8, 3 bit used
	{ 2, 10,  0, -1 }, // 110 -> 10/0, 2 bit used
	{ 2, 10,  0, -1 }  // 111 -> 10/0, 2 bit used
};
// extension table 10, prefix 00001001
static huffman_conv htab13_dec_ext10[ 8 ] = {
	{ 3,  8,  6, -1 }, // 000 -> 8/6, 3 bit used
	{ 3,  4,  9, -1 }, // 001 -> 4/9, 3 bit used
	{ 2,  9,  3, -1 }, // 010 -> 9/3, 2 bit used
	{ 2,  9,  3, -1 }, // 011 -> 9/3, 2 bit used
	{ 3,  3,  9, -1 }, // 100 -> 3/9, 3 bit used
	{ 3,  5,  8, -1 }, // 101 -> 5/8, 3 bit used
	{ 3,  8,  5, -1 }, // 110 -> 8/5, 3 bit used
	{ 3,  6,  7, -1 }  // 111 -> 6/7, 3 bit used
};
// extension table 11, prefix 00001010
static huffman_conv htab13_dec_ext11[ 8 ] = {
	{ 2,  2,  9, -1 }, // 000 -> 2/9, 2 bit used
	{ 2,  2,  9, -1 }, // 001 -> 2/9, 2 bit used
	{ 2,  9,  2, -1 }, // 010 -> 9/2, 2 bit used
	{ 2,  9,  2, -1 }, // 011 -> 9/2, 2 bit used
	{ 3,  5,  7, -1 }, // 100 -> 5/7, 3 bit used
	{ 3,  7,  5, -1 }, // 101 -> 7/5, 3 bit used
	{ 2,  3,  8, -1 }, // 110 -> 3/8, 2 bit used
	{ 2,  3,  8, -1 }  // 111 -> 3/8, 2 bit used
};
// extension table 12, prefix 00001011
static huffman_conv htab13_dec_ext12[ 8 ] = {
	{ 2,  8,  3, -1 }, // 000 -> 8/3, 2 bit used
	{ 2,  8,  3, -1 }, // 001 -> 8/3, 2 bit used
	{ 3,  6,  6, -1 }, // 010 -> 6/6, 3 bit used
	{ 3,  4,  7, -1 }, // 011 -> 4/7, 3 bit used
	{ 3,  7,  4, -1 }, // 100 -> 7/4, 3 bit used
	{ 3,  5,  6, -1 }, // 101 -> 5/6, 3 bit used
	{ 3,  6,  5, -1 }, // 110 -> 6/5, 3 bit used
	{ 3,  7,  3, -1 }  // 111 -> 7/3, 3 bit used
};
// extension table 13, prefix 00001100
static huffman_conv htab13_dec_ext13[ 2 ] = {
	{ 1,  1,  9, -1 }, // 0 -> 1/9, 1 bit used
	{ 1,  9,  1, -1 }  // 1 -> 9/1, 1 bit used
};
// extension table 14, prefix 00001101
static huffman_conv htab13_dec_ext14[ 4 ] = {
	{ 2,  0,  9, -1 }, // 00 -> 0/9, 2 bit used
	{ 2,  9,  0, -1 }, // 01 -> 9/0, 2 bit used
	{ 2,  4,  8, -1 }, // 10 -> 4/8, 2 bit used
	{ 2,  8,  4, -1 }  // 11 -> 8/4, 2 bit used
};
// extension table 15, prefix 00001110
static huffman_conv htab13_dec_ext15[ 8 ] = {
	{ 2,  7,  2, -1 }, // 000 -> 7/2, 2 bit used
	{ 2,  7,  2, -1 }, // 001 -> 7/2, 2 bit used
	{ 3,  4,  6, -1 }, // 010 -> 4/6, 3 bit used
	{ 3,  6,  4, -1 }, // 011 -> 6/4, 3 bit used
	{ 1,  2,  8, -1 }, // 100 -> 2/8, 1 bit used
	{ 1,  2,  8, -1 }, // 101 -> 2/8, 1 bit used
	{ 1,  2,  8, -1 }, // 110 -> 2/8, 1 bit used
	{ 1,  2,  8, -1 }  // 111 -> 2/8, 1 bit used
};
// extension table 16, prefix 00001111
static huffman_conv htab13_dec_ext16[ 2 ] = {
	{ 1,  8,  2, -1 }, // 0 -> 8/2, 1 bit used
	{ 1,  1,  8, -1 }  // 1 -> 1/8, 1 bit used
};
// extension table 17, prefix 00010000
static huffman_conv htab13_dec_ext17[ 4 ] = {
	{ 2,  3,  7, -1 }, // 00 -> 3/7, 2 bit used
	{ 2,  2,  7, -1 }, // 01 -> 2/7, 2 bit used
	{ 1,  1,  7, -1 }, // 10 -> 1/7, 1 bit used
	{ 1,  1,  7, -1 }  // 11 -> 1/7, 1 bit used
};
// extension table 18, prefix 00010001
static huffman_conv htab13_dec_ext18[ 4 ] = {
	{ 1,  7,  1, -1 }, // 00 -> 7/1, 1 bit used
	{ 1,  7,  1, -1 }, // 01 -> 7/1, 1 bit used
	{ 2,  5,  5, -1 }, // 10 -> 5/5, 2 bit used
	{ 2,  0,  7, -1 }  // 11 -> 0/7, 2 bit used
};
// extension table 19, prefix 00010010
static huffman_conv htab13_dec_ext19[ 4 ] = {
	{ 2,  7,  0, -1 }, // 00 -> 7/0, 2 bit used
	{ 2,  3,  6, -1 }, // 01 -> 3/6, 2 bit used
	{ 2,  6,  3, -1 }, // 10 -> 6/3, 2 bit used
	{ 2,  4,  5, -1 }  // 11 -> 4/5, 2 bit used
};
// extension table 20, prefix 00010011
static huffman_conv htab13_dec_ext20[ 4 ] = {
	{ 2,  5,  4, -1 }, // 00 -> 5/4, 2 bit used
	{ 2,  2,  6, -1 }, // 01 -> 2/6, 2 bit used
	{ 2,  6,  2, -1 }, // 10 -> 6/2, 2 bit used
	{ 2,  3,  5, -1 }  // 11 -> 3/5, 2 bit used
};
// extension table 21, prefix 00010101
static huffman_conv htab13_dec_ext21[ 2 ] = {
	{ 1,  0,  8, -1 }, // 0 -> 0/8, 1 bit used
	{ 1,  8,  0, -1 }  // 1 -> 8/0, 1 bit used
};
// extension table 22, prefix 00010110
static huffman_conv htab13_dec_ext22[ 2 ] = {
	{ 1,  1,  6, -1 }, // 0 -> 1/6, 1 bit used
	{ 1,  6,  1, -1 }  // 1 -> 6/1, 1 bit used
};
// extension table 23, prefix 00010111
static huffman_conv htab13_dec_ext23[ 2 ] = {
	{ 1,  0,  6, -1 }, // 0 -> 0/6, 1 bit used
	{ 1,  6,  0, -1 }  // 1 -> 6/0, 1 bit used
};
// extension table 24, prefix 00011000
static huffman_conv htab13_dec_ext24[ 4 ] = {
	{ 2,  5,  3, -1 }, // 00 -> 5/3, 2 bit used
	{ 2,  4,  4, -1 }, // 01 -> 4/4, 2 bit used
	{ 1,  2,  5, -1 }, // 10 -> 2/5, 1 bit used
	{ 1,  2,  5, -1 }  // 11 -> 2/5, 1 bit used
};
// extension table 25, prefix 00011001
static huffman_conv htab13_dec_ext25[ 2 ] = {
	{ 1,  5,  2, -1 }, // 0 -> 5/2, 1 bit used
	{ 1,  0,  5, -1 }  // 1 -> 0/5, 1 bit used
};
// extension table 26, prefix 00011100
static huffman_conv htab13_dec_ext26[ 2 ] = {
	{ 1,  3,  4, -1 }, // 0 -> 3/4, 1 bit used
	{ 1,  4,  3, -1 }  // 1 -> 4/3, 1 bit used
};
// extension table 27, prefix 00011101
static huffman_conv htab13_dec_ext27[ 2 ] = {
	{ 1,  5,  0, -1 }, // 0 -> 5/0, 1 bit used
	{ 1,  2,  4, -1 }  // 1 -> 2/4, 1 bit used
};
// extension table 28, prefix 00011110
static huffman_conv htab13_dec_ext28[ 2 ] = {
	{ 1,  4,  2, -1 }, // 0 -> 4/2, 1 bit used
	{ 1,  3,  3, -1 }  // 1 -> 3/3, 1 bit used
};
// extension table 29, prefix 0000000000000000
static huffman_conv htab13_dec_ext29[ 8 ] = {
	{ 3, 15, 14, -1 }, // 000 -> 15/14, 3 bit used
	{ 3, 15, 12, -1 }, // 001 -> 15/12, 3 bit used
	{ 2, 15, 13, -1 }, // 010 -> 15/13, 2 bit used
	{ 2, 15, 13, -1 }, // 011 -> 15/13, 2 bit used
	{ 1, 14, 13, -1 }, // 100 -> 14/13, 1 bit used
	{ 1, 14, 13, -1 }, // 101 -> 14/13, 1 bit used
	{ 1, 14, 13, -1 }, // 110 -> 14/13, 1 bit used
	{ 1, 14, 13, -1 }  // 111 -> 14/13, 1 bit used
};
// extension table 30, prefix 0000000000001011
static huffman_conv htab13_dec_ext30[ 2 ] = {
	{ 1, 10, 15, -1 }, // 0 -> 10/15, 1 bit used
	{ 1, 14,  9, -1 }  // 1 -> 14/9, 1 bit used
};
// big values conversion table #13, total size: 732, ext tables: 30
static huffman_conv_set htab13_dec[ 31 ] = {
	{ htab13_dec_start, 8 }, // start table
	{ htab13_dec_ext1, 8 }, // ext table #1
	{ htab13_dec_ext2, 5 }, // ext table #2
	{ htab13_dec_ext3, 5 }, // ext table #3
	{ htab13_dec_ext4, 4 }, // ext table #4
	{ htab13_dec_ext5, 4 }, // ext table #5
	{ htab13_dec_ext6, 4 }, // ext table #6
	{ htab13_dec_ext7, 3 }, // ext table #7
	{ htab13_dec_ext8, 3 }, // ext table #8
	{ htab13_dec_ext9, 3 }, // ext table #9
	{ htab13_dec_ext10, 3 }, // ext table #10
	{ htab13_dec_ext11, 3 }, // ext table #11
	{ htab13_dec_ext12, 3 }, // ext table #12
	{ htab13_dec_ext13, 1 }, // ext table #13
	{ htab13_dec_ext14, 2 }, // ext table #14
	{ htab13_dec_ext15, 3 }, // ext table #15
	{ htab13_dec_ext16, 1 }, // ext table #16
	{ htab13_dec_ext17, 2 }, // ext table #17
	{ htab13_dec_ext18, 2 }, // ext table #18
	{ htab13_dec_ext19, 2 }, // ext table #19
	{ htab13_dec_ext20, 2 }, // ext table #20
	{ htab13_dec_ext21, 1 }, // ext table #21
	{ htab13_dec_ext22, 1 }, // ext table #22
	{ htab13_dec_ext23, 1 }, // ext table #23
	{ htab13_dec_ext24, 2 }, // ext table #24
	{ htab13_dec_ext25, 1 }, // ext table #25
	{ htab13_dec_ext26, 1 }, // ext table #26
	{ htab13_dec_ext27, 1 }, // ext table #27
	{ htab13_dec_ext28, 1 }, // ext table #28
	{ htab13_dec_ext29, 3 }, // ext table #29
	{ htab13_dec_ext30, 1 }  // ext table #30
};

/* -----------------------------------------------
	big values conversion table 15
	----------------------------------------------- */
static huffman_conv htab15_dec_start[ 256 ] = {
	{ 8, -1, -1,  1 }, // 00000000 -> extension table #1
	{ 8, -1, -1,  2 }, // 00000001 -> extension table #2
	{ 8, -1, -1,  3 }, // 00000010 -> extension table #3
	{ 8, -1, -1,  4 }, // 00000011 -> extension table #4
	{ 8, -1, -1,  5 }, // 00000100 -> extension table #5
	{ 8, -1, -1,  6 }, // 00000101 -> extension table #6
	{ 8, -1, -1,  7 }, // 00000110 -> extension table #7
	{ 8, -1, -1,  8 }, // 00000111 -> extension table #8
	{ 8, -1, -1,  9 }, // 00001000 -> extension table #9
	{ 8, -1, -1, 10 }, // 00001001 -> extension table #10
	{ 8, -1, -1, 11 }, // 00001010 -> extension table #11
	{ 8, -1, -1, 12 }, // 00001011 -> extension table #12
	{ 8, -1, -1, 13 }, // 00001100 -> extension table #13
	{ 8, -1, -1, 14 }, // 00001101 -> extension table #14
	{ 8, -1, -1, 15 }, // 00001110 -> extension table #15
	{ 8, -1, -1, 16 }, // 00001111 -> extension table #16
	{ 8, -1, -1, 17 }, // 00010000 -> extension table #17
	{ 8, -1, -1, 18 }, // 00010001 -> extension table #18
	{ 8, -1, -1, 19 }, // 00010010 -> extension table #19
	{ 8, -1, -1, 20 }, // 00010011 -> extension table #20
	{ 8, -1, -1, 21 }, // 00010100 -> extension table #21
	{ 8, -1, -1, 22 }, // 00010101 -> extension table #22
	{ 8, -1, -1, 23 }, // 00010110 -> extension table #23
	{ 8, -1, -1, 24 }, // 00010111 -> extension table #24
	{ 8, -1, -1, 25 }, // 00011000 -> extension table #25
	{ 8, -1, -1, 26 }, // 00011001 -> extension table #26
	{ 8, -1, -1, 27 }, // 00011010 -> extension table #27
	{ 8, -1, -1, 28 }, // 00011011 -> extension table #28
	{ 8, -1, -1, 29 }, // 00011100 -> extension table #29
	{ 8, -1, -1, 30 }, // 00011101 -> extension table #30
	{ 8, -1, -1, 31 }, // 00011110 -> extension table #31
	{ 8, -1, -1, 32 }, // 00011111 -> extension table #32
	{ 8, -1, -1, 33 }, // 00100000 -> extension table #33
	{ 8, -1, -1, 34 }, // 00100001 -> extension table #34
	{ 8,  9,  1, -1 }, // 00100010 -> 9/1, 8 bit used
	{ 8, -1, -1, 35 }, // 00100011 -> extension table #35
	{ 8, -1, -1, 36 }, // 00100100 -> extension table #36
	{ 8, -1, -1, 37 }, // 00100101 -> extension table #37
	{ 8, -1, -1, 38 }, // 00100110 -> extension table #38
	{ 8, -1, -1, 39 }, // 00100111 -> extension table #39
	{ 8,  2,  8, -1 }, // 00101000 -> 2/8, 8 bit used
	{ 8,  8,  2, -1 }, // 00101001 -> 8/2, 8 bit used
	{ 8,  1,  8, -1 }, // 00101010 -> 1/8, 8 bit used
	{ 8,  8,  1, -1 }, // 00101011 -> 8/1, 8 bit used
	{ 8, -1, -1, 40 }, // 00101100 -> extension table #40
	{ 8, -1, -1, 41 }, // 00101101 -> extension table #41
	{ 8, -1, -1, 42 }, // 00101110 -> extension table #42
	{ 8, -1, -1, 43 }, // 00101111 -> extension table #43
	{ 8,  2,  7, -1 }, // 00110000 -> 2/7, 8 bit used
	{ 8,  7,  2, -1 }, // 00110001 -> 7/2, 8 bit used
	{ 8,  6,  4, -1 }, // 00110010 -> 6/4, 8 bit used
	{ 8,  1,  7, -1 }, // 00110011 -> 1/7, 8 bit used
	{ 8,  5,  5, -1 }, // 00110100 -> 5/5, 8 bit used
	{ 8,  7,  1, -1 }, // 00110101 -> 7/1, 8 bit used
	{ 8, -1, -1, 44 }, // 00110110 -> extension table #44
	{ 8,  3,  6, -1 }, // 00110111 -> 3/6, 8 bit used
	{ 8,  6,  3, -1 }, // 00111000 -> 6/3, 8 bit used
	{ 8,  4,  5, -1 }, // 00111001 -> 4/5, 8 bit used
	{ 8,  5,  4, -1 }, // 00111010 -> 5/4, 8 bit used
	{ 8,  2,  6, -1 }, // 00111011 -> 2/6, 8 bit used
	{ 8,  6,  2, -1 }, // 00111100 -> 6/2, 8 bit used
	{ 8,  1,  6, -1 }, // 00111101 -> 1/6, 8 bit used
	{ 8, -1, -1, 45 }, // 00111110 -> extension table #45
	{ 8,  3,  5, -1 }, // 00111111 -> 3/5, 8 bit used
	{ 7,  6,  1, -1 }, // 01000000 -> 6/1, 7 bit used
	{ 7,  6,  1, -1 }, // 01000001 -> 6/1, 7 bit used
	{ 8,  5,  3, -1 }, // 01000010 -> 5/3, 8 bit used
	{ 8,  4,  4, -1 }, // 01000011 -> 4/4, 8 bit used
	{ 7,  2,  5, -1 }, // 01000100 -> 2/5, 7 bit used
	{ 7,  2,  5, -1 }, // 01000101 -> 2/5, 7 bit used
	{ 7,  5,  2, -1 }, // 01000110 -> 5/2, 7 bit used
	{ 7,  5,  2, -1 }, // 01000111 -> 5/2, 7 bit used
	{ 7,  1,  5, -1 }, // 01001000 -> 1/5, 7 bit used
	{ 7,  1,  5, -1 }, // 01001001 -> 1/5, 7 bit used
	{ 7,  5,  1, -1 }, // 01001010 -> 5/1, 7 bit used
	{ 7,  5,  1, -1 }, // 01001011 -> 5/1, 7 bit used
	{ 8,  0,  5, -1 }, // 01001100 -> 0/5, 8 bit used
	{ 8,  5,  0, -1 }, // 01001101 -> 5/0, 8 bit used
	{ 7,  3,  4, -1 }, // 01001110 -> 3/4, 7 bit used
	{ 7,  3,  4, -1 }, // 01001111 -> 3/4, 7 bit used
	{ 7,  4,  3, -1 }, // 01010000 -> 4/3, 7 bit used
	{ 7,  4,  3, -1 }, // 01010001 -> 4/3, 7 bit used
	{ 7,  2,  4, -1 }, // 01010010 -> 2/4, 7 bit used
	{ 7,  2,  4, -1 }, // 01010011 -> 2/4, 7 bit used
	{ 7,  4,  2, -1 }, // 01010100 -> 4/2, 7 bit used
	{ 7,  4,  2, -1 }, // 01010101 -> 4/2, 7 bit used
	{ 7,  3,  3, -1 }, // 01010110 -> 3/3, 7 bit used
	{ 7,  3,  3, -1 }, // 01010111 -> 3/3, 7 bit used
	{ 6,  4,  1, -1 }, // 01011000 -> 4/1, 6 bit used
	{ 6,  4,  1, -1 }, // 01011001 -> 4/1, 6 bit used
	{ 6,  4,  1, -1 }, // 01011010 -> 4/1, 6 bit used
	{ 6,  4,  1, -1 }, // 01011011 -> 4/1, 6 bit used
	{ 7,  1,  4, -1 }, // 01011100 -> 1/4, 7 bit used
	{ 7,  1,  4, -1 }, // 01011101 -> 1/4, 7 bit used
	{ 7,  0,  4, -1 }, // 01011110 -> 0/4, 7 bit used
	{ 7,  0,  4, -1 }, // 01011111 -> 0/4, 7 bit used
	{ 6,  2,  3, -1 }, // 01100000 -> 2/3, 6 bit used
	{ 6,  2,  3, -1 }, // 01100001 -> 2/3, 6 bit used
	{ 6,  2,  3, -1 }, // 01100010 -> 2/3, 6 bit used
	{ 6,  2,  3, -1 }, // 01100011 -> 2/3, 6 bit used
	{ 6,  3,  2, -1 }, // 01100100 -> 3/2, 6 bit used
	{ 6,  3,  2, -1 }, // 01100101 -> 3/2, 6 bit used
	{ 6,  3,  2, -1 }, // 01100110 -> 3/2, 6 bit used
	{ 6,  3,  2, -1 }, // 01100111 -> 3/2, 6 bit used
	{ 7,  4,  0, -1 }, // 01101000 -> 4/0, 7 bit used
	{ 7,  4,  0, -1 }, // 01101001 -> 4/0, 7 bit used
	{ 7,  0,  3, -1 }, // 01101010 -> 0/3, 7 bit used
	{ 7,  0,  3, -1 }, // 01101011 -> 0/3, 7 bit used
	{ 6,  1,  3, -1 }, // 01101100 -> 1/3, 6 bit used
	{ 6,  1,  3, -1 }, // 01101101 -> 1/3, 6 bit used
	{ 6,  1,  3, -1 }, // 01101110 -> 1/3, 6 bit used
	{ 6,  1,  3, -1 }, // 01101111 -> 1/3, 6 bit used
	{ 6,  3,  1, -1 }, // 01110000 -> 3/1, 6 bit used
	{ 6,  3,  1, -1 }, // 01110001 -> 3/1, 6 bit used
	{ 6,  3,  1, -1 }, // 01110010 -> 3/1, 6 bit used
	{ 6,  3,  1, -1 }, // 01110011 -> 3/1, 6 bit used
	{ 6,  3,  0, -1 }, // 01110100 -> 3/0, 6 bit used
	{ 6,  3,  0, -1 }, // 01110101 -> 3/0, 6 bit used
	{ 6,  3,  0, -1 }, // 01110110 -> 3/0, 6 bit used
	{ 6,  3,  0, -1 }, // 01110111 -> 3/0, 6 bit used
	{ 5,  2,  2, -1 }, // 01111000 -> 2/2, 5 bit used
	{ 5,  2,  2, -1 }, // 01111001 -> 2/2, 5 bit used
	{ 5,  2,  2, -1 }, // 01111010 -> 2/2, 5 bit used
	{ 5,  2,  2, -1 }, // 01111011 -> 2/2, 5 bit used
	{ 5,  2,  2, -1 }, // 01111100 -> 2/2, 5 bit used
	{ 5,  2,  2, -1 }, // 01111101 -> 2/2, 5 bit used
	{ 5,  2,  2, -1 }, // 01111110 -> 2/2, 5 bit used
	{ 5,  2,  2, -1 }, // 01111111 -> 2/2, 5 bit used
	{ 5,  1,  2, -1 }, // 10000000 -> 1/2, 5 bit used
	{ 5,  1,  2, -1 }, // 10000001 -> 1/2, 5 bit used
	{ 5,  1,  2, -1 }, // 10000010 -> 1/2, 5 bit used
	{ 5,  1,  2, -1 }, // 10000011 -> 1/2, 5 bit used
	{ 5,  1,  2, -1 }, // 10000100 -> 1/2, 5 bit used
	{ 5,  1,  2, -1 }, // 10000101 -> 1/2, 5 bit used
	{ 5,  1,  2, -1 }, // 10000110 -> 1/2, 5 bit used
	{ 5,  1,  2, -1 }, // 10000111 -> 1/2, 5 bit used
	{ 5,  2,  1, -1 }, // 10001000 -> 2/1, 5 bit used
	{ 5,  2,  1, -1 }, // 10001001 -> 2/1, 5 bit used
	{ 5,  2,  1, -1 }, // 10001010 -> 2/1, 5 bit used
	{ 5,  2,  1, -1 }, // 10001011 -> 2/1, 5 bit used
	{ 5,  2,  1, -1 }, // 10001100 -> 2/1, 5 bit used
	{ 5,  2,  1, -1 }, // 10001101 -> 2/1, 5 bit used
	{ 5,  2,  1, -1 }, // 10001110 -> 2/1, 5 bit used
	{ 5,  2,  1, -1 }, // 10001111 -> 2/1, 5 bit used
	{ 5,  0,  2, -1 }, // 10010000 -> 0/2, 5 bit used
	{ 5,  0,  2, -1 }, // 10010001 -> 0/2, 5 bit used
	{ 5,  0,  2, -1 }, // 10010010 -> 0/2, 5 bit used
	{ 5,  0,  2, -1 }, // 10010011 -> 0/2, 5 bit used
	{ 5,  0,  2, -1 }, // 10010100 -> 0/2, 5 bit used
	{ 5,  0,  2, -1 }, // 10010101 -> 0/2, 5 bit used
	{ 5,  0,  2, -1 }, // 10010110 -> 0/2, 5 bit used
	{ 5,  0,  2, -1 }, // 10010111 -> 0/2, 5 bit used
	{ 5,  2,  0, -1 }, // 10011000 -> 2/0, 5 bit used
	{ 5,  2,  0, -1 }, // 10011001 -> 2/0, 5 bit used
	{ 5,  2,  0, -1 }, // 10011010 -> 2/0, 5 bit used
	{ 5,  2,  0, -1 }, // 10011011 -> 2/0, 5 bit used
	{ 5,  2,  0, -1 }, // 10011100 -> 2/0, 5 bit used
	{ 5,  2,  0, -1 }, // 10011101 -> 2/0, 5 bit used
	{ 5,  2,  0, -1 }, // 10011110 -> 2/0, 5 bit used
	{ 5,  2,  0, -1 }, // 10011111 -> 2/0, 5 bit used
	{ 3,  1,  1, -1 }, // 10100000 -> 1/1, 3 bit used
	{ 3,  1,  1, -1 }, // 10100001 -> 1/1, 3 bit used
	{ 3,  1,  1, -1 }, // 10100010 -> 1/1, 3 bit used
	{ 3,  1,  1, -1 }, // 10100011 -> 1/1, 3 bit used
	{ 3,  1,  1, -1 }, // 10100100 -> 1/1, 3 bit used
	{ 3,  1,  1, -1 }, // 10100101 -> 1/1, 3 bit used
	{ 3,  1,  1, -1 }, // 10100110 -> 1/1, 3 bit used
	{ 3,  1,  1, -1 }, // 10100111 -> 1/1, 3 bit used
	{ 3,  1,  1, -1 }, // 10101000 -> 1/1, 3 bit used
	{ 3,  1,  1, -1 }, // 10101001 -> 1/1, 3 bit used
	{ 3,  1,  1, -1 }, // 10101010 -> 1/1, 3 bit used
	{ 3,  1,  1, -1 }, // 10101011 -> 1/1, 3 bit used
	{ 3,  1,  1, -1 }, // 10101100 -> 1/1, 3 bit used
	{ 3,  1,  1, -1 }, // 10101101 -> 1/1, 3 bit used
	{ 3,  1,  1, -1 }, // 10101110 -> 1/1, 3 bit used
	{ 3,  1,  1, -1 }, // 10101111 -> 1/1, 3 bit used
	{ 3,  1,  1, -1 }, // 10110000 -> 1/1, 3 bit used
	{ 3,  1,  1, -1 }, // 10110001 -> 1/1, 3 bit used
	{ 3,  1,  1, -1 }, // 10110010 -> 1/1, 3 bit used
	{ 3,  1,  1, -1 }, // 10110011 -> 1/1, 3 bit used
	{ 3,  1,  1, -1 }, // 10110100 -> 1/1, 3 bit used
	{ 3,  1,  1, -1 }, // 10110101 -> 1/1, 3 bit used
	{ 3,  1,  1, -1 }, // 10110110 -> 1/1, 3 bit used
	{ 3,  1,  1, -1 }, // 10110111 -> 1/1, 3 bit used
	{ 3,  1,  1, -1 }, // 10111000 -> 1/1, 3 bit used
	{ 3,  1,  1, -1 }, // 10111001 -> 1/1, 3 bit used
	{ 3,  1,  1, -1 }, // 10111010 -> 1/1, 3 bit used
	{ 3,  1,  1, -1 }, // 10111011 -> 1/1, 3 bit used
	{ 3,  1,  1, -1 }, // 10111100 -> 1/1, 3 bit used
	{ 3,  1,  1, -1 }, // 10111101 -> 1/1, 3 bit used
	{ 3,  1,  1, -1 }, // 10111110 -> 1/1, 3 bit used
	{ 3,  1,  1, -1 }, // 10111111 -> 1/1, 3 bit used
	{ 4,  0,  1, -1 }, // 11000000 -> 0/1, 4 bit used
	{ 4,  0,  1, -1 }, // 11000001 -> 0/1, 4 bit used
	{ 4,  0,  1, -1 }, // 11000010 -> 0/1, 4 bit used
	{ 4,  0,  1, -1 }, // 11000011 -> 0/1, 4 bit used
	{ 4,  0,  1, -1 }, // 11000100 -> 0/1, 4 bit used
	{ 4,  0,  1, -1 }, // 11000101 -> 0/1, 4 bit used
	{ 4,  0,  1, -1 }, // 11000110 -> 0/1, 4 bit used
	{ 4,  0,  1, -1 }, // 11000111 -> 0/1, 4 bit used
	{ 4,  0,  1, -1 }, // 11001000 -> 0/1, 4 bit used
	{ 4,  0,  1, -1 }, // 11001001 -> 0/1, 4 bit used
	{ 4,  0,  1, -1 }, // 11001010 -> 0/1, 4 bit used
	{ 4,  0,  1, -1 }, // 11001011 -> 0/1, 4 bit used
	{ 4,  0,  1, -1 }, // 11001100 -> 0/1, 4 bit used
	{ 4,  0,  1, -1 }, // 11001101 -> 0/1, 4 bit used
	{ 4,  0,  1, -1 }, // 11001110 -> 0/1, 4 bit used
	{ 4,  0,  1, -1 }, // 11001111 -> 0/1, 4 bit used
	{ 4,  1,  0, -1 }, // 11010000 -> 1/0, 4 bit used
	{ 4,  1,  0, -1 }, // 11010001 -> 1/0, 4 bit used
	{ 4,  1,  0, -1 }, // 11010010 -> 1/0, 4 bit used
	{ 4,  1,  0, -1 }, // 11010011 -> 1/0, 4 bit used
	{ 4,  1,  0, -1 }, // 11010100 -> 1/0, 4 bit used
	{ 4,  1,  0, -1 }, // 11010101 -> 1/0, 4 bit used
	{ 4,  1,  0, -1 }, // 11010110 -> 1/0, 4 bit used
	{ 4,  1,  0, -1 }, // 11010111 -> 1/0, 4 bit used
	{ 4,  1,  0, -1 }, // 11011000 -> 1/0, 4 bit used
	{ 4,  1,  0, -1 }, // 11011001 -> 1/0, 4 bit used
	{ 4,  1,  0, -1 }, // 11011010 -> 1/0, 4 bit used
	{ 4,  1,  0, -1 }, // 11011011 -> 1/0, 4 bit used
	{ 4,  1,  0, -1 }, // 11011100 -> 1/0, 4 bit used
	{ 4,  1,  0, -1 }, // 11011101 -> 1/0, 4 bit used
	{ 4,  1,  0, -1 }, // 11011110 -> 1/0, 4 bit used
	{ 4,  1,  0, -1 }, // 11011111 -> 1/0, 4 bit used
	{ 3,  0,  0, -1 }, // 11100000 -> 0/0, 3 bit used
	{ 3,  0,  0, -1 }, // 11100001 -> 0/0, 3 bit used
	{ 3,  0,  0, -1 }, // 11100010 -> 0/0, 3 bit used
	{ 3,  0,  0, -1 }, // 11100011 -> 0/0, 3 bit used
	{ 3,  0,  0, -1 }, // 11100100 -> 0/0, 3 bit used
	{ 3,  0,  0, -1 }, // 11100101 -> 0/0, 3 bit used
	{ 3,  0,  0, -1 }, // 11100110 -> 0/0, 3 bit used
	{ 3,  0,  0, -1 }, // 11100111 -> 0/0, 3 bit used
	{ 3,  0,  0, -1 }, // 11101000 -> 0/0, 3 bit used
	{ 3,  0,  0, -1 }, // 11101001 -> 0/0, 3 bit used
	{ 3,  0,  0, -1 }, // 11101010 -> 0/0, 3 bit used
	{ 3,  0,  0, -1 }, // 11101011 -> 0/0, 3 bit used
	{ 3,  0,  0, -1 }, // 11101100 -> 0/0, 3 bit used
	{ 3,  0,  0, -1 }, // 11101101 -> 0/0, 3 bit used
	{ 3,  0,  0, -1 }, // 11101110 -> 0/0, 3 bit used
	{ 3,  0,  0, -1 }, // 11101111 -> 0/0, 3 bit used
	{ 3,  0,  0, -1 }, // 11110000 -> 0/0, 3 bit used
	{ 3,  0,  0, -1 }, // 11110001 -> 0/0, 3 bit used
	{ 3,  0,  0, -1 }, // 11110010 -> 0/0, 3 bit used
	{ 3,  0,  0, -1 }, // 11110011 -> 0/0, 3 bit used
	{ 3,  0,  0, -1 }, // 11110100 -> 0/0, 3 bit used
	{ 3,  0,  0, -1 }, // 11110101 -> 0/0, 3 bit used
	{ 3,  0,  0, -1 }, // 11110110 -> 0/0, 3 bit used
	{ 3,  0,  0, -1 }, // 11110111 -> 0/0, 3 bit used
	{ 3,  0,  0, -1 }, // 11111000 -> 0/0, 3 bit used
	{ 3,  0,  0, -1 }, // 11111001 -> 0/0, 3 bit used
	{ 3,  0,  0, -1 }, // 11111010 -> 0/0, 3 bit used
	{ 3,  0,  0, -1 }, // 11111011 -> 0/0, 3 bit used
	{ 3,  0,  0, -1 }, // 11111100 -> 0/0, 3 bit used
	{ 3,  0,  0, -1 }, // 11111101 -> 0/0, 3 bit used
	{ 3,  0,  0, -1 }, // 11111110 -> 0/0, 3 bit used
	{ 3,  0,  0, -1 }  // 11111111 -> 0/0, 3 bit used
};
// extension table 1, prefix 00000000
static huffman_conv htab15_dec_ext1[ 32 ] = {
	{ 5, 15, 15, -1 }, // 00000 -> 15/15, 5 bit used
	{ 5, 14, 15, -1 }, // 00001 -> 14/15, 5 bit used
	{ 5, 15, 14, -1 }, // 00010 -> 15/14, 5 bit used
	{ 5, 13, 15, -1 }, // 00011 -> 13/15, 5 bit used
	{ 4, 14, 14, -1 }, // 00100 -> 14/14, 4 bit used
	{ 4, 14, 14, -1 }, // 00101 -> 14/14, 4 bit used
	{ 5, 15, 13, -1 }, // 00110 -> 15/13, 5 bit used
	{ 5, 12, 15, -1 }, // 00111 -> 12/15, 5 bit used
	{ 5, 15, 12, -1 }, // 01000 -> 15/12, 5 bit used
	{ 5, 13, 14, -1 }, // 01001 -> 13/14, 5 bit used
	{ 5, 14, 13, -1 }, // 01010 -> 14/13, 5 bit used
	{ 5, 11, 15, -1 }, // 01011 -> 11/15, 5 bit used
	{ 4, 15, 11, -1 }, // 01100 -> 15/11, 4 bit used
	{ 4, 15, 11, -1 }, // 01101 -> 15/11, 4 bit used
	{ 5, 12, 14, -1 }, // 01110 -> 12/14, 5 bit used
	{ 5, 14, 12, -1 }, // 01111 -> 14/12, 5 bit used
	{ 4, 13, 13, -1 }, // 10000 -> 13/13, 4 bit used
	{ 4, 13, 13, -1 }, // 10001 -> 13/13, 4 bit used
	{ 4, 10, 15, -1 }, // 10010 -> 10/15, 4 bit used
	{ 4, 10, 15, -1 }, // 10011 -> 10/15, 4 bit used
	{ 4, 15, 10, -1 }, // 10100 -> 15/10, 4 bit used
	{ 4, 15, 10, -1 }, // 10101 -> 15/10, 4 bit used
	{ 4, 11, 14, -1 }, // 10110 -> 11/14, 4 bit used
	{ 4, 11, 14, -1 }, // 10111 -> 11/14, 4 bit used
	{ 4, 14, 11, -1 }, // 11000 -> 14/11, 4 bit used
	{ 4, 14, 11, -1 }, // 11001 -> 14/11, 4 bit used
	{ 4, 12, 13, -1 }, // 11010 -> 12/13, 4 bit used
	{ 4, 12, 13, -1 }, // 11011 -> 12/13, 4 bit used
	{ 4, 13, 12, -1 }, // 11100 -> 13/12, 4 bit used
	{ 4, 13, 12, -1 }, // 11101 -> 13/12, 4 bit used
	{ 4,  9, 15, -1 }, // 11110 -> 9/15, 4 bit used
	{ 4,  9, 15, -1 }  // 11111 -> 9/15, 4 bit used
};
// extension table 2, prefix 00000001
static huffman_conv htab15_dec_ext2[ 32 ] = {
	{ 4, 15,  9, -1 }, // 00000 -> 15/9, 4 bit used
	{ 4, 15,  9, -1 }, // 00001 -> 15/9, 4 bit used
	{ 4, 14, 10, -1 }, // 00010 -> 14/10, 4 bit used
	{ 4, 14, 10, -1 }, // 00011 -> 14/10, 4 bit used
	{ 4, 11, 13, -1 }, // 00100 -> 11/13, 4 bit used
	{ 4, 11, 13, -1 }, // 00101 -> 11/13, 4 bit used
	{ 4, 13, 11, -1 }, // 00110 -> 13/11, 4 bit used
	{ 4, 13, 11, -1 }, // 00111 -> 13/11, 4 bit used
	{ 4,  8, 15, -1 }, // 01000 -> 8/15, 4 bit used
	{ 4,  8, 15, -1 }, // 01001 -> 8/15, 4 bit used
	{ 4, 15,  8, -1 }, // 01010 -> 15/8, 4 bit used
	{ 4, 15,  8, -1 }, // 01011 -> 15/8, 4 bit used
	{ 4, 12, 12, -1 }, // 01100 -> 12/12, 4 bit used
	{ 4, 12, 12, -1 }, // 01101 -> 12/12, 4 bit used
	{ 4,  9, 14, -1 }, // 01110 -> 9/14, 4 bit used
	{ 4,  9, 14, -1 }, // 01111 -> 9/14, 4 bit used
	{ 4, 14,  9, -1 }, // 10000 -> 14/9, 4 bit used
	{ 4, 14,  9, -1 }, // 10001 -> 14/9, 4 bit used
	{ 4,  7, 15, -1 }, // 10010 -> 7/15, 4 bit used
	{ 4,  7, 15, -1 }, // 10011 -> 7/15, 4 bit used
	{ 4, 15,  7, -1 }, // 10100 -> 15/7, 4 bit used
	{ 4, 15,  7, -1 }, // 10101 -> 15/7, 4 bit used
	{ 4, 10, 13, -1 }, // 10110 -> 10/13, 4 bit used
	{ 4, 10, 13, -1 }, // 10111 -> 10/13, 4 bit used
	{ 4, 13, 10, -1 }, // 11000 -> 13/10, 4 bit used
	{ 4, 13, 10, -1 }, // 11001 -> 13/10, 4 bit used
	{ 4, 11, 12, -1 }, // 11010 -> 11/12, 4 bit used
	{ 4, 11, 12, -1 }, // 11011 -> 11/12, 4 bit used
	{ 4,  6, 15, -1 }, // 11100 -> 6/15, 4 bit used
	{ 4,  6, 15, -1 }, // 11101 -> 6/15, 4 bit used
	{ 5, 10, 14, -1 }, // 11110 -> 10/14, 5 bit used
	{ 5,  0, 15, -1 }  // 11111 -> 0/15, 5 bit used
};
// extension table 3, prefix 00000010
static huffman_conv htab15_dec_ext3[ 16 ] = {
	{ 3, 12, 11, -1 }, // 0000 -> 12/11, 3 bit used
	{ 3, 12, 11, -1 }, // 0001 -> 12/11, 3 bit used
	{ 3, 15,  6, -1 }, // 0010 -> 15/6, 3 bit used
	{ 3, 15,  6, -1 }, // 0011 -> 15/6, 3 bit used
	{ 4,  8, 14, -1 }, // 0100 -> 8/14, 4 bit used
	{ 4, 14,  8, -1 }, // 0101 -> 14/8, 4 bit used
	{ 4,  5, 15, -1 }, // 0110 -> 5/15, 4 bit used
	{ 4,  9, 13, -1 }, // 0111 -> 9/13, 4 bit used
	{ 3, 15,  5, -1 }, // 1000 -> 15/5, 3 bit used
	{ 3, 15,  5, -1 }, // 1001 -> 15/5, 3 bit used
	{ 3,  7, 14, -1 }, // 1010 -> 7/14, 3 bit used
	{ 3,  7, 14, -1 }, // 1011 -> 7/14, 3 bit used
	{ 3, 14,  7, -1 }, // 1100 -> 14/7, 3 bit used
	{ 3, 14,  7, -1 }, // 1101 -> 14/7, 3 bit used
	{ 3, 10, 12, -1 }, // 1110 -> 10/12, 3 bit used
	{ 3, 10, 12, -1 }  // 1111 -> 10/12, 3 bit used
};
// extension table 4, prefix 00000011
static huffman_conv htab15_dec_ext4[ 16 ] = {
	{ 3, 12, 10, -1 }, // 0000 -> 12/10, 3 bit used
	{ 3, 12, 10, -1 }, // 0001 -> 12/10, 3 bit used
	{ 3, 11, 11, -1 }, // 0010 -> 11/11, 3 bit used
	{ 3, 11, 11, -1 }, // 0011 -> 11/11, 3 bit used
	{ 4, 13,  9, -1 }, // 0100 -> 13/9, 4 bit used
	{ 4,  8, 13, -1 }, // 0101 -> 8/13, 4 bit used
	{ 3,  4, 15, -1 }, // 0110 -> 4/15, 3 bit used
	{ 3,  4, 15, -1 }, // 0111 -> 4/15, 3 bit used
	{ 3, 15,  4, -1 }, // 1000 -> 15/4, 3 bit used
	{ 3, 15,  4, -1 }, // 1001 -> 15/4, 3 bit used
	{ 3,  3, 15, -1 }, // 1010 -> 3/15, 3 bit used
	{ 3,  3, 15, -1 }, // 1011 -> 3/15, 3 bit used
	{ 3, 15,  3, -1 }, // 1100 -> 15/3, 3 bit used
	{ 3, 15,  3, -1 }, // 1101 -> 15/3, 3 bit used
	{ 3, 13,  8, -1 }, // 1110 -> 13/8, 3 bit used
	{ 3, 13,  8, -1 }  // 1111 -> 13/8, 3 bit used
};
// extension table 5, prefix 00000100
static huffman_conv htab15_dec_ext5[ 16 ] = {
	{ 3, 14,  6, -1 }, // 0000 -> 14/6, 3 bit used
	{ 3, 14,  6, -1 }, // 0001 -> 14/6, 3 bit used
	{ 3,  2, 15, -1 }, // 0010 -> 2/15, 3 bit used
	{ 3,  2, 15, -1 }, // 0011 -> 2/15, 3 bit used
	{ 3, 15,  2, -1 }, // 0100 -> 15/2, 3 bit used
	{ 3, 15,  2, -1 }, // 0101 -> 15/2, 3 bit used
	{ 4,  6, 14, -1 }, // 0110 -> 6/14, 4 bit used
	{ 4, 15,  0, -1 }, // 0111 -> 15/0, 4 bit used
	{ 3,  1, 15, -1 }, // 1000 -> 1/15, 3 bit used
	{ 3,  1, 15, -1 }, // 1001 -> 1/15, 3 bit used
	{ 3, 15,  1, -1 }, // 1010 -> 15/1, 3 bit used
	{ 3, 15,  1, -1 }, // 1011 -> 15/1, 3 bit used
	{ 3,  9, 12, -1 }, // 1100 -> 9/12, 3 bit used
	{ 3,  9, 12, -1 }, // 1101 -> 9/12, 3 bit used
	{ 3, 12,  9, -1 }, // 1110 -> 12/9, 3 bit used
	{ 3, 12,  9, -1 }  // 1111 -> 12/9, 3 bit used
};
// extension table 6, prefix 00000101
static huffman_conv htab15_dec_ext6[ 8 ] = {
	{ 3,  5, 14, -1 }, // 000 -> 5/14, 3 bit used
	{ 3, 10, 11, -1 }, // 001 -> 10/11, 3 bit used
	{ 3, 11, 10, -1 }, // 010 -> 11/10, 3 bit used
	{ 3, 14,  5, -1 }, // 011 -> 14/5, 3 bit used
	{ 3,  7, 13, -1 }, // 100 -> 7/13, 3 bit used
	{ 3, 13,  7, -1 }, // 101 -> 13/7, 3 bit used
	{ 3,  4, 14, -1 }, // 110 -> 4/14, 3 bit used
	{ 3, 14,  4, -1 }  // 111 -> 14/4, 3 bit used
};
// extension table 7, prefix 00000110
static huffman_conv htab15_dec_ext7[ 8 ] = {
	{ 3,  8, 12, -1 }, // 000 -> 8/12, 3 bit used
	{ 3, 12,  8, -1 }, // 001 -> 12/8, 3 bit used
	{ 3,  3, 14, -1 }, // 010 -> 3/14, 3 bit used
	{ 3,  6, 13, -1 }, // 011 -> 6/13, 3 bit used
	{ 3, 13,  6, -1 }, // 100 -> 13/6, 3 bit used
	{ 3, 14,  3, -1 }, // 101 -> 14/3, 3 bit used
	{ 3,  9, 11, -1 }, // 110 -> 9/11, 3 bit used
	{ 3, 11,  9, -1 }  // 111 -> 11/9, 3 bit used
};
// extension table 8, prefix 00000111
static huffman_conv htab15_dec_ext8[ 16 ] = {
	{ 3,  2, 14, -1 }, // 0000 -> 2/14, 3 bit used
	{ 3,  2, 14, -1 }, // 0001 -> 2/14, 3 bit used
	{ 3, 10, 10, -1 }, // 0010 -> 10/10, 3 bit used
	{ 3, 10, 10, -1 }, // 0011 -> 10/10, 3 bit used
	{ 3, 14,  2, -1 }, // 0100 -> 14/2, 3 bit used
	{ 3, 14,  2, -1 }, // 0101 -> 14/2, 3 bit used
	{ 3,  1, 14, -1 }, // 0110 -> 1/14, 3 bit used
	{ 3,  1, 14, -1 }, // 0111 -> 1/14, 3 bit used
	{ 3, 14,  1, -1 }, // 1000 -> 14/1, 3 bit used
	{ 3, 14,  1, -1 }, // 1001 -> 14/1, 3 bit used
	{ 4,  0, 14, -1 }, // 1010 -> 0/14, 4 bit used
	{ 4, 14,  0, -1 }, // 1011 -> 14/0, 4 bit used
	{ 3,  5, 13, -1 }, // 1100 -> 5/13, 3 bit used
	{ 3,  5, 13, -1 }, // 1101 -> 5/13, 3 bit used
	{ 3, 13,  5, -1 }, // 1110 -> 13/5, 3 bit used
	{ 3, 13,  5, -1 }  // 1111 -> 13/5, 3 bit used
};
// extension table 9, prefix 00001000
static huffman_conv htab15_dec_ext9[ 8 ] = {
	{ 3,  7, 12, -1 }, // 000 -> 7/12, 3 bit used
	{ 3, 12,  7, -1 }, // 001 -> 12/7, 3 bit used
	{ 3,  4, 13, -1 }, // 010 -> 4/13, 3 bit used
	{ 3,  8, 11, -1 }, // 011 -> 8/11, 3 bit used
	{ 2, 13,  4, -1 }, // 100 -> 13/4, 2 bit used
	{ 2, 13,  4, -1 }, // 101 -> 13/4, 2 bit used
	{ 3, 11,  8, -1 }, // 110 -> 11/8, 3 bit used
	{ 3,  9, 10, -1 }  // 111 -> 9/10, 3 bit used
};
// extension table 10, prefix 00001001
static huffman_conv htab15_dec_ext10[ 8 ] = {
	{ 3, 10,  9, -1 }, // 000 -> 10/9, 3 bit used
	{ 3,  6, 12, -1 }, // 001 -> 6/12, 3 bit used
	{ 3, 12,  6, -1 }, // 010 -> 12/6, 3 bit used
	{ 3,  3, 13, -1 }, // 011 -> 3/13, 3 bit used
	{ 2, 13,  3, -1 }, // 100 -> 13/3, 2 bit used
	{ 2, 13,  3, -1 }, // 101 -> 13/3, 2 bit used
	{ 2, 13,  2, -1 }, // 110 -> 13/2, 2 bit used
	{ 2, 13,  2, -1 }  // 111 -> 13/2, 2 bit used
};
// extension table 11, prefix 00001010
static huffman_conv htab15_dec_ext11[ 8 ] = {
	{ 3,  2, 13, -1 }, // 000 -> 2/13, 3 bit used
	{ 3,  0, 13, -1 }, // 001 -> 0/13, 3 bit used
	{ 2,  1, 13, -1 }, // 010 -> 1/13, 2 bit used
	{ 2,  1, 13, -1 }, // 011 -> 1/13, 2 bit used
	{ 2,  7, 11, -1 }, // 100 -> 7/11, 2 bit used
	{ 2,  7, 11, -1 }, // 101 -> 7/11, 2 bit used
	{ 2, 11,  7, -1 }, // 110 -> 11/7, 2 bit used
	{ 2, 11,  7, -1 }  // 111 -> 11/7, 2 bit used
};
// extension table 12, prefix 00001011
static huffman_conv htab15_dec_ext12[ 8 ] = {
	{ 2, 13,  1, -1 }, // 000 -> 13/1, 2 bit used
	{ 2, 13,  1, -1 }, // 001 -> 13/1, 2 bit used
	{ 3,  5, 12, -1 }, // 010 -> 5/12, 3 bit used
	{ 3, 13,  0, -1 }, // 011 -> 13/0, 3 bit used
	{ 2, 12,  5, -1 }, // 100 -> 12/5, 2 bit used
	{ 2, 12,  5, -1 }, // 101 -> 12/5, 2 bit used
	{ 2,  8, 10, -1 }, // 110 -> 8/10, 2 bit used
	{ 2,  8, 10, -1 }  // 111 -> 8/10, 2 bit used
};
// extension table 13, prefix 00001100
static huffman_conv htab15_dec_ext13[ 4 ] = {
	{ 2, 10,  8, -1 }, // 00 -> 10/8, 2 bit used
	{ 2,  4, 12, -1 }, // 01 -> 4/12, 2 bit used
	{ 2, 12,  4, -1 }, // 10 -> 12/4, 2 bit used
	{ 2,  6, 11, -1 }  // 11 -> 6/11, 2 bit used
};
// extension table 14, prefix 00001101
static huffman_conv htab15_dec_ext14[ 8 ] = {
	{ 2, 11,  6, -1 }, // 000 -> 11/6, 2 bit used
	{ 2, 11,  6, -1 }, // 001 -> 11/6, 2 bit used
	{ 3,  9,  9, -1 }, // 010 -> 9/9, 3 bit used
	{ 3,  0, 12, -1 }, // 011 -> 0/12, 3 bit used
	{ 2,  3, 12, -1 }, // 100 -> 3/12, 2 bit used
	{ 2,  3, 12, -1 }, // 101 -> 3/12, 2 bit used
	{ 2, 12,  3, -1 }, // 110 -> 12/3, 2 bit used
	{ 2, 12,  3, -1 }  // 111 -> 12/3, 2 bit used
};
// extension table 15, prefix 00001110
static huffman_conv htab15_dec_ext15[ 8 ] = {
	{ 2,  7, 10, -1 }, // 000 -> 7/10, 2 bit used
	{ 2,  7, 10, -1 }, // 001 -> 7/10, 2 bit used
	{ 2, 10,  7, -1 }, // 010 -> 10/7, 2 bit used
	{ 2, 10,  7, -1 }, // 011 -> 10/7, 2 bit used
	{ 2, 10,  6, -1 }, // 100 -> 10/6, 2 bit used
	{ 2, 10,  6, -1 }, // 101 -> 10/6, 2 bit used
	{ 3, 12,  0, -1 }, // 110 -> 12/0, 3 bit used
	{ 3,  0, 11, -1 }  // 111 -> 0/11, 3 bit used
};
// extension table 16, prefix 00001111
static huffman_conv htab15_dec_ext16[ 4 ] = {
	{ 1, 12,  2, -1 }, // 00 -> 12/2, 1 bit used
	{ 1, 12,  2, -1 }, // 01 -> 12/2, 1 bit used
	{ 2,  2, 12, -1 }, // 10 -> 2/12, 2 bit used
	{ 2,  5, 11, -1 }  // 11 -> 5/11, 2 bit used
};
// extension table 17, prefix 00010000
static huffman_conv htab15_dec_ext17[ 4 ] = {
	{ 2, 11,  5, -1 }, // 00 -> 11/5, 2 bit used
	{ 2,  1, 12, -1 }, // 01 -> 1/12, 2 bit used
	{ 2,  8,  9, -1 }, // 10 -> 8/9, 2 bit used
	{ 2,  9,  8, -1 }  // 11 -> 9/8, 2 bit used
};
// extension table 18, prefix 00010001
static huffman_conv htab15_dec_ext18[ 4 ] = {
	{ 2, 12,  1, -1 }, // 00 -> 12/1, 2 bit used
	{ 2,  4, 11, -1 }, // 01 -> 4/11, 2 bit used
	{ 2, 11,  4, -1 }, // 10 -> 11/4, 2 bit used
	{ 2,  6, 10, -1 }  // 11 -> 6/10, 2 bit used
};
// extension table 19, prefix 00010010
static huffman_conv htab15_dec_ext19[ 4 ] = {
	{ 2,  3, 11, -1 }, // 00 -> 3/11, 2 bit used
	{ 2,  7,  9, -1 }, // 01 -> 7/9, 2 bit used
	{ 1, 11,  3, -1 }, // 10 -> 11/3, 1 bit used
	{ 1, 11,  3, -1 }  // 11 -> 11/3, 1 bit used
};
// extension table 20, prefix 00010011
static huffman_conv htab15_dec_ext20[ 4 ] = {
	{ 2,  9,  7, -1 }, // 00 -> 9/7, 2 bit used
	{ 2,  8,  8, -1 }, // 01 -> 8/8, 2 bit used
	{ 2,  2, 11, -1 }, // 10 -> 2/11, 2 bit used
	{ 2,  5, 10, -1 }  // 11 -> 5/10, 2 bit used
};
// extension table 21, prefix 00010100
static huffman_conv htab15_dec_ext21[ 4 ] = {
	{ 1, 11,  2, -1 }, // 00 -> 11/2, 1 bit used
	{ 1, 11,  2, -1 }, // 01 -> 11/2, 1 bit used
	{ 2, 10,  5, -1 }, // 10 -> 10/5, 2 bit used
	{ 2,  1, 11, -1 }  // 11 -> 1/11, 2 bit used
};
// extension table 22, prefix 00010101
static huffman_conv htab15_dec_ext22[ 4 ] = {
	{ 1, 11,  1, -1 }, // 00 -> 11/1, 1 bit used
	{ 1, 11,  1, -1 }, // 01 -> 11/1, 1 bit used
	{ 2, 11,  0, -1 }, // 10 -> 11/0, 2 bit used
	{ 2,  6,  9, -1 }  // 11 -> 6/9, 2 bit used
};
// extension table 23, prefix 00010110
static huffman_conv htab15_dec_ext23[ 4 ] = {
	{ 2,  9,  6, -1 }, // 00 -> 9/6, 2 bit used
	{ 2,  4, 10, -1 }, // 01 -> 4/10, 2 bit used
	{ 2, 10,  4, -1 }, // 10 -> 10/4, 2 bit used
	{ 2,  7,  8, -1 }  // 11 -> 7/8, 2 bit used
};
// extension table 24, prefix 00010111
static huffman_conv htab15_dec_ext24[ 4 ] = {
	{ 2,  8,  7, -1 }, // 00 -> 8/7, 2 bit used
	{ 2,  3, 10, -1 }, // 01 -> 3/10, 2 bit used
	{ 1, 10,  3, -1 }, // 10 -> 10/3, 1 bit used
	{ 1, 10,  3, -1 }  // 11 -> 10/3, 1 bit used
};
// extension table 25, prefix 00011000
static huffman_conv htab15_dec_ext25[ 2 ] = {
	{ 1,  5,  9, -1 }, // 0 -> 5/9, 1 bit used
	{ 1,  9,  5, -1 }  // 1 -> 9/5, 1 bit used
};
// extension table 26, prefix 00011001
static huffman_conv htab15_dec_ext26[ 2 ] = {
	{ 1,  2, 10, -1 }, // 0 -> 2/10, 1 bit used
	{ 1, 10,  2, -1 }  // 1 -> 10/2, 1 bit used
};
// extension table 27, prefix 00011010
static huffman_conv htab15_dec_ext27[ 2 ] = {
	{ 1,  1, 10, -1 }, // 0 -> 1/10, 1 bit used
	{ 1, 10,  1, -1 }  // 1 -> 10/1, 1 bit used
};
// extension table 28, prefix 00011011
static huffman_conv htab15_dec_ext28[ 4 ] = {
	{ 2,  0, 10, -1 }, // 00 -> 0/10, 2 bit used
	{ 2, 10,  0, -1 }, // 01 -> 10/0, 2 bit used
	{ 1,  6,  8, -1 }, // 10 -> 6/8, 1 bit used
	{ 1,  6,  8, -1 }  // 11 -> 6/8, 1 bit used
};
// extension table 29, prefix 00011100
static huffman_conv htab15_dec_ext29[ 2 ] = {
	{ 1,  8,  6, -1 }, // 0 -> 8/6, 1 bit used
	{ 1,  4,  9, -1 }  // 1 -> 4/9, 1 bit used
};
// extension table 30, prefix 00011101
static huffman_conv htab15_dec_ext30[ 2 ] = {
	{ 1,  9,  4, -1 }, // 0 -> 9/4, 1 bit used
	{ 1,  3,  9, -1 }  // 1 -> 3/9, 1 bit used
};
// extension table 31, prefix 00011110
static huffman_conv htab15_dec_ext31[ 4 ] = {
	{ 1,  9,  3, -1 }, // 00 -> 9/3, 1 bit used
	{ 1,  9,  3, -1 }, // 01 -> 9/3, 1 bit used
	{ 2,  7,  7, -1 }, // 10 -> 7/7, 2 bit used
	{ 2,  0,  9, -1 }  // 11 -> 0/9, 2 bit used
};
// extension table 32, prefix 00011111
static huffman_conv htab15_dec_ext32[ 2 ] = {
	{ 1,  5,  8, -1 }, // 0 -> 5/8, 1 bit used
	{ 1,  8,  5, -1 }  // 1 -> 8/5, 1 bit used
};
// extension table 33, prefix 00100000
static huffman_conv htab15_dec_ext33[ 2 ] = {
	{ 1,  2,  9, -1 }, // 0 -> 2/9, 1 bit used
	{ 1,  6,  7, -1 }  // 1 -> 6/7, 1 bit used
};
// extension table 34, prefix 00100001
static huffman_conv htab15_dec_ext34[ 2 ] = {
	{ 1,  7,  6, -1 }, // 0 -> 7/6, 1 bit used
	{ 1,  9,  2, -1 }  // 1 -> 9/2, 1 bit used
};
// extension table 35, prefix 00100011
static huffman_conv htab15_dec_ext35[ 2 ] = {
	{ 1,  1,  9, -1 }, // 0 -> 1/9, 1 bit used
	{ 1,  9,  0, -1 }  // 1 -> 9/0, 1 bit used
};
// extension table 36, prefix 00100100
static huffman_conv htab15_dec_ext36[ 2 ] = {
	{ 1,  4,  8, -1 }, // 0 -> 4/8, 1 bit used
	{ 1,  8,  4, -1 }  // 1 -> 8/4, 1 bit used
};
// extension table 37, prefix 00100101
static huffman_conv htab15_dec_ext37[ 2 ] = {
	{ 1,  5,  7, -1 }, // 0 -> 5/7, 1 bit used
	{ 1,  7,  5, -1 }  // 1 -> 7/5, 1 bit used
};
// extension table 38, prefix 00100110
static huffman_conv htab15_dec_ext38[ 2 ] = {
	{ 1,  3,  8, -1 }, // 0 -> 3/8, 1 bit used
	{ 1,  8,  3, -1 }  // 1 -> 8/3, 1 bit used
};
// extension table 39, prefix 00100111
static huffman_conv htab15_dec_ext39[ 2 ] = {
	{ 1,  6,  6, -1 }, // 0 -> 6/6, 1 bit used
	{ 1,  4,  7, -1 }  // 1 -> 4/7, 1 bit used
};
// extension table 40, prefix 00101100
static huffman_conv htab15_dec_ext40[ 2 ] = {
	{ 1,  7,  4, -1 }, // 0 -> 7/4, 1 bit used
	{ 1,  0,  8, -1 }  // 1 -> 0/8, 1 bit used
};
// extension table 41, prefix 00101101
static huffman_conv htab15_dec_ext41[ 2 ] = {
	{ 1,  8,  0, -1 }, // 0 -> 8/0, 1 bit used
	{ 1,  5,  6, -1 }  // 1 -> 5/6, 1 bit used
};
// extension table 42, prefix 00101110
static huffman_conv htab15_dec_ext42[ 2 ] = {
	{ 1,  6,  5, -1 }, // 0 -> 6/5, 1 bit used
	{ 1,  3,  7, -1 }  // 1 -> 3/7, 1 bit used
};
// extension table 43, prefix 00101111
static huffman_conv htab15_dec_ext43[ 2 ] = {
	{ 1,  7,  3, -1 }, // 0 -> 7/3, 1 bit used
	{ 1,  4,  6, -1 }  // 1 -> 4/6, 1 bit used
};
// extension table 44, prefix 00110110
static huffman_conv htab15_dec_ext44[ 2 ] = {
	{ 1,  0,  7, -1 }, // 0 -> 0/7, 1 bit used
	{ 1,  7,  0, -1 }  // 1 -> 7/0, 1 bit used
};
// extension table 45, prefix 00111110
static huffman_conv htab15_dec_ext45[ 2 ] = {
	{ 1,  0,  6, -1 }, // 0 -> 0/6, 1 bit used
	{ 1,  6,  0, -1 }  // 1 -> 6/0, 1 bit used
};
// big values conversion table #15, total size: 534, ext tables: 45
static huffman_conv_set htab15_dec[ 46 ] = {
	{ htab15_dec_start, 8 }, // start table
	{ htab15_dec_ext1, 5 }, // ext table #1
	{ htab15_dec_ext2, 5 }, // ext table #2
	{ htab15_dec_ext3, 4 }, // ext table #3
	{ htab15_dec_ext4, 4 }, // ext table #4
	{ htab15_dec_ext5, 4 }, // ext table #5
	{ htab15_dec_ext6, 3 }, // ext table #6
	{ htab15_dec_ext7, 3 }, // ext table #7
	{ htab15_dec_ext8, 4 }, // ext table #8
	{ htab15_dec_ext9, 3 }, // ext table #9
	{ htab15_dec_ext10, 3 }, // ext table #10
	{ htab15_dec_ext11, 3 }, // ext table #11
	{ htab15_dec_ext12, 3 }, // ext table #12
	{ htab15_dec_ext13, 2 }, // ext table #13
	{ htab15_dec_ext14, 3 }, // ext table #14
	{ htab15_dec_ext15, 3 }, // ext table #15
	{ htab15_dec_ext16, 2 }, // ext table #16
	{ htab15_dec_ext17, 2 }, // ext table #17
	{ htab15_dec_ext18, 2 }, // ext table #18
	{ htab15_dec_ext19, 2 }, // ext table #19
	{ htab15_dec_ext20, 2 }, // ext table #20
	{ htab15_dec_ext21, 2 }, // ext table #21
	{ htab15_dec_ext22, 2 }, // ext table #22
	{ htab15_dec_ext23, 2 }, // ext table #23
	{ htab15_dec_ext24, 2 }, // ext table #24
	{ htab15_dec_ext25, 1 }, // ext table #25
	{ htab15_dec_ext26, 1 }, // ext table #26
	{ htab15_dec_ext27, 1 }, // ext table #27
	{ htab15_dec_ext28, 2 }, // ext table #28
	{ htab15_dec_ext29, 1 }, // ext table #29
	{ htab15_dec_ext30, 1 }, // ext table #30
	{ htab15_dec_ext31, 2 }, // ext table #31
	{ htab15_dec_ext32, 1 }, // ext table #32
	{ htab15_dec_ext33, 1 }, // ext table #33
	{ htab15_dec_ext34, 1 }, // ext table #34
	{ htab15_dec_ext35, 1 }, // ext table #35
	{ htab15_dec_ext36, 1 }, // ext table #36
	{ htab15_dec_ext37, 1 }, // ext table #37
	{ htab15_dec_ext38, 1 }, // ext table #38
	{ htab15_dec_ext39, 1 }, // ext table #39
	{ htab15_dec_ext40, 1 }, // ext table #40
	{ htab15_dec_ext41, 1 }, // ext table #41
	{ htab15_dec_ext42, 1 }, // ext table #42
	{ htab15_dec_ext43, 1 }, // ext table #43
	{ htab15_dec_ext44, 1 }, // ext table #44
	{ htab15_dec_ext45, 1 }  // ext table #45
};

/* -----------------------------------------------
	big values conversion table 16
	----------------------------------------------- */
static huffman_conv htab16_dec_start[ 256 ] = {
	{ 8, -1, -1,  1 }, // 00000000 -> extension table #1
	{ 8, -1, -1,  2 }, // 00000001 -> extension table #2
	{ 8, -1, -1,  3 }, // 00000010 -> extension table #3
	{ 8, 15, 15, -1 }, // 00000011 -> 15/15, 8 bit used
	{ 8, -1, -1,  4 }, // 00000100 -> extension table #4
	{ 8, -1, -1,  5 }, // 00000101 -> extension table #5
	{ 8, -1, -1,  6 }, // 00000110 -> extension table #6
	{ 8, 15,  2, -1 }, // 00000111 -> 15/2, 8 bit used
	{ 8, -1, -1,  7 }, // 00001000 -> extension table #7
	{ 8,  1, 15, -1 }, // 00001001 -> 1/15, 8 bit used
	{ 8, 15,  1, -1 }, // 00001010 -> 15/1, 8 bit used
	{ 8, -1, -1,  8 }, // 00001011 -> extension table #8
	{ 8, -1, -1,  9 }, // 00001100 -> extension table #9
	{ 8, -1, -1, 10 }, // 00001101 -> extension table #10
	{ 8, -1, -1, 11 }, // 00001110 -> extension table #11
	{ 8, -1, -1, 12 }, // 00001111 -> extension table #12
	{ 8, -1, -1, 13 }, // 00010000 -> extension table #13
	{ 8, -1, -1, 14 }, // 00010001 -> extension table #14
	{ 8, -1, -1, 15 }, // 00010010 -> extension table #15
	{ 8, -1, -1, 16 }, // 00010011 -> extension table #16
	{ 8, -1, -1, 17 }, // 00010100 -> extension table #17
	{ 8, -1, -1, 18 }, // 00010101 -> extension table #18
	{ 8, -1, -1, 19 }, // 00010110 -> extension table #19
	{ 8, -1, -1, 20 }, // 00010111 -> extension table #20
	{ 8, -1, -1, 21 }, // 00011000 -> extension table #21
	{ 8, -1, -1, 22 }, // 00011001 -> extension table #22
	{ 8, -1, -1, 23 }, // 00011010 -> extension table #23
	{ 8, -1, -1, 24 }, // 00011011 -> extension table #24
	{ 8, -1, -1, 25 }, // 00011100 -> extension table #25
	{ 8, -1, -1, 26 }, // 00011101 -> extension table #26
	{ 8,  5,  1, -1 }, // 00011110 -> 5/1, 8 bit used
	{ 8, -1, -1, 27 }, // 00011111 -> extension table #27
	{ 8, -1, -1, 28 }, // 00100000 -> extension table #28
	{ 8, -1, -1, 29 }, // 00100001 -> extension table #29
	{ 8, -1, -1, 30 }, // 00100010 -> extension table #30
	{ 8,  1,  4, -1 }, // 00100011 -> 1/4, 8 bit used
	{ 8,  4,  1, -1 }, // 00100100 -> 4/1, 8 bit used
	{ 8, -1, -1, 31 }, // 00100101 -> extension table #31
	{ 8,  2,  3, -1 }, // 00100110 -> 2/3, 8 bit used
	{ 8,  3,  2, -1 }, // 00100111 -> 3/2, 8 bit used
	{ 7,  1,  3, -1 }, // 00101000 -> 1/3, 7 bit used
	{ 7,  1,  3, -1 }, // 00101001 -> 1/3, 7 bit used
	{ 7,  3,  1, -1 }, // 00101010 -> 3/1, 7 bit used
	{ 7,  3,  1, -1 }, // 00101011 -> 3/1, 7 bit used
	{ 8,  0,  3, -1 }, // 00101100 -> 0/3, 8 bit used
	{ 8,  3,  0, -1 }, // 00101101 -> 3/0, 8 bit used
	{ 7,  2,  2, -1 }, // 00101110 -> 2/2, 7 bit used
	{ 7,  2,  2, -1 }, // 00101111 -> 2/2, 7 bit used
	{ 6,  1,  2, -1 }, // 00110000 -> 1/2, 6 bit used
	{ 6,  1,  2, -1 }, // 00110001 -> 1/2, 6 bit used
	{ 6,  1,  2, -1 }, // 00110010 -> 1/2, 6 bit used
	{ 6,  1,  2, -1 }, // 00110011 -> 1/2, 6 bit used
	{ 6,  2,  1, -1 }, // 00110100 -> 2/1, 6 bit used
	{ 6,  2,  1, -1 }, // 00110101 -> 2/1, 6 bit used
	{ 6,  2,  1, -1 }, // 00110110 -> 2/1, 6 bit used
	{ 6,  2,  1, -1 }, // 00110111 -> 2/1, 6 bit used
	{ 6,  0,  2, -1 }, // 00111000 -> 0/2, 6 bit used
	{ 6,  0,  2, -1 }, // 00111001 -> 0/2, 6 bit used
	{ 6,  0,  2, -1 }, // 00111010 -> 0/2, 6 bit used
	{ 6,  0,  2, -1 }, // 00111011 -> 0/2, 6 bit used
	{ 6,  2,  0, -1 }, // 00111100 -> 2/0, 6 bit used
	{ 6,  2,  0, -1 }, // 00111101 -> 2/0, 6 bit used
	{ 6,  2,  0, -1 }, // 00111110 -> 2/0, 6 bit used
	{ 6,  2,  0, -1 }, // 00111111 -> 2/0, 6 bit used
	{ 4,  1,  1, -1 }, // 01000000 -> 1/1, 4 bit used
	{ 4,  1,  1, -1 }, // 01000001 -> 1/1, 4 bit used
	{ 4,  1,  1, -1 }, // 01000010 -> 1/1, 4 bit used
	{ 4,  1,  1, -1 }, // 01000011 -> 1/1, 4 bit used
	{ 4,  1,  1, -1 }, // 01000100 -> 1/1, 4 bit used
	{ 4,  1,  1, -1 }, // 01000101 -> 1/1, 4 bit used
	{ 4,  1,  1, -1 }, // 01000110 -> 1/1, 4 bit used
	{ 4,  1,  1, -1 }, // 01000111 -> 1/1, 4 bit used
	{ 4,  1,  1, -1 }, // 01001000 -> 1/1, 4 bit used
	{ 4,  1,  1, -1 }, // 01001001 -> 1/1, 4 bit used
	{ 4,  1,  1, -1 }, // 01001010 -> 1/1, 4 bit used
	{ 4,  1,  1, -1 }, // 01001011 -> 1/1, 4 bit used
	{ 4,  1,  1, -1 }, // 01001100 -> 1/1, 4 bit used
	{ 4,  1,  1, -1 }, // 01001101 -> 1/1, 4 bit used
	{ 4,  1,  1, -1 }, // 01001110 -> 1/1, 4 bit used
	{ 4,  1,  1, -1 }, // 01001111 -> 1/1, 4 bit used
	{ 4,  0,  1, -1 }, // 01010000 -> 0/1, 4 bit used
	{ 4,  0,  1, -1 }, // 01010001 -> 0/1, 4 bit used
	{ 4,  0,  1, -1 }, // 01010010 -> 0/1, 4 bit used
	{ 4,  0,  1, -1 }, // 01010011 -> 0/1, 4 bit used
	{ 4,  0,  1, -1 }, // 01010100 -> 0/1, 4 bit used
	{ 4,  0,  1, -1 }, // 01010101 -> 0/1, 4 bit used
	{ 4,  0,  1, -1 }, // 01010110 -> 0/1, 4 bit used
	{ 4,  0,  1, -1 }, // 01010111 -> 0/1, 4 bit used
	{ 4,  0,  1, -1 }, // 01011000 -> 0/1, 4 bit used
	{ 4,  0,  1, -1 }, // 01011001 -> 0/1, 4 bit used
	{ 4,  0,  1, -1 }, // 01011010 -> 0/1, 4 bit used
	{ 4,  0,  1, -1 }, // 01011011 -> 0/1, 4 bit used
	{ 4,  0,  1, -1 }, // 01011100 -> 0/1, 4 bit used
	{ 4,  0,  1, -1 }, // 01011101 -> 0/1, 4 bit used
	{ 4,  0,  1, -1 }, // 01011110 -> 0/1, 4 bit used
	{ 4,  0,  1, -1 }, // 01011111 -> 0/1, 4 bit used
	{ 3,  1,  0, -1 }, // 01100000 -> 1/0, 3 bit used
	{ 3,  1,  0, -1 }, // 01100001 -> 1/0, 3 bit used
	{ 3,  1,  0, -1 }, // 01100010 -> 1/0, 3 bit used
	{ 3,  1,  0, -1 }, // 01100011 -> 1/0, 3 bit used
	{ 3,  1,  0, -1 }, // 01100100 -> 1/0, 3 bit used
	{ 3,  1,  0, -1 }, // 01100101 -> 1/0, 3 bit used
	{ 3,  1,  0, -1 }, // 01100110 -> 1/0, 3 bit used
	{ 3,  1,  0, -1 }, // 01100111 -> 1/0, 3 bit used
	{ 3,  1,  0, -1 }, // 01101000 -> 1/0, 3 bit used
	{ 3,  1,  0, -1 }, // 01101001 -> 1/0, 3 bit used
	{ 3,  1,  0, -1 }, // 01101010 -> 1/0, 3 bit used
	{ 3,  1,  0, -1 }, // 01101011 -> 1/0, 3 bit used
	{ 3,  1,  0, -1 }, // 01101100 -> 1/0, 3 bit used
	{ 3,  1,  0, -1 }, // 01101101 -> 1/0, 3 bit used
	{ 3,  1,  0, -1 }, // 01101110 -> 1/0, 3 bit used
	{ 3,  1,  0, -1 }, // 01101111 -> 1/0, 3 bit used
	{ 3,  1,  0, -1 }, // 01110000 -> 1/0, 3 bit used
	{ 3,  1,  0, -1 }, // 01110001 -> 1/0, 3 bit used
	{ 3,  1,  0, -1 }, // 01110010 -> 1/0, 3 bit used
	{ 3,  1,  0, -1 }, // 01110011 -> 1/0, 3 bit used
	{ 3,  1,  0, -1 }, // 01110100 -> 1/0, 3 bit used
	{ 3,  1,  0, -1 }, // 01110101 -> 1/0, 3 bit used
	{ 3,  1,  0, -1 }, // 01110110 -> 1/0, 3 bit used
	{ 3,  1,  0, -1 }, // 01110111 -> 1/0, 3 bit used
	{ 3,  1,  0, -1 }, // 01111000 -> 1/0, 3 bit used
	{ 3,  1,  0, -1 }, // 01111001 -> 1/0, 3 bit used
	{ 3,  1,  0, -1 }, // 01111010 -> 1/0, 3 bit used
	{ 3,  1,  0, -1 }, // 01111011 -> 1/0, 3 bit used
	{ 3,  1,  0, -1 }, // 01111100 -> 1/0, 3 bit used
	{ 3,  1,  0, -1 }, // 01111101 -> 1/0, 3 bit used
	{ 3,  1,  0, -1 }, // 01111110 -> 1/0, 3 bit used
	{ 3,  1,  0, -1 }, // 01111111 -> 1/0, 3 bit used
	{ 1,  0,  0, -1 }, // 10000000 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 10000001 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 10000010 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 10000011 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 10000100 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 10000101 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 10000110 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 10000111 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 10001000 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 10001001 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 10001010 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 10001011 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 10001100 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 10001101 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 10001110 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 10001111 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 10010000 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 10010001 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 10010010 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 10010011 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 10010100 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 10010101 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 10010110 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 10010111 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 10011000 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 10011001 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 10011010 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 10011011 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 10011100 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 10011101 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 10011110 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 10011111 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 10100000 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 10100001 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 10100010 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 10100011 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 10100100 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 10100101 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 10100110 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 10100111 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 10101000 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 10101001 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 10101010 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 10101011 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 10101100 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 10101101 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 10101110 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 10101111 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 10110000 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 10110001 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 10110010 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 10110011 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 10110100 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 10110101 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 10110110 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 10110111 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 10111000 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 10111001 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 10111010 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 10111011 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 10111100 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 10111101 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 10111110 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 10111111 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 11000000 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 11000001 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 11000010 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 11000011 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 11000100 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 11000101 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 11000110 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 11000111 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 11001000 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 11001001 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 11001010 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 11001011 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 11001100 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 11001101 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 11001110 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 11001111 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 11010000 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 11010001 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 11010010 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 11010011 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 11010100 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 11010101 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 11010110 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 11010111 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 11011000 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 11011001 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 11011010 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 11011011 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 11011100 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 11011101 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 11011110 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 11011111 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 11100000 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 11100001 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 11100010 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 11100011 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 11100100 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 11100101 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 11100110 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 11100111 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 11101000 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 11101001 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 11101010 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 11101011 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 11101100 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 11101101 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 11101110 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 11101111 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 11110000 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 11110001 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 11110010 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 11110011 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 11110100 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 11110101 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 11110110 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 11110111 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 11111000 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 11111001 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 11111010 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 11111011 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 11111100 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 11111101 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }, // 11111110 -> 0/0, 1 bit used
	{ 1,  0,  0, -1 }  // 11111111 -> 0/0, 1 bit used
};
// extension table 1, prefix 00000000
static huffman_conv htab16_dec_ext1[ 8 ] = {
	{ 3, 14, 15, -1 }, // 000 -> 14/15, 3 bit used
	{ 3, 15, 14, -1 }, // 001 -> 15/14, 3 bit used
	{ 3, 13, 15, -1 }, // 010 -> 13/15, 3 bit used
	{ 3, 15, 13, -1 }, // 011 -> 15/13, 3 bit used
	{ 3, 12, 15, -1 }, // 100 -> 12/15, 3 bit used
	{ 3, 15, 12, -1 }, // 101 -> 15/12, 3 bit used
	{ 3, 11, 15, -1 }, // 110 -> 11/15, 3 bit used
	{ 3, 15, 11, -1 }  // 111 -> 15/11, 3 bit used
};
// extension table 2, prefix 00000001
static huffman_conv htab16_dec_ext2[ 8 ] = {
	{ 2, 10, 15, -1 }, // 000 -> 10/15, 2 bit used
	{ 2, 10, 15, -1 }, // 001 -> 10/15, 2 bit used
	{ 3, 15, 10, -1 }, // 010 -> 15/10, 3 bit used
	{ 3,  9, 15, -1 }, // 011 -> 9/15, 3 bit used
	{ 3, 15,  9, -1 }, // 100 -> 15/9, 3 bit used
	{ 3, 15,  8, -1 }, // 101 -> 15/8, 3 bit used
	{ 2,  8, 15, -1 }, // 110 -> 8/15, 2 bit used
	{ 2,  8, 15, -1 }  // 111 -> 8/15, 2 bit used
};
// extension table 3, prefix 00000010
static huffman_conv htab16_dec_ext3[ 4 ] = {
	{ 2,  7, 15, -1 }, // 00 -> 7/15, 2 bit used
	{ 2, 15,  7, -1 }, // 01 -> 15/7, 2 bit used
	{ 2,  6, 15, -1 }, // 10 -> 6/15, 2 bit used
	{ 2, 15,  6, -1 }  // 11 -> 15/6, 2 bit used
};
// extension table 4, prefix 00000100
static huffman_conv htab16_dec_ext4[ 4 ] = {
	{ 2,  5, 15, -1 }, // 00 -> 5/15, 2 bit used
	{ 2, 15,  5, -1 }, // 01 -> 15/5, 2 bit used
	{ 1,  4, 15, -1 }, // 10 -> 4/15, 1 bit used
	{ 1,  4, 15, -1 }  // 11 -> 4/15, 1 bit used
};
// extension table 5, prefix 00000101
static huffman_conv htab16_dec_ext5[ 2 ] = {
	{ 1, 15,  4, -1 }, // 0 -> 15/4, 1 bit used
	{ 1, 15,  3, -1 }  // 1 -> 15/3, 1 bit used
};
// extension table 6, prefix 00000110
static huffman_conv htab16_dec_ext6[ 256 ] = {
	{ 1, 15,  0, -1 }, // 00000000 -> 15/0, 1 bit used
	{ 1, 15,  0, -1 }, // 00000001 -> 15/0, 1 bit used
	{ 1, 15,  0, -1 }, // 00000010 -> 15/0, 1 bit used
	{ 1, 15,  0, -1 }, // 00000011 -> 15/0, 1 bit used
	{ 1, 15,  0, -1 }, // 00000100 -> 15/0, 1 bit used
	{ 1, 15,  0, -1 }, // 00000101 -> 15/0, 1 bit used
	{ 1, 15,  0, -1 }, // 00000110 -> 15/0, 1 bit used
	{ 1, 15,  0, -1 }, // 00000111 -> 15/0, 1 bit used
	{ 1, 15,  0, -1 }, // 00001000 -> 15/0, 1 bit used
	{ 1, 15,  0, -1 }, // 00001001 -> 15/0, 1 bit used
	{ 1, 15,  0, -1 }, // 00001010 -> 15/0, 1 bit used
	{ 1, 15,  0, -1 }, // 00001011 -> 15/0, 1 bit used
	{ 1, 15,  0, -1 }, // 00001100 -> 15/0, 1 bit used
	{ 1, 15,  0, -1 }, // 00001101 -> 15/0, 1 bit used
	{ 1, 15,  0, -1 }, // 00001110 -> 15/0, 1 bit used
	{ 1, 15,  0, -1 }, // 00001111 -> 15/0, 1 bit used
	{ 1, 15,  0, -1 }, // 00010000 -> 15/0, 1 bit used
	{ 1, 15,  0, -1 }, // 00010001 -> 15/0, 1 bit used
	{ 1, 15,  0, -1 }, // 00010010 -> 15/0, 1 bit used
	{ 1, 15,  0, -1 }, // 00010011 -> 15/0, 1 bit used
	{ 1, 15,  0, -1 }, // 00010100 -> 15/0, 1 bit used
	{ 1, 15,  0, -1 }, // 00010101 -> 15/0, 1 bit used
	{ 1, 15,  0, -1 }, // 00010110 -> 15/0, 1 bit used
	{ 1, 15,  0, -1 }, // 00010111 -> 15/0, 1 bit used
	{ 1, 15,  0, -1 }, // 00011000 -> 15/0, 1 bit used
	{ 1, 15,  0, -1 }, // 00011001 -> 15/0, 1 bit used
	{ 1, 15,  0, -1 }, // 00011010 -> 15/0, 1 bit used
	{ 1, 15,  0, -1 }, // 00011011 -> 15/0, 1 bit used
	{ 1, 15,  0, -1 }, // 00011100 -> 15/0, 1 bit used
	{ 1, 15,  0, -1 }, // 00011101 -> 15/0, 1 bit used
	{ 1, 15,  0, -1 }, // 00011110 -> 15/0, 1 bit used
	{ 1, 15,  0, -1 }, // 00011111 -> 15/0, 1 bit used
	{ 1, 15,  0, -1 }, // 00100000 -> 15/0, 1 bit used
	{ 1, 15,  0, -1 }, // 00100001 -> 15/0, 1 bit used
	{ 1, 15,  0, -1 }, // 00100010 -> 15/0, 1 bit used
	{ 1, 15,  0, -1 }, // 00100011 -> 15/0, 1 bit used
	{ 1, 15,  0, -1 }, // 00100100 -> 15/0, 1 bit used
	{ 1, 15,  0, -1 }, // 00100101 -> 15/0, 1 bit used
	{ 1, 15,  0, -1 }, // 00100110 -> 15/0, 1 bit used
	{ 1, 15,  0, -1 }, // 00100111 -> 15/0, 1 bit used
	{ 1, 15,  0, -1 }, // 00101000 -> 15/0, 1 bit used
	{ 1, 15,  0, -1 }, // 00101001 -> 15/0, 1 bit used
	{ 1, 15,  0, -1 }, // 00101010 -> 15/0, 1 bit used
	{ 1, 15,  0, -1 }, // 00101011 -> 15/0, 1 bit used
	{ 1, 15,  0, -1 }, // 00101100 -> 15/0, 1 bit used
	{ 1, 15,  0, -1 }, // 00101101 -> 15/0, 1 bit used
	{ 1, 15,  0, -1 }, // 00101110 -> 15/0, 1 bit used
	{ 1, 15,  0, -1 }, // 00101111 -> 15/0, 1 bit used
	{ 1, 15,  0, -1 }, // 00110000 -> 15/0, 1 bit used
	{ 1, 15,  0, -1 }, // 00110001 -> 15/0, 1 bit used
	{ 1, 15,  0, -1 }, // 00110010 -> 15/0, 1 bit used
	{ 1, 15,  0, -1 }, // 00110011 -> 15/0, 1 bit used
	{ 1, 15,  0, -1 }, // 00110100 -> 15/0, 1 bit used
	{ 1, 15,  0, -1 }, // 00110101 -> 15/0, 1 bit used
	{ 1, 15,  0, -1 }, // 00110110 -> 15/0, 1 bit used
	{ 1, 15,  0, -1 }, // 00110111 -> 15/0, 1 bit used
	{ 1, 15,  0, -1 }, // 00111000 -> 15/0, 1 bit used
	{ 1, 15,  0, -1 }, // 00111001 -> 15/0, 1 bit used
	{ 1, 15,  0, -1 }, // 00111010 -> 15/0, 1 bit used
	{ 1, 15,  0, -1 }, // 00111011 -> 15/0, 1 bit used
	{ 1, 15,  0, -1 }, // 00111100 -> 15/0, 1 bit used
	{ 1, 15,  0, -1 }, // 00111101 -> 15/0, 1 bit used
	{ 1, 15,  0, -1 }, // 00111110 -> 15/0, 1 bit used
	{ 1, 15,  0, -1 }, // 00111111 -> 15/0, 1 bit used
	{ 1, 15,  0, -1 }, // 01000000 -> 15/0, 1 bit used
	{ 1, 15,  0, -1 }, // 01000001 -> 15/0, 1 bit used
	{ 1, 15,  0, -1 }, // 01000010 -> 15/0, 1 bit used
	{ 1, 15,  0, -1 }, // 01000011 -> 15/0, 1 bit used
	{ 1, 15,  0, -1 }, // 01000100 -> 15/0, 1 bit used
	{ 1, 15,  0, -1 }, // 01000101 -> 15/0, 1 bit used
	{ 1, 15,  0, -1 }, // 01000110 -> 15/0, 1 bit used
	{ 1, 15,  0, -1 }, // 01000111 -> 15/0, 1 bit used
	{ 1, 15,  0, -1 }, // 01001000 -> 15/0, 1 bit used
	{ 1, 15,  0, -1 }, // 01001001 -> 15/0, 1 bit used
	{ 1, 15,  0, -1 }, // 01001010 -> 15/0, 1 bit used
	{ 1, 15,  0, -1 }, // 01001011 -> 15/0, 1 bit used
	{ 1, 15,  0, -1 }, // 01001100 -> 15/0, 1 bit used
	{ 1, 15,  0, -1 }, // 01001101 -> 15/0, 1 bit used
	{ 1, 15,  0, -1 }, // 01001110 -> 15/0, 1 bit used
	{ 1, 15,  0, -1 }, // 01001111 -> 15/0, 1 bit used
	{ 1, 15,  0, -1 }, // 01010000 -> 15/0, 1 bit used
	{ 1, 15,  0, -1 }, // 01010001 -> 15/0, 1 bit used
	{ 1, 15,  0, -1 }, // 01010010 -> 15/0, 1 bit used
	{ 1, 15,  0, -1 }, // 01010011 -> 15/0, 1 bit used
	{ 1, 15,  0, -1 }, // 01010100 -> 15/0, 1 bit used
	{ 1, 15,  0, -1 }, // 01010101 -> 15/0, 1 bit used
	{ 1, 15,  0, -1 }, // 01010110 -> 15/0, 1 bit used
	{ 1, 15,  0, -1 }, // 01010111 -> 15/0, 1 bit used
	{ 1, 15,  0, -1 }, // 01011000 -> 15/0, 1 bit used
	{ 1, 15,  0, -1 }, // 01011001 -> 15/0, 1 bit used
	{ 1, 15,  0, -1 }, // 01011010 -> 15/0, 1 bit used
	{ 1, 15,  0, -1 }, // 01011011 -> 15/0, 1 bit used
	{ 1, 15,  0, -1 }, // 01011100 -> 15/0, 1 bit used
	{ 1, 15,  0, -1 }, // 01011101 -> 15/0, 1 bit used
	{ 1, 15,  0, -1 }, // 01011110 -> 15/0, 1 bit used
	{ 1, 15,  0, -1 }, // 01011111 -> 15/0, 1 bit used
	{ 1, 15,  0, -1 }, // 01100000 -> 15/0, 1 bit used
	{ 1, 15,  0, -1 }, // 01100001 -> 15/0, 1 bit used
	{ 1, 15,  0, -1 }, // 01100010 -> 15/0, 1 bit used
	{ 1, 15,  0, -1 }, // 01100011 -> 15/0, 1 bit used
	{ 1, 15,  0, -1 }, // 01100100 -> 15/0, 1 bit used
	{ 1, 15,  0, -1 }, // 01100101 -> 15/0, 1 bit used
	{ 1, 15,  0, -1 }, // 01100110 -> 15/0, 1 bit used
	{ 1, 15,  0, -1 }, // 01100111 -> 15/0, 1 bit used
	{ 1, 15,  0, -1 }, // 01101000 -> 15/0, 1 bit used
	{ 1, 15,  0, -1 }, // 01101001 -> 15/0, 1 bit used
	{ 1, 15,  0, -1 }, // 01101010 -> 15/0, 1 bit used
	{ 1, 15,  0, -1 }, // 01101011 -> 15/0, 1 bit used
	{ 1, 15,  0, -1 }, // 01101100 -> 15/0, 1 bit used
	{ 1, 15,  0, -1 }, // 01101101 -> 15/0, 1 bit used
	{ 1, 15,  0, -1 }, // 01101110 -> 15/0, 1 bit used
	{ 1, 15,  0, -1 }, // 01101111 -> 15/0, 1 bit used
	{ 1, 15,  0, -1 }, // 01110000 -> 15/0, 1 bit used
	{ 1, 15,  0, -1 }, // 01110001 -> 15/0, 1 bit used
	{ 1, 15,  0, -1 }, // 01110010 -> 15/0, 1 bit used
	{ 1, 15,  0, -1 }, // 01110011 -> 15/0, 1 bit used
	{ 1, 15,  0, -1 }, // 01110100 -> 15/0, 1 bit used
	{ 1, 15,  0, -1 }, // 01110101 -> 15/0, 1 bit used
	{ 1, 15,  0, -1 }, // 01110110 -> 15/0, 1 bit used
	{ 1, 15,  0, -1 }, // 01110111 -> 15/0, 1 bit used
	{ 1, 15,  0, -1 }, // 01111000 -> 15/0, 1 bit used
	{ 1, 15,  0, -1 }, // 01111001 -> 15/0, 1 bit used
	{ 1, 15,  0, -1 }, // 01111010 -> 15/0, 1 bit used
	{ 1, 15,  0, -1 }, // 01111011 -> 15/0, 1 bit used
	{ 1, 15,  0, -1 }, // 01111100 -> 15/0, 1 bit used
	{ 1, 15,  0, -1 }, // 01111101 -> 15/0, 1 bit used
	{ 1, 15,  0, -1 }, // 01111110 -> 15/0, 1 bit used
	{ 1, 15,  0, -1 }, // 01111111 -> 15/0, 1 bit used
	{ 2,  3, 15, -1 }, // 10000000 -> 3/15, 2 bit used
	{ 2,  3, 15, -1 }, // 10000001 -> 3/15, 2 bit used
	{ 2,  3, 15, -1 }, // 10000010 -> 3/15, 2 bit used
	{ 2,  3, 15, -1 }, // 10000011 -> 3/15, 2 bit used
	{ 2,  3, 15, -1 }, // 10000100 -> 3/15, 2 bit used
	{ 2,  3, 15, -1 }, // 10000101 -> 3/15, 2 bit used
	{ 2,  3, 15, -1 }, // 10000110 -> 3/15, 2 bit used
	{ 2,  3, 15, -1 }, // 10000111 -> 3/15, 2 bit used
	{ 2,  3, 15, -1 }, // 10001000 -> 3/15, 2 bit used
	{ 2,  3, 15, -1 }, // 10001001 -> 3/15, 2 bit used
	{ 2,  3, 15, -1 }, // 10001010 -> 3/15, 2 bit used
	{ 2,  3, 15, -1 }, // 10001011 -> 3/15, 2 bit used
	{ 2,  3, 15, -1 }, // 10001100 -> 3/15, 2 bit used
	{ 2,  3, 15, -1 }, // 10001101 -> 3/15, 2 bit used
	{ 2,  3, 15, -1 }, // 10001110 -> 3/15, 2 bit used
	{ 2,  3, 15, -1 }, // 10001111 -> 3/15, 2 bit used
	{ 2,  3, 15, -1 }, // 10010000 -> 3/15, 2 bit used
	{ 2,  3, 15, -1 }, // 10010001 -> 3/15, 2 bit used
	{ 2,  3, 15, -1 }, // 10010010 -> 3/15, 2 bit used
	{ 2,  3, 15, -1 }, // 10010011 -> 3/15, 2 bit used
	{ 2,  3, 15, -1 }, // 10010100 -> 3/15, 2 bit used
	{ 2,  3, 15, -1 }, // 10010101 -> 3/15, 2 bit used
	{ 2,  3, 15, -1 }, // 10010110 -> 3/15, 2 bit used
	{ 2,  3, 15, -1 }, // 10010111 -> 3/15, 2 bit used
	{ 2,  3, 15, -1 }, // 10011000 -> 3/15, 2 bit used
	{ 2,  3, 15, -1 }, // 10011001 -> 3/15, 2 bit used
	{ 2,  3, 15, -1 }, // 10011010 -> 3/15, 2 bit used
	{ 2,  3, 15, -1 }, // 10011011 -> 3/15, 2 bit used
	{ 2,  3, 15, -1 }, // 10011100 -> 3/15, 2 bit used
	{ 2,  3, 15, -1 }, // 10011101 -> 3/15, 2 bit used
	{ 2,  3, 15, -1 }, // 10011110 -> 3/15, 2 bit used
	{ 2,  3, 15, -1 }, // 10011111 -> 3/15, 2 bit used
	{ 2,  3, 15, -1 }, // 10100000 -> 3/15, 2 bit used
	{ 2,  3, 15, -1 }, // 10100001 -> 3/15, 2 bit used
	{ 2,  3, 15, -1 }, // 10100010 -> 3/15, 2 bit used
	{ 2,  3, 15, -1 }, // 10100011 -> 3/15, 2 bit used
	{ 2,  3, 15, -1 }, // 10100100 -> 3/15, 2 bit used
	{ 2,  3, 15, -1 }, // 10100101 -> 3/15, 2 bit used
	{ 2,  3, 15, -1 }, // 10100110 -> 3/15, 2 bit used
	{ 2,  3, 15, -1 }, // 10100111 -> 3/15, 2 bit used
	{ 2,  3, 15, -1 }, // 10101000 -> 3/15, 2 bit used
	{ 2,  3, 15, -1 }, // 10101001 -> 3/15, 2 bit used
	{ 2,  3, 15, -1 }, // 10101010 -> 3/15, 2 bit used
	{ 2,  3, 15, -1 }, // 10101011 -> 3/15, 2 bit used
	{ 2,  3, 15, -1 }, // 10101100 -> 3/15, 2 bit used
	{ 2,  3, 15, -1 }, // 10101101 -> 3/15, 2 bit used
	{ 2,  3, 15, -1 }, // 10101110 -> 3/15, 2 bit used
	{ 2,  3, 15, -1 }, // 10101111 -> 3/15, 2 bit used
	{ 2,  3, 15, -1 }, // 10110000 -> 3/15, 2 bit used
	{ 2,  3, 15, -1 }, // 10110001 -> 3/15, 2 bit used
	{ 2,  3, 15, -1 }, // 10110010 -> 3/15, 2 bit used
	{ 2,  3, 15, -1 }, // 10110011 -> 3/15, 2 bit used
	{ 2,  3, 15, -1 }, // 10110100 -> 3/15, 2 bit used
	{ 2,  3, 15, -1 }, // 10110101 -> 3/15, 2 bit used
	{ 2,  3, 15, -1 }, // 10110110 -> 3/15, 2 bit used
	{ 2,  3, 15, -1 }, // 10110111 -> 3/15, 2 bit used
	{ 2,  3, 15, -1 }, // 10111000 -> 3/15, 2 bit used
	{ 2,  3, 15, -1 }, // 10111001 -> 3/15, 2 bit used
	{ 2,  3, 15, -1 }, // 10111010 -> 3/15, 2 bit used
	{ 2,  3, 15, -1 }, // 10111011 -> 3/15, 2 bit used
	{ 2,  3, 15, -1 }, // 10111100 -> 3/15, 2 bit used
	{ 2,  3, 15, -1 }, // 10111101 -> 3/15, 2 bit used
	{ 2,  3, 15, -1 }, // 10111110 -> 3/15, 2 bit used
	{ 2,  3, 15, -1 }, // 10111111 -> 3/15, 2 bit used
	{ 8, 12, 14, -1 }, // 11000000 -> 12/14, 8 bit used
	{ 8, -1, -1, 32 }, // 11000001 -> extension table #32
	{ 7, 13, 14, -1 }, // 11000010 -> 13/14, 7 bit used
	{ 7, 13, 14, -1 }, // 11000011 -> 13/14, 7 bit used
	{ 7, 14,  9, -1 }, // 11000100 -> 14/9, 7 bit used
	{ 7, 14,  9, -1 }, // 11000101 -> 14/9, 7 bit used
	{ 8, 14, 10, -1 }, // 11000110 -> 14/10, 8 bit used
	{ 8, 13,  9, -1 }, // 11000111 -> 13/9, 8 bit used
	{ 6, 14, 14, -1 }, // 11001000 -> 14/14, 6 bit used
	{ 6, 14, 14, -1 }, // 11001001 -> 14/14, 6 bit used
	{ 6, 14, 14, -1 }, // 11001010 -> 14/14, 6 bit used
	{ 6, 14, 14, -1 }, // 11001011 -> 14/14, 6 bit used
	{ 7, 14, 13, -1 }, // 11001100 -> 14/13, 7 bit used
	{ 7, 14, 13, -1 }, // 11001101 -> 14/13, 7 bit used
	{ 7, 14, 11, -1 }, // 11001110 -> 14/11, 7 bit used
	{ 7, 14, 11, -1 }, // 11001111 -> 14/11, 7 bit used
	{ 6, 11, 14, -1 }, // 11010000 -> 11/14, 6 bit used
	{ 6, 11, 14, -1 }, // 11010001 -> 11/14, 6 bit used
	{ 6, 11, 14, -1 }, // 11010010 -> 11/14, 6 bit used
	{ 6, 11, 14, -1 }, // 11010011 -> 11/14, 6 bit used
	{ 6, 12, 13, -1 }, // 11010100 -> 12/13, 6 bit used
	{ 6, 12, 13, -1 }, // 11010101 -> 12/13, 6 bit used
	{ 6, 12, 13, -1 }, // 11010110 -> 12/13, 6 bit used
	{ 6, 12, 13, -1 }, // 11010111 -> 12/13, 6 bit used
	{ 7, 13, 12, -1 }, // 11011000 -> 13/12, 7 bit used
	{ 7, 13, 12, -1 }, // 11011001 -> 13/12, 7 bit used
	{ 7, 13, 11, -1 }, // 11011010 -> 13/11, 7 bit used
	{ 7, 13, 11, -1 }, // 11011011 -> 13/11, 7 bit used
	{ 6, 10, 14, -1 }, // 11011100 -> 10/14, 6 bit used
	{ 6, 10, 14, -1 }, // 11011101 -> 10/14, 6 bit used
	{ 6, 10, 14, -1 }, // 11011110 -> 10/14, 6 bit used
	{ 6, 10, 14, -1 }, // 11011111 -> 10/14, 6 bit used
	{ 6, 12, 12, -1 }, // 11100000 -> 12/12, 6 bit used
	{ 6, 12, 12, -1 }, // 11100001 -> 12/12, 6 bit used
	{ 6, 12, 12, -1 }, // 11100010 -> 12/12, 6 bit used
	{ 6, 12, 12, -1 }, // 11100011 -> 12/12, 6 bit used
	{ 7, 10, 13, -1 }, // 11100100 -> 10/13, 7 bit used
	{ 7, 10, 13, -1 }, // 11100101 -> 10/13, 7 bit used
	{ 7, 13, 10, -1 }, // 11100110 -> 13/10, 7 bit used
	{ 7, 13, 10, -1 }, // 11100111 -> 13/10, 7 bit used
	{ 7,  7, 14, -1 }, // 11101000 -> 7/14, 7 bit used
	{ 7,  7, 14, -1 }, // 11101001 -> 7/14, 7 bit used
	{ 7, 10, 12, -1 }, // 11101010 -> 10/12, 7 bit used
	{ 7, 10, 12, -1 }, // 11101011 -> 10/12, 7 bit used
	{ 6, 12, 10, -1 }, // 11101100 -> 12/10, 6 bit used
	{ 6, 12, 10, -1 }, // 11101101 -> 12/10, 6 bit used
	{ 6, 12, 10, -1 }, // 11101110 -> 12/10, 6 bit used
	{ 6, 12, 10, -1 }, // 11101111 -> 12/10, 6 bit used
	{ 7, 12,  9, -1 }, // 11110000 -> 12/9, 7 bit used
	{ 7, 12,  9, -1 }, // 11110001 -> 12/9, 7 bit used
	{ 7,  7, 13, -1 }, // 11110010 -> 7/13, 7 bit used
	{ 7,  7, 13, -1 }, // 11110011 -> 7/13, 7 bit used
	{ 6,  5, 14, -1 }, // 11110100 -> 5/14, 6 bit used
	{ 6,  5, 14, -1 }, // 11110101 -> 5/14, 6 bit used
	{ 6,  5, 14, -1 }, // 11110110 -> 5/14, 6 bit used
	{ 6,  5, 14, -1 }, // 11110111 -> 5/14, 6 bit used
	{ 5, 11, 13, -1 }, // 11111000 -> 11/13, 5 bit used
	{ 5, 11, 13, -1 }, // 11111001 -> 11/13, 5 bit used
	{ 5, 11, 13, -1 }, // 11111010 -> 11/13, 5 bit used
	{ 5, 11, 13, -1 }, // 11111011 -> 11/13, 5 bit used
	{ 5, 11, 13, -1 }, // 11111100 -> 11/13, 5 bit used
	{ 5, 11, 13, -1 }, // 11111101 -> 11/13, 5 bit used
	{ 5, 11, 13, -1 }, // 11111110 -> 11/13, 5 bit used
	{ 5, 11, 13, -1 }  // 11111111 -> 11/13, 5 bit used
};
// extension table 7, prefix 00001000
static huffman_conv htab16_dec_ext7[ 2 ] = {
	{ 1,  2, 15, -1 }, // 0 -> 2/15, 1 bit used
	{ 1,  0, 15, -1 }  // 1 -> 0/15, 1 bit used
};
// extension table 8, prefix 00001011
static huffman_conv htab16_dec_ext8[ 64 ] = {
	{ 5,  9, 14, -1 }, // 000000 -> 9/14, 5 bit used
	{ 5,  9, 14, -1 }, // 000001 -> 9/14, 5 bit used
	{ 6, 11, 12, -1 }, // 000010 -> 11/12, 6 bit used
	{ 6, 12, 11, -1 }, // 000011 -> 12/11, 6 bit used
	{ 6,  8, 14, -1 }, // 000100 -> 8/14, 6 bit used
	{ 6, 14,  8, -1 }, // 000101 -> 14/8, 6 bit used
	{ 6,  9, 13, -1 }, // 000110 -> 9/13, 6 bit used
	{ 6, 14,  7, -1 }, // 000111 -> 14/7, 6 bit used
	{ 6, 11, 11, -1 }, // 001000 -> 11/11, 6 bit used
	{ 6,  8, 13, -1 }, // 001001 -> 8/13, 6 bit used
	{ 6, 13,  8, -1 }, // 001010 -> 13/8, 6 bit used
	{ 6,  6, 14, -1 }, // 001011 -> 6/14, 6 bit used
	{ 5, 14,  6, -1 }, // 001100 -> 14/6, 5 bit used
	{ 5, 14,  6, -1 }, // 001101 -> 14/6, 5 bit used
	{ 5,  9, 12, -1 }, // 001110 -> 9/12, 5 bit used
	{ 5,  9, 12, -1 }, // 001111 -> 9/12, 5 bit used
	{ 6, 10, 11, -1 }, // 010000 -> 10/11, 6 bit used
	{ 6, 11, 10, -1 }, // 010001 -> 11/10, 6 bit used
	{ 6, 14,  5, -1 }, // 010010 -> 14/5, 6 bit used
	{ 6, 13,  7, -1 }, // 010011 -> 13/7, 6 bit used
	{ 5,  4, 14, -1 }, // 010100 -> 4/14, 5 bit used
	{ 5,  4, 14, -1 }, // 010101 -> 4/14, 5 bit used
	{ 6, 14,  4, -1 }, // 010110 -> 14/4, 6 bit used
	{ 6,  8, 12, -1 }, // 010111 -> 8/12, 6 bit used
	{ 5, 12,  8, -1 }, // 011000 -> 12/8, 5 bit used
	{ 5, 12,  8, -1 }, // 011001 -> 12/8, 5 bit used
	{ 5,  3, 14, -1 }, // 011010 -> 3/14, 5 bit used
	{ 5,  3, 14, -1 }, // 011011 -> 3/14, 5 bit used
	{ 5,  6, 13, -1 }, // 011100 -> 6/13, 5 bit used
	{ 5,  6, 13, -1 }, // 011101 -> 6/13, 5 bit used
	{ 6, 13,  6, -1 }, // 011110 -> 13/6, 6 bit used
	{ 6,  9, 11, -1 }, // 011111 -> 9/11, 6 bit used
	{ 6, 11,  9, -1 }, // 100000 -> 11/9, 6 bit used
	{ 6, 10, 10, -1 }, // 100001 -> 10/10, 6 bit used
	{ 5, 14,  1, -1 }, // 100010 -> 14/1, 5 bit used
	{ 5, 14,  1, -1 }, // 100011 -> 14/1, 5 bit used
	{ 5, 13,  4, -1 }, // 100100 -> 13/4, 5 bit used
	{ 5, 13,  4, -1 }, // 100101 -> 13/4, 5 bit used
	{ 6, 11,  8, -1 }, // 100110 -> 11/8, 6 bit used
	{ 6, 10,  9, -1 }, // 100111 -> 10/9, 6 bit used
	{ 5,  7, 11, -1 }, // 101000 -> 7/11, 5 bit used
	{ 5,  7, 11, -1 }, // 101001 -> 7/11, 5 bit used
	{ 6, 11,  7, -1 }, // 101010 -> 11/7, 6 bit used
	{ 6, 13,  0, -1 }, // 101011 -> 13/0, 6 bit used
	{ 4, 14,  3, -1 }, // 101100 -> 14/3, 4 bit used
	{ 4, 14,  3, -1 }, // 101101 -> 14/3, 4 bit used
	{ 4, 14,  3, -1 }, // 101110 -> 14/3, 4 bit used
	{ 4, 14,  3, -1 }, // 101111 -> 14/3, 4 bit used
	{ 5,  0, 14, -1 }, // 110000 -> 0/14, 5 bit used
	{ 5,  0, 14, -1 }, // 110001 -> 0/14, 5 bit used
	{ 5, 14,  0, -1 }, // 110010 -> 14/0, 5 bit used
	{ 5, 14,  0, -1 }, // 110011 -> 14/0, 5 bit used
	{ 5,  5, 13, -1 }, // 110100 -> 5/13, 5 bit used
	{ 5,  5, 13, -1 }, // 110101 -> 5/13, 5 bit used
	{ 5, 13,  5, -1 }, // 110110 -> 13/5, 5 bit used
	{ 5, 13,  5, -1 }, // 110111 -> 13/5, 5 bit used
	{ 5,  7, 12, -1 }, // 111000 -> 7/12, 5 bit used
	{ 5,  7, 12, -1 }, // 111001 -> 7/12, 5 bit used
	{ 5, 12,  7, -1 }, // 111010 -> 12/7, 5 bit used
	{ 5, 12,  7, -1 }, // 111011 -> 12/7, 5 bit used
	{ 5,  4, 13, -1 }, // 111100 -> 4/13, 5 bit used
	{ 5,  4, 13, -1 }, // 111101 -> 4/13, 5 bit used
	{ 5,  8, 11, -1 }, // 111110 -> 8/11, 5 bit used
	{ 5,  8, 11, -1 }  // 111111 -> 8/11, 5 bit used
};
// extension table 9, prefix 00001100
static huffman_conv htab16_dec_ext9[ 32 ] = {
	{ 5,  9, 10, -1 }, // 00000 -> 9/10, 5 bit used
	{ 5,  6, 12, -1 }, // 00001 -> 6/12, 5 bit used
	{ 5, 12,  6, -1 }, // 00010 -> 12/6, 5 bit used
	{ 5,  3, 13, -1 }, // 00011 -> 3/13, 5 bit used
	{ 5,  5, 12, -1 }, // 00100 -> 5/12, 5 bit used
	{ 5, 12,  5, -1 }, // 00101 -> 12/5, 5 bit used
	{ 4,  0, 13, -1 }, // 00110 -> 0/13, 4 bit used
	{ 4,  0, 13, -1 }, // 00111 -> 0/13, 4 bit used
	{ 5,  8, 10, -1 }, // 01000 -> 8/10, 5 bit used
	{ 5, 10,  8, -1 }, // 01001 -> 10/8, 5 bit used
	{ 5,  9,  9, -1 }, // 01010 -> 9/9, 5 bit used
	{ 5,  4, 12, -1 }, // 01011 -> 4/12, 5 bit used
	{ 5, 11,  6, -1 }, // 01100 -> 11/6, 5 bit used
	{ 5,  7, 10, -1 }, // 01101 -> 7/10, 5 bit used
	{ 4,  3, 12, -1 }, // 01110 -> 3/12, 4 bit used
	{ 4,  3, 12, -1 }, // 01111 -> 3/12, 4 bit used
	{ 5,  5, 11, -1 }, // 10000 -> 5/11, 5 bit used
	{ 5,  8,  9, -1 }, // 10001 -> 8/9, 5 bit used
	{ 4,  1, 12, -1 }, // 10010 -> 1/12, 4 bit used
	{ 4,  1, 12, -1 }, // 10011 -> 1/12, 4 bit used
	{ 4, 12,  0, -1 }, // 10100 -> 12/0, 4 bit used
	{ 4, 12,  0, -1 }, // 10101 -> 12/0, 4 bit used
	{ 5,  9,  8, -1 }, // 10110 -> 9/8, 5 bit used
	{ 5,  7,  9, -1 }, // 10111 -> 7/9, 5 bit used
	{ 3, 14,  2, -1 }, // 11000 -> 14/2, 3 bit used
	{ 3, 14,  2, -1 }, // 11001 -> 14/2, 3 bit used
	{ 3, 14,  2, -1 }, // 11010 -> 14/2, 3 bit used
	{ 3, 14,  2, -1 }, // 11011 -> 14/2, 3 bit used
	{ 4,  2, 14, -1 }, // 11100 -> 2/14, 4 bit used
	{ 4,  2, 14, -1 }, // 11101 -> 2/14, 4 bit used
	{ 4,  1, 14, -1 }, // 11110 -> 1/14, 4 bit used
	{ 4,  1, 14, -1 }  // 11111 -> 1/14, 4 bit used
};
// extension table 10, prefix 00001101
static huffman_conv htab16_dec_ext10[ 32 ] = {
	{ 4, 13,  3, -1 }, // 00000 -> 13/3, 4 bit used
	{ 4, 13,  3, -1 }, // 00001 -> 13/3, 4 bit used
	{ 4,  2, 13, -1 }, // 00010 -> 2/13, 4 bit used
	{ 4,  2, 13, -1 }, // 00011 -> 2/13, 4 bit used
	{ 4, 13,  2, -1 }, // 00100 -> 13/2, 4 bit used
	{ 4, 13,  2, -1 }, // 00101 -> 13/2, 4 bit used
	{ 4, 13,  1, -1 }, // 00110 -> 13/1, 4 bit used
	{ 4, 13,  1, -1 }, // 00111 -> 13/1, 4 bit used
	{ 4,  3, 11, -1 }, // 01000 -> 3/11, 4 bit used
	{ 4,  3, 11, -1 }, // 01001 -> 3/11, 4 bit used
	{ 5,  9,  7, -1 }, // 01010 -> 9/7, 5 bit used
	{ 5,  8,  8, -1 }, // 01011 -> 8/8, 5 bit used
	{ 3,  1, 13, -1 }, // 01100 -> 1/13, 3 bit used
	{ 3,  1, 13, -1 }, // 01101 -> 1/13, 3 bit used
	{ 3,  1, 13, -1 }, // 01110 -> 1/13, 3 bit used
	{ 3,  1, 13, -1 }, // 01111 -> 1/13, 3 bit used
	{ 4, 12,  4, -1 }, // 10000 -> 12/4, 4 bit used
	{ 4, 12,  4, -1 }, // 10001 -> 12/4, 4 bit used
	{ 4,  6, 11, -1 }, // 10010 -> 6/11, 4 bit used
	{ 4,  6, 11, -1 }, // 10011 -> 6/11, 4 bit used
	{ 4, 12,  3, -1 }, // 10100 -> 12/3, 4 bit used
	{ 4, 12,  3, -1 }, // 10101 -> 12/3, 4 bit used
	{ 4, 10,  7, -1 }, // 10110 -> 10/7, 4 bit used
	{ 4, 10,  7, -1 }, // 10111 -> 10/7, 4 bit used
	{ 3,  2, 12, -1 }, // 11000 -> 2/12, 3 bit used
	{ 3,  2, 12, -1 }, // 11001 -> 2/12, 3 bit used
	{ 3,  2, 12, -1 }, // 11010 -> 2/12, 3 bit used
	{ 3,  2, 12, -1 }, // 11011 -> 2/12, 3 bit used
	{ 4, 12,  2, -1 }, // 11100 -> 12/2, 4 bit used
	{ 4, 12,  2, -1 }, // 11101 -> 12/2, 4 bit used
	{ 4, 11,  5, -1 }, // 11110 -> 11/5, 4 bit used
	{ 4, 11,  5, -1 }  // 11111 -> 11/5, 4 bit used
};
// extension table 11, prefix 00001110
static huffman_conv htab16_dec_ext11[ 16 ] = {
	{ 4, 12,  1, -1 }, // 0000 -> 12/1, 4 bit used
	{ 4,  0, 12, -1 }, // 0001 -> 0/12, 4 bit used
	{ 4,  4, 11, -1 }, // 0010 -> 4/11, 4 bit used
	{ 4, 11,  4, -1 }, // 0011 -> 11/4, 4 bit used
	{ 4,  6, 10, -1 }, // 0100 -> 6/10, 4 bit used
	{ 4, 10,  6, -1 }, // 0101 -> 10/6, 4 bit used
	{ 3, 11,  3, -1 }, // 0110 -> 11/3, 3 bit used
	{ 3, 11,  3, -1 }, // 0111 -> 11/3, 3 bit used
	{ 4,  5, 10, -1 }, // 1000 -> 5/10, 4 bit used
	{ 4, 10,  5, -1 }, // 1001 -> 10/5, 4 bit used
	{ 3,  2, 11, -1 }, // 1010 -> 2/11, 3 bit used
	{ 3,  2, 11, -1 }, // 1011 -> 2/11, 3 bit used
	{ 3, 11,  2, -1 }, // 1100 -> 11/2, 3 bit used
	{ 3, 11,  2, -1 }, // 1101 -> 11/2, 3 bit used
	{ 3,  1, 11, -1 }, // 1110 -> 1/11, 3 bit used
	{ 3,  1, 11, -1 }  // 1111 -> 1/11, 3 bit used
};
// extension table 12, prefix 00001111
static huffman_conv htab16_dec_ext12[ 16 ] = {
	{ 3, 11,  1, -1 }, // 0000 -> 11/1, 3 bit used
	{ 3, 11,  1, -1 }, // 0001 -> 11/1, 3 bit used
	{ 4,  0, 11, -1 }, // 0010 -> 0/11, 4 bit used
	{ 4, 11,  0, -1 }, // 0011 -> 11/0, 4 bit used
	{ 4,  6,  9, -1 }, // 0100 -> 6/9, 4 bit used
	{ 4,  9,  6, -1 }, // 0101 -> 9/6, 4 bit used
	{ 4,  4, 10, -1 }, // 0110 -> 4/10, 4 bit used
	{ 4, 10,  4, -1 }, // 0111 -> 10/4, 4 bit used
	{ 4,  7,  8, -1 }, // 1000 -> 7/8, 4 bit used
	{ 4,  8,  7, -1 }, // 1001 -> 8/7, 4 bit used
	{ 3, 10,  3, -1 }, // 1010 -> 10/3, 3 bit used
	{ 3, 10,  3, -1 }, // 1011 -> 10/3, 3 bit used
	{ 4,  3, 10, -1 }, // 1100 -> 3/10, 4 bit used
	{ 4,  5,  9, -1 }, // 1101 -> 5/9, 4 bit used
	{ 3,  2, 10, -1 }, // 1110 -> 2/10, 3 bit used
	{ 3,  2, 10, -1 }  // 1111 -> 2/10, 3 bit used
};
// extension table 13, prefix 00010000
static huffman_conv htab16_dec_ext13[ 16 ] = {
	{ 4,  9,  5, -1 }, // 0000 -> 9/5, 4 bit used
	{ 4,  6,  8, -1 }, // 0001 -> 6/8, 4 bit used
	{ 3, 10,  1, -1 }, // 0010 -> 10/1, 3 bit used
	{ 3, 10,  1, -1 }, // 0011 -> 10/1, 3 bit used
	{ 4,  8,  6, -1 }, // 0100 -> 8/6, 4 bit used
	{ 4,  7,  7, -1 }, // 0101 -> 7/7, 4 bit used
	{ 3,  9,  4, -1 }, // 0110 -> 9/4, 3 bit used
	{ 3,  9,  4, -1 }, // 0111 -> 9/4, 3 bit used
	{ 4,  4,  9, -1 }, // 1000 -> 4/9, 4 bit used
	{ 4,  5,  7, -1 }, // 1001 -> 5/7, 4 bit used
	{ 3,  6,  7, -1 }, // 1010 -> 6/7, 3 bit used
	{ 3,  6,  7, -1 }, // 1011 -> 6/7, 3 bit used
	{ 2, 10,  2, -1 }, // 1100 -> 10/2, 2 bit used
	{ 2, 10,  2, -1 }, // 1101 -> 10/2, 2 bit used
	{ 2, 10,  2, -1 }, // 1110 -> 10/2, 2 bit used
	{ 2, 10,  2, -1 }  // 1111 -> 10/2, 2 bit used
};
// extension table 14, prefix 00010001
static huffman_conv htab16_dec_ext14[ 8 ] = {
	{ 2,  1, 10, -1 }, // 000 -> 1/10, 2 bit used
	{ 2,  1, 10, -1 }, // 001 -> 1/10, 2 bit used
	{ 3,  0, 10, -1 }, // 010 -> 0/10, 3 bit used
	{ 3, 10,  0, -1 }, // 011 -> 10/0, 3 bit used
	{ 3,  3,  9, -1 }, // 100 -> 3/9, 3 bit used
	{ 3,  9,  3, -1 }, // 101 -> 9/3, 3 bit used
	{ 3,  5,  8, -1 }, // 110 -> 5/8, 3 bit used
	{ 3,  8,  5, -1 }  // 111 -> 8/5, 3 bit used
};
// extension table 15, prefix 00010010
static huffman_conv htab16_dec_ext15[ 8 ] = {
	{ 2,  2,  9, -1 }, // 000 -> 2/9, 2 bit used
	{ 2,  2,  9, -1 }, // 001 -> 2/9, 2 bit used
	{ 2,  9,  2, -1 }, // 010 -> 9/2, 2 bit used
	{ 2,  9,  2, -1 }, // 011 -> 9/2, 2 bit used
	{ 3,  7,  6, -1 }, // 100 -> 7/6, 3 bit used
	{ 3,  0,  9, -1 }, // 101 -> 0/9, 3 bit used
	{ 2,  1,  9, -1 }, // 110 -> 1/9, 2 bit used
	{ 2,  1,  9, -1 }  // 111 -> 1/9, 2 bit used
};
// extension table 16, prefix 00010011
static huffman_conv htab16_dec_ext16[ 8 ] = {
	{ 2,  9,  1, -1 }, // 000 -> 9/1, 2 bit used
	{ 2,  9,  1, -1 }, // 001 -> 9/1, 2 bit used
	{ 3,  9,  0, -1 }, // 010 -> 9/0, 3 bit used
	{ 3,  4,  8, -1 }, // 011 -> 4/8, 3 bit used
	{ 3,  8,  4, -1 }, // 100 -> 8/4, 3 bit used
	{ 3,  7,  5, -1 }, // 101 -> 7/5, 3 bit used
	{ 3,  3,  8, -1 }, // 110 -> 3/8, 3 bit used
	{ 3,  8,  3, -1 }  // 111 -> 8/3, 3 bit used
};
// extension table 17, prefix 00010100
static huffman_conv htab16_dec_ext17[ 8 ] = {
	{ 3,  6,  6, -1 }, // 000 -> 6/6, 3 bit used
	{ 3,  2,  8, -1 }, // 001 -> 2/8, 3 bit used
	{ 2,  8,  2, -1 }, // 010 -> 8/2, 2 bit used
	{ 2,  8,  2, -1 }, // 011 -> 8/2, 2 bit used
	{ 3,  4,  7, -1 }, // 100 -> 4/7, 3 bit used
	{ 3,  7,  4, -1 }, // 101 -> 7/4, 3 bit used
	{ 2,  1,  8, -1 }, // 110 -> 1/8, 2 bit used
	{ 2,  1,  8, -1 }  // 111 -> 1/8, 2 bit used
};
// extension table 18, prefix 00010101
static huffman_conv htab16_dec_ext18[ 8 ] = {
	{ 2,  8,  1, -1 }, // 000 -> 8/1, 2 bit used
	{ 2,  8,  1, -1 }, // 001 -> 8/1, 2 bit used
	{ 2,  8,  0, -1 }, // 010 -> 8/0, 2 bit used
	{ 2,  8,  0, -1 }, // 011 -> 8/0, 2 bit used
	{ 3,  0,  8, -1 }, // 100 -> 0/8, 3 bit used
	{ 3,  5,  6, -1 }, // 101 -> 5/6, 3 bit used
	{ 2,  3,  7, -1 }, // 110 -> 3/7, 2 bit used
	{ 2,  3,  7, -1 }  // 111 -> 3/7, 2 bit used
};
// extension table 19, prefix 00010110
static huffman_conv htab16_dec_ext19[ 8 ] = {
	{ 2,  7,  3, -1 }, // 000 -> 7/3, 2 bit used
	{ 2,  7,  3, -1 }, // 001 -> 7/3, 2 bit used
	{ 3,  6,  5, -1 }, // 010 -> 6/5, 3 bit used
	{ 3,  4,  6, -1 }, // 011 -> 4/6, 3 bit used
	{ 2,  2,  7, -1 }, // 100 -> 2/7, 2 bit used
	{ 2,  2,  7, -1 }, // 101 -> 2/7, 2 bit used
	{ 2,  7,  2, -1 }, // 110 -> 7/2, 2 bit used
	{ 2,  7,  2, -1 }  // 111 -> 7/2, 2 bit used
};
// extension table 20, prefix 00010111
static huffman_conv htab16_dec_ext20[ 8 ] = {
	{ 3,  6,  4, -1 }, // 000 -> 6/4, 3 bit used
	{ 3,  5,  5, -1 }, // 001 -> 5/5, 3 bit used
	{ 2,  0,  7, -1 }, // 010 -> 0/7, 2 bit used
	{ 2,  0,  7, -1 }, // 011 -> 0/7, 2 bit used
	{ 1,  1,  7, -1 }, // 100 -> 1/7, 1 bit used
	{ 1,  1,  7, -1 }, // 101 -> 1/7, 1 bit used
	{ 1,  1,  7, -1 }, // 110 -> 1/7, 1 bit used
	{ 1,  1,  7, -1 }  // 111 -> 1/7, 1 bit used
};
// extension table 21, prefix 00011000
static huffman_conv htab16_dec_ext21[ 4 ] = {
	{ 1,  7,  1, -1 }, // 00 -> 7/1, 1 bit used
	{ 1,  7,  1, -1 }, // 01 -> 7/1, 1 bit used
	{ 2,  7,  0, -1 }, // 10 -> 7/0, 2 bit used
	{ 2,  3,  6, -1 }  // 11 -> 3/6, 2 bit used
};
// extension table 22, prefix 00011001
static huffman_conv htab16_dec_ext22[ 4 ] = {
	{ 2,  6,  3, -1 }, // 00 -> 6/3, 2 bit used
	{ 2,  4,  5, -1 }, // 01 -> 4/5, 2 bit used
	{ 2,  5,  4, -1 }, // 10 -> 5/4, 2 bit used
	{ 2,  2,  6, -1 }  // 11 -> 2/6, 2 bit used
};
// extension table 23, prefix 00011010
static huffman_conv htab16_dec_ext23[ 2 ] = {
	{ 1,  6,  2, -1 }, // 0 -> 6/2, 1 bit used
	{ 1,  1,  6, -1 }  // 1 -> 1/6, 1 bit used
};
// extension table 24, prefix 00011011
static huffman_conv htab16_dec_ext24[ 4 ] = {
	{ 1,  6,  1, -1 }, // 00 -> 6/1, 1 bit used
	{ 1,  6,  1, -1 }, // 01 -> 6/1, 1 bit used
	{ 2,  0,  6, -1 }, // 10 -> 0/6, 2 bit used
	{ 2,  6,  0, -1 }  // 11 -> 6/0, 2 bit used
};
// extension table 25, prefix 00011100
static huffman_conv htab16_dec_ext25[ 4 ] = {
	{ 1,  5,  3, -1 }, // 00 -> 5/3, 1 bit used
	{ 1,  5,  3, -1 }, // 01 -> 5/3, 1 bit used
	{ 2,  3,  5, -1 }, // 10 -> 3/5, 2 bit used
	{ 2,  4,  4, -1 }  // 11 -> 4/4, 2 bit used
};
// extension table 26, prefix 00011101
static huffman_conv htab16_dec_ext26[ 2 ] = {
	{ 1,  2,  5, -1 }, // 0 -> 2/5, 1 bit used
	{ 1,  5,  2, -1 }  // 1 -> 5/2, 1 bit used
};
// extension table 27, prefix 00011111
static huffman_conv htab16_dec_ext27[ 2 ] = {
	{ 1,  1,  5, -1 }, // 0 -> 1/5, 1 bit used
	{ 1,  0,  5, -1 }  // 1 -> 0/5, 1 bit used
};
// extension table 28, prefix 00100000
static huffman_conv htab16_dec_ext28[ 2 ] = {
	{ 1,  3,  4, -1 }, // 0 -> 3/4, 1 bit used
	{ 1,  4,  3, -1 }  // 1 -> 4/3, 1 bit used
};
// extension table 29, prefix 00100001
static huffman_conv htab16_dec_ext29[ 2 ] = {
	{ 1,  5,  0, -1 }, // 0 -> 5/0, 1 bit used
	{ 1,  2,  4, -1 }  // 1 -> 2/4, 1 bit used
};
// extension table 30, prefix 00100010
static huffman_conv htab16_dec_ext30[ 2 ] = {
	{ 1,  4,  2, -1 }, // 0 -> 4/2, 1 bit used
	{ 1,  3,  3, -1 }  // 1 -> 3/3, 1 bit used
};
// extension table 31, prefix 00100101
static huffman_conv htab16_dec_ext31[ 2 ] = {
	{ 1,  0,  4, -1 }, // 0 -> 0/4, 1 bit used
	{ 1,  4,  0, -1 }  // 1 -> 4/0, 1 bit used
};
// extension table 32, prefix 0000011011000001
static huffman_conv htab16_dec_ext32[ 2 ] = {
	{ 1, 14, 12, -1 }, // 0 -> 14/12, 1 bit used
	{ 1, 13, 13, -1 }  // 1 -> 13/13, 1 bit used
};
// big values conversion table #16, total size: 804, ext tables: 32
static huffman_conv_set htab16_dec[ 33 ] = {
	{ htab16_dec_start, 8 }, // start table
	{ htab16_dec_ext1, 3 }, // ext table #1
	{ htab16_dec_ext2, 3 }, // ext table #2
	{ htab16_dec_ext3, 2 }, // ext table #3
	{ htab16_dec_ext4, 2 }, // ext table #4
	{ htab16_dec_ext5, 1 }, // ext table #5
	{ htab16_dec_ext6, 8 }, // ext table #6
	{ htab16_dec_ext7, 1 }, // ext table #7
	{ htab16_dec_ext8, 6 }, // ext table #8
	{ htab16_dec_ext9, 5 }, // ext table #9
	{ htab16_dec_ext10, 5 }, // ext table #10
	{ htab16_dec_ext11, 4 }, // ext table #11
	{ htab16_dec_ext12, 4 }, // ext table #12
	{ htab16_dec_ext13, 4 }, // ext table #13
	{ htab16_dec_ext14, 3 }, // ext table #14
	{ htab16_dec_ext15, 3 }, // ext table #15
	{ htab16_dec_ext16, 3 }, // ext table #16
	{ htab16_dec_ext17, 3 }, // ext table #17
	{ htab16_dec_ext18, 3 }, // ext table #18
	{ htab16_dec_ext19, 3 }, // ext table #19
	{ htab16_dec_ext20, 3 }, // ext table #20
	{ htab16_dec_ext21, 2 }, // ext table #21
	{ htab16_dec_ext22, 2 }, // ext table #22
	{ htab16_dec_ext23, 1 }, // ext table #23
	{ htab16_dec_ext24, 2 }, // ext table #24
	{ htab16_dec_ext25, 2 }, // ext table #25
	{ htab16_dec_ext26, 1 }, // ext table #26
	{ htab16_dec_ext27, 1 }, // ext table #27
	{ htab16_dec_ext28, 1 }, // ext table #28
	{ htab16_dec_ext29, 1 }, // ext table #29
	{ htab16_dec_ext30, 1 }, // ext table #30
	{ htab16_dec_ext31, 1 }, // ext table #31
	{ htab16_dec_ext32, 1 }  // ext table #32
};

/* -----------------------------------------------
	big values conversion table 24
	----------------------------------------------- */
static huffman_conv htab24_dec_start[ 256 ] = {
	{ 8, 14, 15, -1 }, // 00000000 -> 14/15, 8 bit used
	{ 8, 15, 14, -1 }, // 00000001 -> 15/14, 8 bit used
	{ 8, 13, 15, -1 }, // 00000010 -> 13/15, 8 bit used
	{ 8, 15, 13, -1 }, // 00000011 -> 15/13, 8 bit used
	{ 8, 12, 15, -1 }, // 00000100 -> 12/15, 8 bit used
	{ 8, 15, 12, -1 }, // 00000101 -> 15/12, 8 bit used
	{ 8, 11, 15, -1 }, // 00000110 -> 11/15, 8 bit used
	{ 8, 15, 11, -1 }, // 00000111 -> 15/11, 8 bit used
	{ 7, 15, 10, -1 }, // 00001000 -> 15/10, 7 bit used
	{ 7, 15, 10, -1 }, // 00001001 -> 15/10, 7 bit used
	{ 8, 10, 15, -1 }, // 00001010 -> 10/15, 8 bit used
	{ 8,  9, 15, -1 }, // 00001011 -> 9/15, 8 bit used
	{ 7, 15,  9, -1 }, // 00001100 -> 15/9, 7 bit used
	{ 7, 15,  9, -1 }, // 00001101 -> 15/9, 7 bit used
	{ 7, 15,  8, -1 }, // 00001110 -> 15/8, 7 bit used
	{ 7, 15,  8, -1 }, // 00001111 -> 15/8, 7 bit used
	{ 8,  8, 15, -1 }, // 00010000 -> 8/15, 8 bit used
	{ 8,  7, 15, -1 }, // 00010001 -> 7/15, 8 bit used
	{ 7, 15,  7, -1 }, // 00010010 -> 15/7, 7 bit used
	{ 7, 15,  7, -1 }, // 00010011 -> 15/7, 7 bit used
	{ 7,  6, 15, -1 }, // 00010100 -> 6/15, 7 bit used
	{ 7,  6, 15, -1 }, // 00010101 -> 6/15, 7 bit used
	{ 7, 15,  6, -1 }, // 00010110 -> 15/6, 7 bit used
	{ 7, 15,  6, -1 }, // 00010111 -> 15/6, 7 bit used
	{ 7,  5, 15, -1 }, // 00011000 -> 5/15, 7 bit used
	{ 7,  5, 15, -1 }, // 00011001 -> 5/15, 7 bit used
	{ 7, 15,  5, -1 }, // 00011010 -> 15/5, 7 bit used
	{ 7, 15,  5, -1 }, // 00011011 -> 15/5, 7 bit used
	{ 7,  4, 15, -1 }, // 00011100 -> 4/15, 7 bit used
	{ 7,  4, 15, -1 }, // 00011101 -> 4/15, 7 bit used
	{ 7, 15,  4, -1 }, // 00011110 -> 15/4, 7 bit used
	{ 7, 15,  4, -1 }, // 00011111 -> 15/4, 7 bit used
	{ 7,  3, 15, -1 }, // 00100000 -> 3/15, 7 bit used
	{ 7,  3, 15, -1 }, // 00100001 -> 3/15, 7 bit used
	{ 7, 15,  3, -1 }, // 00100010 -> 15/3, 7 bit used
	{ 7, 15,  3, -1 }, // 00100011 -> 15/3, 7 bit used
	{ 7,  2, 15, -1 }, // 00100100 -> 2/15, 7 bit used
	{ 7,  2, 15, -1 }, // 00100101 -> 2/15, 7 bit used
	{ 7, 15,  2, -1 }, // 00100110 -> 15/2, 7 bit used
	{ 7, 15,  2, -1 }, // 00100111 -> 15/2, 7 bit used
	{ 7, 15,  1, -1 }, // 00101000 -> 15/1, 7 bit used
	{ 7, 15,  1, -1 }, // 00101001 -> 15/1, 7 bit used
	{ 8,  1, 15, -1 }, // 00101010 -> 1/15, 8 bit used
	{ 8, 15,  0, -1 }, // 00101011 -> 15/0, 8 bit used
	{ 8, -1, -1,  1 }, // 00101100 -> extension table #1
	{ 8, -1, -1,  2 }, // 00101101 -> extension table #2
	{ 8, -1, -1,  3 }, // 00101110 -> extension table #3
	{ 8, -1, -1,  4 }, // 00101111 -> extension table #4
	{ 4, 15, 15, -1 }, // 00110000 -> 15/15, 4 bit used
	{ 4, 15, 15, -1 }, // 00110001 -> 15/15, 4 bit used
	{ 4, 15, 15, -1 }, // 00110010 -> 15/15, 4 bit used
	{ 4, 15, 15, -1 }, // 00110011 -> 15/15, 4 bit used
	{ 4, 15, 15, -1 }, // 00110100 -> 15/15, 4 bit used
	{ 4, 15, 15, -1 }, // 00110101 -> 15/15, 4 bit used
	{ 4, 15, 15, -1 }, // 00110110 -> 15/15, 4 bit used
	{ 4, 15, 15, -1 }, // 00110111 -> 15/15, 4 bit used
	{ 4, 15, 15, -1 }, // 00111000 -> 15/15, 4 bit used
	{ 4, 15, 15, -1 }, // 00111001 -> 15/15, 4 bit used
	{ 4, 15, 15, -1 }, // 00111010 -> 15/15, 4 bit used
	{ 4, 15, 15, -1 }, // 00111011 -> 15/15, 4 bit used
	{ 4, 15, 15, -1 }, // 00111100 -> 15/15, 4 bit used
	{ 4, 15, 15, -1 }, // 00111101 -> 15/15, 4 bit used
	{ 4, 15, 15, -1 }, // 00111110 -> 15/15, 4 bit used
	{ 4, 15, 15, -1 }, // 00111111 -> 15/15, 4 bit used
	{ 8, -1, -1,  5 }, // 01000000 -> extension table #5
	{ 8, -1, -1,  6 }, // 01000001 -> extension table #6
	{ 8, -1, -1,  7 }, // 01000010 -> extension table #7
	{ 8, -1, -1,  8 }, // 01000011 -> extension table #8
	{ 8, -1, -1,  9 }, // 01000100 -> extension table #9
	{ 8, -1, -1, 10 }, // 01000101 -> extension table #10
	{ 8, -1, -1, 11 }, // 01000110 -> extension table #11
	{ 8, -1, -1, 12 }, // 01000111 -> extension table #12
	{ 8, -1, -1, 13 }, // 01001000 -> extension table #13
	{ 8, -1, -1, 14 }, // 01001001 -> extension table #14
	{ 8, -1, -1, 15 }, // 01001010 -> extension table #15
	{ 8, -1, -1, 16 }, // 01001011 -> extension table #16
	{ 8, -1, -1, 17 }, // 01001100 -> extension table #17
	{ 8, -1, -1, 18 }, // 01001101 -> extension table #18
	{ 8, -1, -1, 19 }, // 01001110 -> extension table #19
	{ 8, -1, -1, 20 }, // 01001111 -> extension table #20
	{ 8, -1, -1, 21 }, // 01010000 -> extension table #21
	{ 8, -1, -1, 22 }, // 01010001 -> extension table #22
	{ 8, -1, -1, 23 }, // 01010010 -> extension table #23
	{ 8, -1, -1, 24 }, // 01010011 -> extension table #24
	{ 8, -1, -1, 25 }, // 01010100 -> extension table #25
	{ 8, -1, -1, 26 }, // 01010101 -> extension table #26
	{ 8, -1, -1, 27 }, // 01010110 -> extension table #27
	{ 8, -1, -1, 28 }, // 01010111 -> extension table #28
	{ 8, -1, -1, 29 }, // 01011000 -> extension table #29
	{ 8, -1, -1, 30 }, // 01011001 -> extension table #30
	{ 8, -1, -1, 31 }, // 01011010 -> extension table #31
	{ 8, -1, -1, 32 }, // 01011011 -> extension table #32
	{ 8, -1, -1, 33 }, // 01011100 -> extension table #33
	{ 8, -1, -1, 34 }, // 01011101 -> extension table #34
	{ 8, -1, -1, 35 }, // 01011110 -> extension table #35
	{ 8, -1, -1, 36 }, // 01011111 -> extension table #36
	{ 8, -1, -1, 37 }, // 01100000 -> extension table #37
	{ 8, -1, -1, 38 }, // 01100001 -> extension table #38
	{ 8, -1, -1, 39 }, // 01100010 -> extension table #39
	{ 8, -1, -1, 40 }, // 01100011 -> extension table #40
	{ 8, -1, -1, 41 }, // 01100100 -> extension table #41
	{ 8, -1, -1, 42 }, // 01100101 -> extension table #42
	{ 8, -1, -1, 43 }, // 01100110 -> extension table #43
	{ 8, -1, -1, 44 }, // 01100111 -> extension table #44
	{ 8, -1, -1, 45 }, // 01101000 -> extension table #45
	{ 8, -1, -1, 46 }, // 01101001 -> extension table #46
	{ 8, -1, -1, 47 }, // 01101010 -> extension table #47
	{ 8, -1, -1, 48 }, // 01101011 -> extension table #48
	{ 8, -1, -1, 49 }, // 01101100 -> extension table #49
	{ 8,  7,  3, -1 }, // 01101101 -> 7/3, 8 bit used
	{ 8, -1, -1, 50 }, // 01101110 -> extension table #50
	{ 8,  7,  2, -1 }, // 01101111 -> 7/2, 8 bit used
	{ 8,  4,  6, -1 }, // 01110000 -> 4/6, 8 bit used
	{ 8,  6,  4, -1 }, // 01110001 -> 6/4, 8 bit used
	{ 8,  5,  5, -1 }, // 01110010 -> 5/5, 8 bit used
	{ 8,  7,  1, -1 }, // 01110011 -> 7/1, 8 bit used
	{ 8,  3,  6, -1 }, // 01110100 -> 3/6, 8 bit used
	{ 8,  6,  3, -1 }, // 01110101 -> 6/3, 8 bit used
	{ 8,  4,  5, -1 }, // 01110110 -> 4/5, 8 bit used
	{ 8,  5,  4, -1 }, // 01110111 -> 5/4, 8 bit used
	{ 8,  2,  6, -1 }, // 01111000 -> 2/6, 8 bit used
	{ 8,  6,  2, -1 }, // 01111001 -> 6/2, 8 bit used
	{ 8,  1,  6, -1 }, // 01111010 -> 1/6, 8 bit used
	{ 8,  6,  1, -1 }, // 01111011 -> 6/1, 8 bit used
	{ 8, -1, -1, 51 }, // 01111100 -> extension table #51
	{ 8,  3,  5, -1 }, // 01111101 -> 3/5, 8 bit used
	{ 8,  5,  3, -1 }, // 01111110 -> 5/3, 8 bit used
	{ 8,  4,  4, -1 }, // 01111111 -> 4/4, 8 bit used
	{ 8,  2,  5, -1 }, // 10000000 -> 2/5, 8 bit used
	{ 8,  5,  2, -1 }, // 10000001 -> 5/2, 8 bit used
	{ 8,  1,  5, -1 }, // 10000010 -> 1/5, 8 bit used
	{ 8, -1, -1, 52 }, // 10000011 -> extension table #52
	{ 7,  5,  1, -1 }, // 10000100 -> 5/1, 7 bit used
	{ 7,  5,  1, -1 }, // 10000101 -> 5/1, 7 bit used
	{ 8,  3,  4, -1 }, // 10000110 -> 3/4, 8 bit used
	{ 8,  4,  3, -1 }, // 10000111 -> 4/3, 8 bit used
	{ 7,  2,  4, -1 }, // 10001000 -> 2/4, 7 bit used
	{ 7,  2,  4, -1 }, // 10001001 -> 2/4, 7 bit used
	{ 7,  4,  2, -1 }, // 10001010 -> 4/2, 7 bit used
	{ 7,  4,  2, -1 }, // 10001011 -> 4/2, 7 bit used
	{ 7,  3,  3, -1 }, // 10001100 -> 3/3, 7 bit used
	{ 7,  3,  3, -1 }, // 10001101 -> 3/3, 7 bit used
	{ 7,  1,  4, -1 }, // 10001110 -> 1/4, 7 bit used
	{ 7,  1,  4, -1 }, // 10001111 -> 1/4, 7 bit used
	{ 7,  4,  1, -1 }, // 10010000 -> 4/1, 7 bit used
	{ 7,  4,  1, -1 }, // 10010001 -> 4/1, 7 bit used
	{ 8,  0,  4, -1 }, // 10010010 -> 0/4, 8 bit used
	{ 8,  4,  0, -1 }, // 10010011 -> 4/0, 8 bit used
	{ 7,  2,  3, -1 }, // 10010100 -> 2/3, 7 bit used
	{ 7,  2,  3, -1 }, // 10010101 -> 2/3, 7 bit used
	{ 7,  3,  2, -1 }, // 10010110 -> 3/2, 7 bit used
	{ 7,  3,  2, -1 }, // 10010111 -> 3/2, 7 bit used
	{ 6,  1,  3, -1 }, // 10011000 -> 1/3, 6 bit used
	{ 6,  1,  3, -1 }, // 10011001 -> 1/3, 6 bit used
	{ 6,  1,  3, -1 }, // 10011010 -> 1/3, 6 bit used
	{ 6,  1,  3, -1 }, // 10011011 -> 1/3, 6 bit used
	{ 6,  3,  1, -1 }, // 10011100 -> 3/1, 6 bit used
	{ 6,  3,  1, -1 }, // 10011101 -> 3/1, 6 bit used
	{ 6,  3,  1, -1 }, // 10011110 -> 3/1, 6 bit used
	{ 6,  3,  1, -1 }, // 10011111 -> 3/1, 6 bit used
	{ 7,  0,  3, -1 }, // 10100000 -> 0/3, 7 bit used
	{ 7,  0,  3, -1 }, // 10100001 -> 0/3, 7 bit used
	{ 7,  3,  0, -1 }, // 10100010 -> 3/0, 7 bit used
	{ 7,  3,  0, -1 }, // 10100011 -> 3/0, 7 bit used
	{ 6,  2,  2, -1 }, // 10100100 -> 2/2, 6 bit used
	{ 6,  2,  2, -1 }, // 10100101 -> 2/2, 6 bit used
	{ 6,  2,  2, -1 }, // 10100110 -> 2/2, 6 bit used
	{ 6,  2,  2, -1 }, // 10100111 -> 2/2, 6 bit used
	{ 5,  1,  2, -1 }, // 10101000 -> 1/2, 5 bit used
	{ 5,  1,  2, -1 }, // 10101001 -> 1/2, 5 bit used
	{ 5,  1,  2, -1 }, // 10101010 -> 1/2, 5 bit used
	{ 5,  1,  2, -1 }, // 10101011 -> 1/2, 5 bit used
	{ 5,  1,  2, -1 }, // 10101100 -> 1/2, 5 bit used
	{ 5,  1,  2, -1 }, // 10101101 -> 1/2, 5 bit used
	{ 5,  1,  2, -1 }, // 10101110 -> 1/2, 5 bit used
	{ 5,  1,  2, -1 }, // 10101111 -> 1/2, 5 bit used
	{ 5,  2,  1, -1 }, // 10110000 -> 2/1, 5 bit used
	{ 5,  2,  1, -1 }, // 10110001 -> 2/1, 5 bit used
	{ 5,  2,  1, -1 }, // 10110010 -> 2/1, 5 bit used
	{ 5,  2,  1, -1 }, // 10110011 -> 2/1, 5 bit used
	{ 5,  2,  1, -1 }, // 10110100 -> 2/1, 5 bit used
	{ 5,  2,  1, -1 }, // 10110101 -> 2/1, 5 bit used
	{ 5,  2,  1, -1 }, // 10110110 -> 2/1, 5 bit used
	{ 5,  2,  1, -1 }, // 10110111 -> 2/1, 5 bit used
	{ 6,  0,  2, -1 }, // 10111000 -> 0/2, 6 bit used
	{ 6,  0,  2, -1 }, // 10111001 -> 0/2, 6 bit used
	{ 6,  0,  2, -1 }, // 10111010 -> 0/2, 6 bit used
	{ 6,  0,  2, -1 }, // 10111011 -> 0/2, 6 bit used
	{ 6,  2,  0, -1 }, // 10111100 -> 2/0, 6 bit used
	{ 6,  2,  0, -1 }, // 10111101 -> 2/0, 6 bit used
	{ 6,  2,  0, -1 }, // 10111110 -> 2/0, 6 bit used
	{ 6,  2,  0, -1 }, // 10111111 -> 2/0, 6 bit used
	{ 4,  1,  1, -1 }, // 11000000 -> 1/1, 4 bit used
	{ 4,  1,  1, -1 }, // 11000001 -> 1/1, 4 bit used
	{ 4,  1,  1, -1 }, // 11000010 -> 1/1, 4 bit used
	{ 4,  1,  1, -1 }, // 11000011 -> 1/1, 4 bit used
	{ 4,  1,  1, -1 }, // 11000100 -> 1/1, 4 bit used
	{ 4,  1,  1, -1 }, // 11000101 -> 1/1, 4 bit used
	{ 4,  1,  1, -1 }, // 11000110 -> 1/1, 4 bit used
	{ 4,  1,  1, -1 }, // 11000111 -> 1/1, 4 bit used
	{ 4,  1,  1, -1 }, // 11001000 -> 1/1, 4 bit used
	{ 4,  1,  1, -1 }, // 11001001 -> 1/1, 4 bit used
	{ 4,  1,  1, -1 }, // 11001010 -> 1/1, 4 bit used
	{ 4,  1,  1, -1 }, // 11001011 -> 1/1, 4 bit used
	{ 4,  1,  1, -1 }, // 11001100 -> 1/1, 4 bit used
	{ 4,  1,  1, -1 }, // 11001101 -> 1/1, 4 bit used
	{ 4,  1,  1, -1 }, // 11001110 -> 1/1, 4 bit used
	{ 4,  1,  1, -1 }, // 11001111 -> 1/1, 4 bit used
	{ 4,  0,  1, -1 }, // 11010000 -> 0/1, 4 bit used
	{ 4,  0,  1, -1 }, // 11010001 -> 0/1, 4 bit used
	{ 4,  0,  1, -1 }, // 11010010 -> 0/1, 4 bit used
	{ 4,  0,  1, -1 }, // 11010011 -> 0/1, 4 bit used
	{ 4,  0,  1, -1 }, // 11010100 -> 0/1, 4 bit used
	{ 4,  0,  1, -1 }, // 11010101 -> 0/1, 4 bit used
	{ 4,  0,  1, -1 }, // 11010110 -> 0/1, 4 bit used
	{ 4,  0,  1, -1 }, // 11010111 -> 0/1, 4 bit used
	{ 4,  0,  1, -1 }, // 11011000 -> 0/1, 4 bit used
	{ 4,  0,  1, -1 }, // 11011001 -> 0/1, 4 bit used
	{ 4,  0,  1, -1 }, // 11011010 -> 0/1, 4 bit used
	{ 4,  0,  1, -1 }, // 11011011 -> 0/1, 4 bit used
	{ 4,  0,  1, -1 }, // 11011100 -> 0/1, 4 bit used
	{ 4,  0,  1, -1 }, // 11011101 -> 0/1, 4 bit used
	{ 4,  0,  1, -1 }, // 11011110 -> 0/1, 4 bit used
	{ 4,  0,  1, -1 }, // 11011111 -> 0/1, 4 bit used
	{ 4,  1,  0, -1 }, // 11100000 -> 1/0, 4 bit used
	{ 4,  1,  0, -1 }, // 11100001 -> 1/0, 4 bit used
	{ 4,  1,  0, -1 }, // 11100010 -> 1/0, 4 bit used
	{ 4,  1,  0, -1 }, // 11100011 -> 1/0, 4 bit used
	{ 4,  1,  0, -1 }, // 11100100 -> 1/0, 4 bit used
	{ 4,  1,  0, -1 }, // 11100101 -> 1/0, 4 bit used
	{ 4,  1,  0, -1 }, // 11100110 -> 1/0, 4 bit used
	{ 4,  1,  0, -1 }, // 11100111 -> 1/0, 4 bit used
	{ 4,  1,  0, -1 }, // 11101000 -> 1/0, 4 bit used
	{ 4,  1,  0, -1 }, // 11101001 -> 1/0, 4 bit used
	{ 4,  1,  0, -1 }, // 11101010 -> 1/0, 4 bit used
	{ 4,  1,  0, -1 }, // 11101011 -> 1/0, 4 bit used
	{ 4,  1,  0, -1 }, // 11101100 -> 1/0, 4 bit used
	{ 4,  1,  0, -1 }, // 11101101 -> 1/0, 4 bit used
	{ 4,  1,  0, -1 }, // 11101110 -> 1/0, 4 bit used
	{ 4,  1,  0, -1 }, // 11101111 -> 1/0, 4 bit used
	{ 4,  0,  0, -1 }, // 11110000 -> 0/0, 4 bit used
	{ 4,  0,  0, -1 }, // 11110001 -> 0/0, 4 bit used
	{ 4,  0,  0, -1 }, // 11110010 -> 0/0, 4 bit used
	{ 4,  0,  0, -1 }, // 11110011 -> 0/0, 4 bit used
	{ 4,  0,  0, -1 }, // 11110100 -> 0/0, 4 bit used
	{ 4,  0,  0, -1 }, // 11110101 -> 0/0, 4 bit used
	{ 4,  0,  0, -1 }, // 11110110 -> 0/0, 4 bit used
	{ 4,  0,  0, -1 }, // 11110111 -> 0/0, 4 bit used
	{ 4,  0,  0, -1 }, // 11111000 -> 0/0, 4 bit used
	{ 4,  0,  0, -1 }, // 11111001 -> 0/0, 4 bit used
	{ 4,  0,  0, -1 }, // 11111010 -> 0/0, 4 bit used
	{ 4,  0,  0, -1 }, // 11111011 -> 0/0, 4 bit used
	{ 4,  0,  0, -1 }, // 11111100 -> 0/0, 4 bit used
	{ 4,  0,  0, -1 }, // 11111101 -> 0/0, 4 bit used
	{ 4,  0,  0, -1 }, // 11111110 -> 0/0, 4 bit used
	{ 4,  0,  0, -1 }  // 11111111 -> 0/0, 4 bit used
};
// extension table 1, prefix 00101100
static huffman_conv htab24_dec_ext1[ 8 ] = {
	{ 1,  0, 15, -1 }, // 000 -> 0/15, 1 bit used
	{ 1,  0, 15, -1 }, // 001 -> 0/15, 1 bit used
	{ 1,  0, 15, -1 }, // 010 -> 0/15, 1 bit used
	{ 1,  0, 15, -1 }, // 011 -> 0/15, 1 bit used
	{ 3, 14, 14, -1 }, // 100 -> 14/14, 3 bit used
	{ 3, 13, 14, -1 }, // 101 -> 13/14, 3 bit used
	{ 3, 14, 13, -1 }, // 110 -> 14/13, 3 bit used
	{ 3, 12, 14, -1 }  // 111 -> 12/14, 3 bit used
};
// extension table 2, prefix 00101101
static huffman_conv htab24_dec_ext2[ 8 ] = {
	{ 3, 14, 12, -1 }, // 000 -> 14/12, 3 bit used
	{ 3, 13, 13, -1 }, // 001 -> 13/13, 3 bit used
	{ 3, 11, 14, -1 }, // 010 -> 11/14, 3 bit used
	{ 3, 14, 11, -1 }, // 011 -> 14/11, 3 bit used
	{ 3, 12, 13, -1 }, // 100 -> 12/13, 3 bit used
	{ 3, 13, 12, -1 }, // 101 -> 13/12, 3 bit used
	{ 3, 10, 14, -1 }, // 110 -> 10/14, 3 bit used
	{ 3, 14, 10, -1 }  // 111 -> 14/10, 3 bit used
};
// extension table 3, prefix 00101110
static huffman_conv htab24_dec_ext3[ 8 ] = {
	{ 3, 11, 13, -1 }, // 000 -> 11/13, 3 bit used
	{ 3, 13, 11, -1 }, // 001 -> 13/11, 3 bit used
	{ 3, 12, 12, -1 }, // 010 -> 12/12, 3 bit used
	{ 3,  9, 14, -1 }, // 011 -> 9/14, 3 bit used
	{ 3, 14,  9, -1 }, // 100 -> 14/9, 3 bit used
	{ 3, 10, 13, -1 }, // 101 -> 10/13, 3 bit used
	{ 3, 13, 10, -1 }, // 110 -> 13/10, 3 bit used
	{ 3, 11, 12, -1 }  // 111 -> 11/12, 3 bit used
};
// extension table 4, prefix 00101111
static huffman_conv htab24_dec_ext4[ 8 ] = {
	{ 3, 12, 11, -1 }, // 000 -> 12/11, 3 bit used
	{ 3,  8, 14, -1 }, // 001 -> 8/14, 3 bit used
	{ 3, 14,  8, -1 }, // 010 -> 14/8, 3 bit used
	{ 3,  9, 13, -1 }, // 011 -> 9/13, 3 bit used
	{ 3, 13,  9, -1 }, // 100 -> 13/9, 3 bit used
	{ 3,  7, 14, -1 }, // 101 -> 7/14, 3 bit used
	{ 3, 14,  7, -1 }, // 110 -> 14/7, 3 bit used
	{ 3, 10, 12, -1 }  // 111 -> 10/12, 3 bit used
};
// extension table 5, prefix 01000000
static huffman_conv htab24_dec_ext5[ 16 ] = {
	{ 3, 12, 10, -1 }, // 0000 -> 12/10, 3 bit used
	{ 3, 12, 10, -1 }, // 0001 -> 12/10, 3 bit used
	{ 3, 11, 11, -1 }, // 0010 -> 11/11, 3 bit used
	{ 3, 11, 11, -1 }, // 0011 -> 11/11, 3 bit used
	{ 3,  8, 13, -1 }, // 0100 -> 8/13, 3 bit used
	{ 3,  8, 13, -1 }, // 0101 -> 8/13, 3 bit used
	{ 3, 13,  8, -1 }, // 0110 -> 13/8, 3 bit used
	{ 3, 13,  8, -1 }, // 0111 -> 13/8, 3 bit used
	{ 4,  0, 14, -1 }, // 1000 -> 0/14, 4 bit used
	{ 4, 14,  0, -1 }, // 1001 -> 14/0, 4 bit used
	{ 3,  0, 13, -1 }, // 1010 -> 0/13, 3 bit used
	{ 3,  0, 13, -1 }, // 1011 -> 0/13, 3 bit used
	{ 2, 14,  6, -1 }, // 1100 -> 14/6, 2 bit used
	{ 2, 14,  6, -1 }, // 1101 -> 14/6, 2 bit used
	{ 2, 14,  6, -1 }, // 1110 -> 14/6, 2 bit used
	{ 2, 14,  6, -1 }  // 1111 -> 14/6, 2 bit used
};
// extension table 6, prefix 01000001
static huffman_conv htab24_dec_ext6[ 8 ] = {
	{ 3,  6, 14, -1 }, // 000 -> 6/14, 3 bit used
	{ 3,  9, 12, -1 }, // 001 -> 9/12, 3 bit used
	{ 2, 12,  9, -1 }, // 010 -> 12/9, 2 bit used
	{ 2, 12,  9, -1 }, // 011 -> 12/9, 2 bit used
	{ 2,  5, 14, -1 }, // 100 -> 5/14, 2 bit used
	{ 2,  5, 14, -1 }, // 101 -> 5/14, 2 bit used
	{ 2, 11, 10, -1 }, // 110 -> 11/10, 2 bit used
	{ 2, 11, 10, -1 }  // 111 -> 11/10, 2 bit used
};
// extension table 7, prefix 01000010
static huffman_conv htab24_dec_ext7[ 8 ] = {
	{ 2, 14,  5, -1 }, // 000 -> 14/5, 2 bit used
	{ 2, 14,  5, -1 }, // 001 -> 14/5, 2 bit used
	{ 3, 10, 11, -1 }, // 010 -> 10/11, 3 bit used
	{ 3,  7, 13, -1 }, // 011 -> 7/13, 3 bit used
	{ 2, 13,  7, -1 }, // 100 -> 13/7, 2 bit used
	{ 2, 13,  7, -1 }, // 101 -> 13/7, 2 bit used
	{ 2, 14,  4, -1 }, // 110 -> 14/4, 2 bit used
	{ 2, 14,  4, -1 }  // 111 -> 14/4, 2 bit used
};
// extension table 8, prefix 01000011
static huffman_conv htab24_dec_ext8[ 8 ] = {
	{ 2,  8, 12, -1 }, // 000 -> 8/12, 2 bit used
	{ 2,  8, 12, -1 }, // 001 -> 8/12, 2 bit used
	{ 2, 12,  8, -1 }, // 010 -> 12/8, 2 bit used
	{ 2, 12,  8, -1 }, // 011 -> 12/8, 2 bit used
	{ 3,  4, 14, -1 }, // 100 -> 4/14, 3 bit used
	{ 3,  2, 14, -1 }, // 101 -> 2/14, 3 bit used
	{ 2,  3, 14, -1 }, // 110 -> 3/14, 2 bit used
	{ 2,  3, 14, -1 }  // 111 -> 3/14, 2 bit used
};
// extension table 9, prefix 01000100
static huffman_conv htab24_dec_ext9[ 4 ] = {
	{ 2,  6, 13, -1 }, // 00 -> 6/13, 2 bit used
	{ 2, 13,  6, -1 }, // 01 -> 13/6, 2 bit used
	{ 2, 14,  3, -1 }, // 10 -> 14/3, 2 bit used
	{ 2,  9, 11, -1 }  // 11 -> 9/11, 2 bit used
};
// extension table 10, prefix 01000101
static huffman_conv htab24_dec_ext10[ 4 ] = {
	{ 2, 11,  9, -1 }, // 00 -> 11/9, 2 bit used
	{ 2, 10, 10, -1 }, // 01 -> 10/10, 2 bit used
	{ 2, 14,  2, -1 }, // 10 -> 14/2, 2 bit used
	{ 2,  1, 14, -1 }  // 11 -> 1/14, 2 bit used
};
// extension table 11, prefix 01000110
static huffman_conv htab24_dec_ext11[ 4 ] = {
	{ 2, 14,  1, -1 }, // 00 -> 14/1, 2 bit used
	{ 2,  5, 13, -1 }, // 01 -> 5/13, 2 bit used
	{ 2, 13,  5, -1 }, // 10 -> 13/5, 2 bit used
	{ 2,  7, 12, -1 }  // 11 -> 7/12, 2 bit used
};
// extension table 12, prefix 01000111
static huffman_conv htab24_dec_ext12[ 4 ] = {
	{ 2, 12,  7, -1 }, // 00 -> 12/7, 2 bit used
	{ 2,  4, 13, -1 }, // 01 -> 4/13, 2 bit used
	{ 2,  8, 11, -1 }, // 10 -> 8/11, 2 bit used
	{ 2, 11,  8, -1 }  // 11 -> 11/8, 2 bit used
};
// extension table 13, prefix 01001000
static huffman_conv htab24_dec_ext13[ 4 ] = {
	{ 2, 13,  4, -1 }, // 00 -> 13/4, 2 bit used
	{ 2,  9, 10, -1 }, // 01 -> 9/10, 2 bit used
	{ 2, 10,  9, -1 }, // 10 -> 10/9, 2 bit used
	{ 2,  6, 12, -1 }  // 11 -> 6/12, 2 bit used
};
// extension table 14, prefix 01001001
static huffman_conv htab24_dec_ext14[ 4 ] = {
	{ 2, 12,  6, -1 }, // 00 -> 12/6, 2 bit used
	{ 2,  3, 13, -1 }, // 01 -> 3/13, 2 bit used
	{ 2, 13,  3, -1 }, // 10 -> 13/3, 2 bit used
	{ 2,  2, 13, -1 }  // 11 -> 2/13, 2 bit used
};
// extension table 15, prefix 01001010
static huffman_conv htab24_dec_ext15[ 4 ] = {
	{ 2, 13,  2, -1 }, // 00 -> 13/2, 2 bit used
	{ 2,  1, 13, -1 }, // 01 -> 1/13, 2 bit used
	{ 2,  7, 11, -1 }, // 10 -> 7/11, 2 bit used
	{ 2, 11,  7, -1 }  // 11 -> 11/7, 2 bit used
};
// extension table 16, prefix 01001011
static huffman_conv htab24_dec_ext16[ 4 ] = {
	{ 2, 13,  1, -1 }, // 00 -> 13/1, 2 bit used
	{ 2,  5, 12, -1 }, // 01 -> 5/12, 2 bit used
	{ 2, 12,  5, -1 }, // 10 -> 12/5, 2 bit used
	{ 2,  8, 10, -1 }  // 11 -> 8/10, 2 bit used
};
// extension table 17, prefix 01001100
static huffman_conv htab24_dec_ext17[ 4 ] = {
	{ 2, 10,  8, -1 }, // 00 -> 10/8, 2 bit used
	{ 2,  9,  9, -1 }, // 01 -> 9/9, 2 bit used
	{ 2,  4, 12, -1 }, // 10 -> 4/12, 2 bit used
	{ 2, 12,  4, -1 }  // 11 -> 12/4, 2 bit used
};
// extension table 18, prefix 01001101
static huffman_conv htab24_dec_ext18[ 8 ] = {
	{ 2,  6, 11, -1 }, // 000 -> 6/11, 2 bit used
	{ 2,  6, 11, -1 }, // 001 -> 6/11, 2 bit used
	{ 2, 11,  6, -1 }, // 010 -> 11/6, 2 bit used
	{ 2, 11,  6, -1 }, // 011 -> 11/6, 2 bit used
	{ 3, 13,  0, -1 }, // 100 -> 13/0, 3 bit used
	{ 3,  0, 12, -1 }, // 101 -> 0/12, 3 bit used
	{ 2,  3, 12, -1 }, // 110 -> 3/12, 2 bit used
	{ 2,  3, 12, -1 }  // 111 -> 3/12, 2 bit used
};
// extension table 19, prefix 01001110
static huffman_conv htab24_dec_ext19[ 4 ] = {
	{ 2, 12,  3, -1 }, // 00 -> 12/3, 2 bit used
	{ 2,  7, 10, -1 }, // 01 -> 7/10, 2 bit used
	{ 2, 10,  7, -1 }, // 10 -> 10/7, 2 bit used
	{ 2,  2, 12, -1 }  // 11 -> 2/12, 2 bit used
};
// extension table 20, prefix 01001111
static huffman_conv htab24_dec_ext20[ 4 ] = {
	{ 2, 12,  2, -1 }, // 00 -> 12/2, 2 bit used
	{ 2,  5, 11, -1 }, // 01 -> 5/11, 2 bit used
	{ 2, 11,  5, -1 }, // 10 -> 11/5, 2 bit used
	{ 2,  1, 12, -1 }  // 11 -> 1/12, 2 bit used
};
// extension table 21, prefix 01010000
static huffman_conv htab24_dec_ext21[ 4 ] = {
	{ 2,  8,  9, -1 }, // 00 -> 8/9, 2 bit used
	{ 2,  9,  8, -1 }, // 01 -> 9/8, 2 bit used
	{ 2, 12,  1, -1 }, // 10 -> 12/1, 2 bit used
	{ 2,  4, 11, -1 }  // 11 -> 4/11, 2 bit used
};
// extension table 22, prefix 01010001
static huffman_conv htab24_dec_ext22[ 8 ] = {
	{ 3, 12,  0, -1 }, // 000 -> 12/0, 3 bit used
	{ 3,  0, 11, -1 }, // 001 -> 0/11, 3 bit used
	{ 2,  3, 11, -1 }, // 010 -> 3/11, 2 bit used
	{ 2,  3, 11, -1 }, // 011 -> 3/11, 2 bit used
	{ 3, 11,  0, -1 }, // 100 -> 11/0, 3 bit used
	{ 3,  0, 10, -1 }, // 101 -> 0/10, 3 bit used
	{ 2,  1, 10, -1 }, // 110 -> 1/10, 2 bit used
	{ 2,  1, 10, -1 }  // 111 -> 1/10, 2 bit used
};
// extension table 23, prefix 01010010
static huffman_conv htab24_dec_ext23[ 4 ] = {
	{ 1, 11,  4, -1 }, // 00 -> 11/4, 1 bit used
	{ 1, 11,  4, -1 }, // 01 -> 11/4, 1 bit used
	{ 2,  6, 10, -1 }, // 10 -> 6/10, 2 bit used
	{ 2, 10,  6, -1 }  // 11 -> 10/6, 2 bit used
};
// extension table 24, prefix 01010011
static huffman_conv htab24_dec_ext24[ 8 ] = {
	{ 2,  7,  9, -1 }, // 000 -> 7/9, 2 bit used
	{ 2,  7,  9, -1 }, // 001 -> 7/9, 2 bit used
	{ 2,  9,  7, -1 }, // 010 -> 9/7, 2 bit used
	{ 2,  9,  7, -1 }, // 011 -> 9/7, 2 bit used
	{ 3, 10,  0, -1 }, // 100 -> 10/0, 3 bit used
	{ 3,  0,  9, -1 }, // 101 -> 0/9, 3 bit used
	{ 2,  9,  0, -1 }, // 110 -> 9/0, 2 bit used
	{ 2,  9,  0, -1 }  // 111 -> 9/0, 2 bit used
};
// extension table 25, prefix 01010100
static huffman_conv htab24_dec_ext25[ 2 ] = {
	{ 1, 11,  3, -1 }, // 0 -> 11/3, 1 bit used
	{ 1,  8,  8, -1 }  // 1 -> 8/8, 1 bit used
};
// extension table 26, prefix 01010101
static huffman_conv htab24_dec_ext26[ 4 ] = {
	{ 2,  2, 11, -1 }, // 00 -> 2/11, 2 bit used
	{ 2,  5, 10, -1 }, // 01 -> 5/10, 2 bit used
	{ 1, 11,  2, -1 }, // 10 -> 11/2, 1 bit used
	{ 1, 11,  2, -1 }  // 11 -> 11/2, 1 bit used
};
// extension table 27, prefix 01010110
static huffman_conv htab24_dec_ext27[ 4 ] = {
	{ 2, 10,  5, -1 }, // 00 -> 10/5, 2 bit used
	{ 2,  1, 11, -1 }, // 01 -> 1/11, 2 bit used
	{ 2, 11,  1, -1 }, // 10 -> 11/1, 2 bit used
	{ 2,  6,  9, -1 }  // 11 -> 6/9, 2 bit used
};
// extension table 28, prefix 01010111
static huffman_conv htab24_dec_ext28[ 2 ] = {
	{ 1,  9,  6, -1 }, // 0 -> 9/6, 1 bit used
	{ 1, 10,  4, -1 }  // 1 -> 10/4, 1 bit used
};
// extension table 29, prefix 01011000
static huffman_conv htab24_dec_ext29[ 4 ] = {
	{ 2,  4, 10, -1 }, // 00 -> 4/10, 2 bit used
	{ 2,  7,  8, -1 }, // 01 -> 7/8, 2 bit used
	{ 1,  8,  7, -1 }, // 10 -> 8/7, 1 bit used
	{ 1,  8,  7, -1 }  // 11 -> 8/7, 1 bit used
};
// extension table 30, prefix 01011001
static huffman_conv htab24_dec_ext30[ 2 ] = {
	{ 1,  3, 10, -1 }, // 0 -> 3/10, 1 bit used
	{ 1, 10,  3, -1 }  // 1 -> 10/3, 1 bit used
};
// extension table 31, prefix 01011010
static huffman_conv htab24_dec_ext31[ 2 ] = {
	{ 1,  5,  9, -1 }, // 0 -> 5/9, 1 bit used
	{ 1,  9,  5, -1 }  // 1 -> 9/5, 1 bit used
};
// extension table 32, prefix 01011011
static huffman_conv htab24_dec_ext32[ 2 ] = {
	{ 1,  2, 10, -1 }, // 0 -> 2/10, 1 bit used
	{ 1, 10,  2, -1 }  // 1 -> 10/2, 1 bit used
};
// extension table 33, prefix 01011100
static huffman_conv htab24_dec_ext33[ 2 ] = {
	{ 1, 10,  1, -1 }, // 0 -> 10/1, 1 bit used
	{ 1,  6,  8, -1 }  // 1 -> 6/8, 1 bit used
};
// extension table 34, prefix 01011101
static huffman_conv htab24_dec_ext34[ 2 ] = {
	{ 1,  8,  6, -1 }, // 0 -> 8/6, 1 bit used
	{ 1,  7,  7, -1 }  // 1 -> 7/7, 1 bit used
};
// extension table 35, prefix 01011110
static huffman_conv htab24_dec_ext35[ 2 ] = {
	{ 1,  4,  9, -1 }, // 0 -> 4/9, 1 bit used
	{ 1,  9,  4, -1 }  // 1 -> 9/4, 1 bit used
};
// extension table 36, prefix 01011111
static huffman_conv htab24_dec_ext36[ 2 ] = {
	{ 1,  3,  9, -1 }, // 0 -> 3/9, 1 bit used
	{ 1,  9,  3, -1 }  // 1 -> 9/3, 1 bit used
};
// extension table 37, prefix 01100000
static huffman_conv htab24_dec_ext37[ 2 ] = {
	{ 1,  5,  8, -1 }, // 0 -> 5/8, 1 bit used
	{ 1,  8,  5, -1 }  // 1 -> 8/5, 1 bit used
};
// extension table 38, prefix 01100001
static huffman_conv htab24_dec_ext38[ 2 ] = {
	{ 1,  2,  9, -1 }, // 0 -> 2/9, 1 bit used
	{ 1,  6,  7, -1 }  // 1 -> 6/7, 1 bit used
};
// extension table 39, prefix 01100010
static huffman_conv htab24_dec_ext39[ 2 ] = {
	{ 1,  7,  6, -1 }, // 0 -> 7/6, 1 bit used
	{ 1,  9,  2, -1 }  // 1 -> 9/2, 1 bit used
};
// extension table 40, prefix 01100011
static huffman_conv htab24_dec_ext40[ 2 ] = {
	{ 1,  1,  9, -1 }, // 0 -> 1/9, 1 bit used
	{ 1,  9,  1, -1 }  // 1 -> 9/1, 1 bit used
};
// extension table 41, prefix 01100100
static huffman_conv htab24_dec_ext41[ 2 ] = {
	{ 1,  4,  8, -1 }, // 0 -> 4/8, 1 bit used
	{ 1,  8,  4, -1 }  // 1 -> 8/4, 1 bit used
};
// extension table 42, prefix 01100101
static huffman_conv htab24_dec_ext42[ 2 ] = {
	{ 1,  5,  7, -1 }, // 0 -> 5/7, 1 bit used
	{ 1,  7,  5, -1 }  // 1 -> 7/5, 1 bit used
};
// extension table 43, prefix 01100110
static huffman_conv htab24_dec_ext43[ 2 ] = {
	{ 1,  3,  8, -1 }, // 0 -> 3/8, 1 bit used
	{ 1,  8,  3, -1 }  // 1 -> 8/3, 1 bit used
};
// extension table 44, prefix 01100111
static huffman_conv htab24_dec_ext44[ 2 ] = {
	{ 1,  6,  6, -1 }, // 0 -> 6/6, 1 bit used
	{ 1,  2,  8, -1 }  // 1 -> 2/8, 1 bit used
};
// extension table 45, prefix 01101000
static huffman_conv htab24_dec_ext45[ 2 ] = {
	{ 1,  8,  2, -1 }, // 0 -> 8/2, 1 bit used
	{ 1,  1,  8, -1 }  // 1 -> 1/8, 1 bit used
};
// extension table 46, prefix 01101001
static huffman_conv htab24_dec_ext46[ 2 ] = {
	{ 1,  4,  7, -1 }, // 0 -> 4/7, 1 bit used
	{ 1,  7,  4, -1 }  // 1 -> 7/4, 1 bit used
};
// extension table 47, prefix 01101010
static huffman_conv htab24_dec_ext47[ 4 ] = {
	{ 1,  8,  1, -1 }, // 00 -> 8/1, 1 bit used
	{ 1,  8,  1, -1 }, // 01 -> 8/1, 1 bit used
	{ 2,  0,  8, -1 }, // 10 -> 0/8, 2 bit used
	{ 2,  8,  0, -1 }  // 11 -> 8/0, 2 bit used
};
// extension table 48, prefix 01101011
static huffman_conv htab24_dec_ext48[ 2 ] = {
	{ 1,  5,  6, -1 }, // 0 -> 5/6, 1 bit used
	{ 1,  6,  5, -1 }  // 1 -> 6/5, 1 bit used
};
// extension table 49, prefix 01101100
static huffman_conv htab24_dec_ext49[ 4 ] = {
	{ 1,  1,  7, -1 }, // 00 -> 1/7, 1 bit used
	{ 1,  1,  7, -1 }, // 01 -> 1/7, 1 bit used
	{ 2,  0,  7, -1 }, // 10 -> 0/7, 2 bit used
	{ 2,  7,  0, -1 }  // 11 -> 7/0, 2 bit used
};
// extension table 50, prefix 01101110
static huffman_conv htab24_dec_ext50[ 2 ] = {
	{ 1,  3,  7, -1 }, // 0 -> 3/7, 1 bit used
	{ 1,  2,  7, -1 }  // 1 -> 2/7, 1 bit used
};
// extension table 51, prefix 01111100
static huffman_conv htab24_dec_ext51[ 2 ] = {
	{ 1,  0,  6, -1 }, // 0 -> 0/6, 1 bit used
	{ 1,  6,  0, -1 }  // 1 -> 6/0, 1 bit used
};
// extension table 52, prefix 10000011
static huffman_conv htab24_dec_ext52[ 2 ] = {
	{ 1,  0,  5, -1 }, // 0 -> 0/5, 1 bit used
	{ 1,  5,  0, -1 }  // 1 -> 5/0, 1 bit used
};
// big values conversion table #24, total size: 470, ext tables: 52
static huffman_conv_set htab24_dec[ 53 ] = {
	{ htab24_dec_start, 8 }, // start table
	{ htab24_dec_ext1, 3 }, // ext table #1
	{ htab24_dec_ext2, 3 }, // ext table #2
	{ htab24_dec_ext3, 3 }, // ext table #3
	{ htab24_dec_ext4, 3 }, // ext table #4
	{ htab24_dec_ext5, 4 }, // ext table #5
	{ htab24_dec_ext6, 3 }, // ext table #6
	{ htab24_dec_ext7, 3 }, // ext table #7
	{ htab24_dec_ext8, 3 }, // ext table #8
	{ htab24_dec_ext9, 2 }, // ext table #9
	{ htab24_dec_ext10, 2 }, // ext table #10
	{ htab24_dec_ext11, 2 }, // ext table #11
	{ htab24_dec_ext12, 2 }, // ext table #12
	{ htab24_dec_ext13, 2 }, // ext table #13
	{ htab24_dec_ext14, 2 }, // ext table #14
	{ htab24_dec_ext15, 2 }, // ext table #15
	{ htab24_dec_ext16, 2 }, // ext table #16
	{ htab24_dec_ext17, 2 }, // ext table #17
	{ htab24_dec_ext18, 3 }, // ext table #18
	{ htab24_dec_ext19, 2 }, // ext table #19
	{ htab24_dec_ext20, 2 }, // ext table #20
	{ htab24_dec_ext21, 2 }, // ext table #21
	{ htab24_dec_ext22, 3 }, // ext table #22
	{ htab24_dec_ext23, 2 }, // ext table #23
	{ htab24_dec_ext24, 3 }, // ext table #24
	{ htab24_dec_ext25, 1 }, // ext table #25
	{ htab24_dec_ext26, 2 }, // ext table #26
	{ htab24_dec_ext27, 2 }, // ext table #27
	{ htab24_dec_ext28, 1 }, // ext table #28
	{ htab24_dec_ext29, 2 }, // ext table #29
	{ htab24_dec_ext30, 1 }, // ext table #30
	{ htab24_dec_ext31, 1 }, // ext table #31
	{ htab24_dec_ext32, 1 }, // ext table #32
	{ htab24_dec_ext33, 1 }, // ext table #33
	{ htab24_dec_ext34, 1 }, // ext table #34
	{ htab24_dec_ext35, 1 }, // ext table #35
	{ htab24_dec_ext36, 1 }, // ext table #36
	{ htab24_dec_ext37, 1 }, // ext table #37
	{ htab24_dec_ext38, 1 }, // ext table #38
	{ htab24_dec_ext39, 1 }, // ext table #39
	{ htab24_dec_ext40, 1 }, // ext table #40
	{ htab24_dec_ext41, 1 }, // ext table #41
	{ htab24_dec_ext42, 1 }, // ext table #42
	{ htab24_dec_ext43, 1 }, // ext table #43
	{ htab24_dec_ext44, 1 }, // ext table #44
	{ htab24_dec_ext45, 1 }, // ext table #45
	{ htab24_dec_ext46, 1 }, // ext table #46
	{ htab24_dec_ext47, 2 }, // ext table #47
	{ htab24_dec_ext48, 1 }, // ext table #48
	{ htab24_dec_ext49, 2 }, // ext table #49
	{ htab24_dec_ext50, 1 }, // ext table #50
	{ htab24_dec_ext51, 1 }, // ext table #51
	{ htab24_dec_ext52, 1 }  // ext table #52
};


/* -----------------------------------------------
	huffman tables for encoding of big values
	----------------------------------------------- */
static huffman_enc_table bv_enc_table[ 32 ] = {
	{ htab0_enc,   0,  0 +    0 }, // table 0
	{ htab1_enc,   0,  1 +    0 }, // table 1
	{ htab2_enc,   0,  2 +    0 }, // table 2
	{ htab3_enc,   0,  2 +    0 }, // table 3
	{ NULL,        0,  0 +    0 }, // not used
	{ htab5_enc,   0,  3 +    0 }, // table 5
	{ htab6_enc,   0,  3 +    0 }, // table 6
	{ htab7_enc,   0,  5 +    0 }, // table 7
	{ htab8_enc,   0,  5 +    0 }, // table 8
	{ htab9_enc,   0,  5 +    0 }, // table 9
	{ htab10_enc,  0,  7 +    0 }, // table 10
	{ htab11_enc,  0,  7 +    0 }, // table 11
	{ htab12_enc,  0,  7 +    0 }, // table 12
	{ htab13_enc,  0, 15 +    0 }, // table 13
	{ NULL,        0,  0 +    0 }, // not used
	{ htab15_enc,  0, 15 +    0 }, // table 15
	{ htab16_enc,  1, 15 +    1 }, // table 16
	{ htab16_enc,  2, 15 +    3 }, // table 17
	{ htab16_enc,  3, 15 +    7 }, // table 18
	{ htab16_enc,  4, 15 +   15 }, // table 19
	{ htab16_enc,  6, 15 +   63 }, // table 20
	{ htab16_enc,  8, 15 +  255 }, // table 21
	{ htab16_enc, 10, 15 + 1023 }, // table 22
	{ htab16_enc, 13, 15 + 8191 }, // table 23
	{ htab24_enc,  4, 15 +   15 }, // table 24
	{ htab24_enc,  5, 15 +   31 }, // table 25
	{ htab24_enc,  6, 15 +   63 }, // table 26
	{ htab24_enc,  7, 15 +  127 }, // table 27
	{ htab24_enc,  8, 15 +  255 }, // table 28
	{ htab24_enc,  9, 15 +  511 }, // table 29
	{ htab24_enc, 11, 15 + 2047 }, // table 30
	{ htab24_enc, 13, 15 + 8191 }  // table 31
};


/* -----------------------------------------------
	huffman tables for decoding of big values
	----------------------------------------------- */
static huffman_dec_table bv_dec_table[ 32 ] = {
	{ htab0_dec,   0,  0 +    0 }, // table 0
	{ htab1_dec,   0,  1 +    0 }, // table 1
	{ htab2_dec,   0,  2 +    0 }, // table 2
	{ htab3_dec,   0,  2 +    0 }, // table 3
	{ NULL,        0,  0 +    0 }, // not used
	{ htab5_dec,   0,  3 +    0 }, // table 5
	{ htab6_dec,   0,  3 +    0 }, // table 6
	{ htab7_dec,   0,  5 +    0 }, // table 7
	{ htab8_dec,   0,  5 +    0 }, // table 8
	{ htab9_dec,   0,  5 +    0 }, // table 9
	{ htab10_dec,  0,  7 +    0 }, // table 10
	{ htab11_dec,  0,  7 +    0 }, // table 11
	{ htab12_dec,  0,  7 +    0 }, // table 12
	{ htab13_dec,  0, 15 +    0 }, // table 13
	{ NULL,        0,  0 +    0 }, // not used
	{ htab15_dec,  0, 15 +    0 }, // table 15
	{ htab16_dec,  1, 15 +    1 }, // table 16
	{ htab16_dec,  2, 15 +    3 }, // table 17
	{ htab16_dec,  3, 15 +    7 }, // table 18
	{ htab16_dec,  4, 15 +   15 }, // table 19
	{ htab16_dec,  6, 15 +   63 }, // table 20
	{ htab16_dec,  8, 15 +  255 }, // table 21
	{ htab16_dec, 10, 15 + 1023 }, // table 22
	{ htab16_dec, 13, 15 + 8191 }, // table 23
	{ htab24_dec,  4, 15 +   15 }, // table 24
	{ htab24_dec,  5, 15 +   31 }, // table 25
	{ htab24_dec,  6, 15 +   63 }, // table 26
	{ htab24_dec,  7, 15 +  127 }, // table 27
	{ htab24_dec,  8, 15 +  255 }, // table 28
	{ htab24_dec,  9, 15 +  511 }, // table 29
	{ htab24_dec, 11, 15 + 2047 }, // table 30
	{ htab24_dec, 13, 15 + 8191 }  // table 31
};

